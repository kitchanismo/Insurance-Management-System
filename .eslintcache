[{"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\index.tsx":"1","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\App.tsx":"2","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\common\\MyAlert\\MyAlert.tsx":"3","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\common\\MyCard\\MyCard.tsx":"4","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\common\\MyForm\\MyForm.tsx":"5","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\common\\MyNav\\MyNav.tsx":"6","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\common\\MyDrawer\\MyDrawer.tsx":"7","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\pages\\Dashboard\\Dashboard.tsx":"8","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\providers\\Providers.tsx":"9","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Layout\\Layout.tsx":"10","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Common\\MyAlert\\MyAlert.tsx":"11","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Common\\MyNav\\MyNav.tsx":"12","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Pages\\Users\\ViewUser\\index.ts":"13","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Common\\MyDrawer\\MyDrawer.tsx":"14","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Pages\\Dashboard\\Dashboard.tsx":"15","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Pages\\Users\\ViewUser\\ViewUser.tsx":"16","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Pages\\Users\\NewUser\\NewUser.tsx":"17","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Pages\\Users\\Users.tsx":"18","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\utils\\helper.ts":"19","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Pages\\Users\\UserCard\\UserCard.tsx":"20","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Common\\MyForm\\MyForm.tsx":"21","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Common\\MyCard\\MyCard.tsx":"22","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\providers\\index.tsx":"23","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Layout\\index.tsx":"24","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Common\\MyNav\\index.tsx":"25","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Common\\MyAlert\\index.tsx":"26","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\providers\\contexts\\globalContext.tsx":"27","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\providers\\services\\useGlobalState.tsx":"28","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\providers\\contexts\\userContext.tsx":"29","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\providers\\services\\useUserService.tsx":"30","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Common\\MyDrawer\\index.tsx":"31","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Pages\\Users\\index.tsx":"32","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Pages\\Dashboard\\index.tsx":"33","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Pages\\Users\\NewUser\\index.tsx":"34","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Pages\\Users\\NewUser\\validator.tsx":"35","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Pages\\Users\\UserCard\\index.tsx":"36","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Common\\MyCard\\index.tsx":"37","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Common\\MyForm\\index.tsx":"38"},{"size":328,"mtime":1611242718771,"results":"39","hashOfConfig":"40"},{"size":896,"mtime":1611242736768,"results":"41","hashOfConfig":"40"},{"size":818,"mtime":1611240120010,"results":"42","hashOfConfig":"40"},{"size":1136,"mtime":1611240404207,"results":"43","hashOfConfig":"40"},{"size":6590,"mtime":1611240770403,"results":"44","hashOfConfig":"40"},{"size":1822,"mtime":1611240858131,"results":"45","hashOfConfig":"40"},{"size":2588,"mtime":1611240705885,"results":"46","hashOfConfig":"40"},{"size":165,"mtime":1611240976468,"results":"47","hashOfConfig":"40"},{"size":764,"mtime":1611242702760,"results":"48","hashOfConfig":"40"},{"size":659,"mtime":1611242435415,"results":"49","hashOfConfig":"40"},{"size":818,"mtime":1611240120010,"results":"50","hashOfConfig":"40"},{"size":1822,"mtime":1611242468589,"results":"51","hashOfConfig":"40"},{"size":28,"mtime":1611242009694,"results":"52","hashOfConfig":"40"},{"size":2588,"mtime":1611240705885,"results":"53","hashOfConfig":"40"},{"size":165,"mtime":1611240976468,"results":"54","hashOfConfig":"40"},{"size":3839,"mtime":1611242468811,"results":"55","hashOfConfig":"40"},{"size":4711,"mtime":1611242564645,"results":"56","hashOfConfig":"40"},{"size":2918,"mtime":1611242548378,"results":"57","hashOfConfig":"40"},{"size":1459,"mtime":1611242808169,"results":"58","hashOfConfig":"40"},{"size":2711,"mtime":1611242468858,"results":"59","hashOfConfig":"40"},{"size":6590,"mtime":1611240770403,"results":"60","hashOfConfig":"40"},{"size":1136,"mtime":1611240404207,"results":"61","hashOfConfig":"40"},{"size":29,"mtime":1611243103062,"results":"62","hashOfConfig":"40"},{"size":26,"mtime":1611243048475,"results":"63","hashOfConfig":"40"},{"size":25,"mtime":1611243034734,"results":"64","hashOfConfig":"40"},{"size":27,"mtime":1611243005833,"results":"65","hashOfConfig":"40"},{"size":526,"mtime":1611243090265,"results":"66","hashOfConfig":"40"},{"size":888,"mtime":1611243109491,"results":"67","hashOfConfig":"40"},{"size":306,"mtime":1611243095746,"results":"68","hashOfConfig":"40"},{"size":346,"mtime":1611243113641,"results":"69","hashOfConfig":"40"},{"size":28,"mtime":1611243022211,"results":"70","hashOfConfig":"40"},{"size":25,"mtime":1611243082538,"results":"71","hashOfConfig":"40"},{"size":29,"mtime":1611242987395,"results":"72","hashOfConfig":"40"},{"size":27,"mtime":1611243066552,"results":"73","hashOfConfig":"40"},{"size":666,"mtime":1611243070379,"results":"74","hashOfConfig":"40"},{"size":28,"mtime":1611243077065,"results":"75","hashOfConfig":"40"},{"size":26,"mtime":1611243015451,"results":"76","hashOfConfig":"40"},{"size":26,"mtime":1611243030289,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"csx4bj",{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"80"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"87"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"87"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"87"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"80"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"80"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"80"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"80"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\index.tsx",[],["162","163"],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\App.tsx",["164","165"],"import React, { useContext, useState } from 'react'\nimport { Nav } from 'components/Common/MyNav'\nimport Container from '@material-ui/core/Container'\nimport makeStyles from '@material-ui/core/styles/makeStyles'\nimport { Layout } from 'components/Layout'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport { MyAlert } from 'components/Common/MyAlert'\n\nconst App: React.FC = (props) => {\n  const styles = useStyles()\n\n  return (\n    <>\n      <CssBaseline />\n      <MyAlert />\n      <Nav></Nav>\n      <Container maxWidth='xs' className={styles.container}>\n        <Layout />\n      </Container>\n    </>\n  )\n}\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    padding: 20,\n    height: '100%',\n    backgroundColor: theme.palette.background.default,\n  },\n  fab: {\n    position: 'absolute',\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n  },\n}))\n\nexport default App\n","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\common\\MyAlert\\MyAlert.tsx",["166"],"import React, { useContext } from 'react'\r\n\r\nimport Snackbar from '@material-ui/core/Snackbar'\r\nimport Alert from '@material-ui/lab/Alert'\r\nimport GlobalContext, { GlobalProps } from 'providers/contexts/globalContext'\r\nexport interface MyAlertProps {}\r\n\r\nexport const MyAlert: React.SFC<MyAlertProps> = () => {\r\n  const ctx = useContext(GlobalContext)\r\n\r\n  return (\r\n    ctx &&\r\n    ctx.alert && (\r\n      <Snackbar\r\n        anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n        open={!!ctx?.alert}\r\n        autoHideDuration={3000}\r\n        onClose={() => ctx.setAlert(null)}\r\n      >\r\n        <Alert\r\n          variant='filled'\r\n          onClose={() => ctx.setAlert(null)}\r\n          severity={ctx.alert.type}\r\n        >\r\n          {ctx.alert.message}\r\n        </Alert>\r\n      </Snackbar>\r\n    )\r\n  )\r\n}\r\n",["167","168"],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\common\\MyCard\\MyCard.tsx",["169","170"],"import * as React from 'react'\r\nimport makeStyles from '@material-ui/styles/makeStyles'\r\nimport createStyles from '@material-ui/styles/createStyles'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Card from '@material-ui/core/Card'\r\nimport { Theme } from '@material-ui/core/styles'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport CardContent from '@material-ui/core/CardContent'\r\n\r\nexport interface MyCardProps {\r\n  title: any\r\n  style?: React.CSSProperties\r\n}\r\n\r\nexport const MyCard: React.FC<MyCardProps> = ({ title, style, ...props }) => {\r\n  const styles = useStyles()\r\n  return (\r\n    <Card style={style}>\r\n      <div className={styles.cardHeader}>\r\n        <Typography className={styles.titleHeader} component='h5' variant='h5'>\r\n          {title}\r\n        </Typography>\r\n      </div>\r\n      {props.children}\r\n    </Card>\r\n  )\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    cardHeader: {\r\n      backgroundColor: theme.palette.primary.main,\r\n      paddingLeft: 15,\r\n      paddingTop: 10,\r\n      paddingBottom: 10,\r\n    },\r\n    titleHeader: {\r\n      color: 'white',\r\n    },\r\n  }),\r\n)\r\n","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\common\\MyForm\\MyForm.tsx",["171","172","173"],"import React, { useContext } from 'react'\nimport Joi from 'joi'\nimport TextField from '@material-ui/core/TextField'\nimport Grid from '@material-ui/core/Grid'\nimport FormControl from '@material-ui/core/FormControl'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport Select from '@material-ui/core/Select'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Button from '@material-ui/core/Button'\nimport IconButton from '@material-ui/core/IconButton'\nimport {\n  KeyboardDatePicker,\n  MuiPickersUtilsProvider,\n} from '@material-ui/pickers'\nimport DateFnsUtils from '@date-io/date-fns/build'\nimport FormHelperText from '@material-ui/core/FormHelperText'\nimport classes from '*.module.css'\nimport { OutlinedInput, InputAdornment } from '@material-ui/core'\nimport { Visibility, VisibilityOff } from '@material-ui/icons'\n\nexport interface MyFormProps<T> {\n  state: [T, React.Dispatch<React.SetStateAction<T>>]\n  onSubmit: () => Promise<any>\n  validator?: {}\n  children?: (props: RenderProps) => JSX.Element\n}\n\nexport interface InputProps {\n  value?: any\n  name: string\n  placeholder?: string\n  type?: string | 'text'\n  label: string\n  isMultiline?: boolean\n  onTogglePassword?: React.Dispatch<React.SetStateAction<boolean>>\n}\n\nexport interface SelectProps extends InputProps {\n  options: string[]\n}\n\nexport interface RenderProps {\n  myInput: (input: InputProps) => JSX.Element\n  myInputPassword: (input: InputProps) => JSX.Element\n  myDateTimePicker: (input: InputProps) => JSX.Element\n  myButton: (text?: string) => JSX.Element\n  mySelect: (select: SelectProps) => JSX.Element\n}\n\nexport function MyForm<T>(props: MyFormProps<T>) {\n  const [data, setData] = props.state\n\n  const [isDisable, setIsDisable] = React.useState<boolean>(false)\n\n  const [errors, setErrors] = React.useState<any>(null)\n\n  const onValidate = () => {\n    const schema = Joi.object(props.validator).options({\n      abortEarly: false,\n    })\n\n    const { error } = schema.validate(data)\n\n    if (!error) return null\n\n    const _errors: any = {}\n\n    error.details.forEach((item) => (_errors[item.path[0]] = item.message))\n\n    return _errors\n  }\n\n  const onSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault()\n\n    const hasErrors = onValidate()\n\n    setIsDisable(true)\n\n    if (hasErrors) {\n      setErrors(hasErrors)\n      setIsDisable(false)\n      return\n    }\n\n    return props\n      .onSubmit()\n      .then(() => {\n        setErrors({})\n        setIsDisable(false)\n      })\n      .catch((error) => {\n        setIsDisable(false)\n      })\n  }\n\n  const onChange = (e: any) => {\n    const { value, name } = e.target\n\n    setData({\n      ...data,\n      [name]: value,\n    })\n  }\n\n  const myInput = (input: InputProps) => {\n    const error = errors && errors[input.name]\n    return (\n      <Grid item xs={12} key={input.name}>\n        <TextField\n          multiline={input.isMultiline}\n          fullWidth\n          name={input.name}\n          variant='outlined'\n          label={input.label}\n          type={input.type}\n          value={input.value}\n          onChange={onChange}\n          error={!!error}\n          helperText={error}\n        />\n      </Grid>\n    )\n  }\n\n  const myInputPassword = (input: InputProps) => {\n    const error = errors && errors[input.name]\n\n    return (\n      <Grid item xs={12} key={input.name}>\n        <FormControl fullWidth variant='outlined' error={!!error}>\n          <InputLabel htmlFor={input.label}>{input.label}</InputLabel>\n          <OutlinedInput\n            id={input.name}\n            name={input.name}\n            type={input.type}\n            value={input.value}\n            onChange={onChange}\n            labelWidth={70}\n            endAdornment={\n              <InputAdornment position='end'>\n                <IconButton\n                  aria-label='toggle password visibility'\n                  onClick={() =>\n                    input.onTogglePassword?.call(\n                      null,\n                      (isVisible) => !isVisible,\n                    )\n                  }\n                >\n                  {input.type !== 'password' ? (\n                    <Visibility />\n                  ) : (\n                    <VisibilityOff />\n                  )}\n                </IconButton>\n              </InputAdornment>\n            }\n          />\n          <FormHelperText>{error}</FormHelperText>\n        </FormControl>\n      </Grid>\n    )\n  }\n\n  const myDateTimePicker = (input: InputProps) => {\n    return (\n      <Grid item xs={12} key={input.name}>\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n          <KeyboardDatePicker\n            fullWidth\n            inputVariant='outlined'\n            disableToolbar\n            variant='dialog'\n            format='MM/dd/yyyy'\n            margin='none'\n            label={input.label}\n            value={input.value}\n            onChange={(date) =>\n              setData({\n                ...data,\n                [input.name]: date?.toLocaleDateString(),\n              })\n            }\n            KeyboardButtonProps={{\n              'aria-label': 'change date',\n            }}\n          />\n        </MuiPickersUtilsProvider>\n      </Grid>\n    )\n  }\n\n  const mySelect = (select: SelectProps) => {\n    const error = errors && errors[select.name]\n    return (\n      <Grid item xs={12} key={select.name}>\n        <FormControl fullWidth variant='outlined' error={!!error}>\n          <InputLabel id={select.label}>{select.label}</InputLabel>\n          <Select\n            labelId={select.label}\n            id={select.name}\n            name={select.name}\n            value={select.value === null ? '' : select.value}\n            onChange={onChange}\n            labelWidth={60}\n          >\n            {select.options.map((option, index) => (\n              <MenuItem value={option}>{option}</MenuItem>\n            ))}\n          </Select>\n          <FormHelperText>{error}</FormHelperText>\n        </FormControl>\n      </Grid>\n    )\n  }\n\n  const myButton = (text?: string) => {\n    return (\n      <Grid item xs={12}>\n        <Button\n          style={{ paddingTop: 15, paddingBottom: 15 }}\n          fullWidth\n          type='submit'\n          variant='contained'\n          color='primary'\n        >\n          {text ?? 'SUBMIT'}\n        </Button>\n      </Grid>\n    )\n  }\n\n  return (\n    <form onSubmit={onSubmit}>\n      <Grid container spacing={2} direction='column'>\n        {props.children?.call(null, {\n          myInput,\n          myInputPassword,\n          mySelect,\n          myDateTimePicker,\n          myButton,\n        } as RenderProps)}\n      </Grid>\n    </form>\n  )\n}\n","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\common\\MyNav\\MyNav.tsx",[],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\common\\MyDrawer\\MyDrawer.tsx",["174"],"import Drawer from '@material-ui/core/Drawer'\r\nimport List from '@material-ui/core/List'\r\nimport ArrowBack from '@material-ui/icons/ArrowBack'\r\nimport UsersIcon from '@material-ui/icons/People'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport makeStyles from '@material-ui/core/styles/makeStyles'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Divider from '@material-ui/core/Divider'\r\nimport * as React from 'react'\r\nimport Grid from '@material-ui/core/Grid/Grid'\r\nimport Switch from '@material-ui/core/Switch'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\r\nimport GlobalContext from 'providers/contexts/globalContext'\r\nimport DashboardIcon from '@material-ui/icons/Dashboard'\r\n\r\nexport interface MyDrawerProps {\r\n  isActive: boolean\r\n  onToggle: Function\r\n}\r\n\r\nexport const MyDrawer: React.FC<MyDrawerProps> = (props) => {\r\n  const styles = useStyles()\r\n\r\n  const ctx = React.useContext(GlobalContext)\r\n\r\n  const menus = [\r\n    { name: 'Dashboard', icon: <DashboardIcon /> },\r\n    { name: 'User Management', icon: <UsersIcon /> },\r\n  ]\r\n\r\n  const list = () => (\r\n    <>\r\n      <List>\r\n        {menus.map((menu, index) => (\r\n          <ListItem style={{ paddingLeft: 0 }} button key={index}>\r\n            <ListItemIcon style={{ paddingLeft: 20 }}>{menu.icon}</ListItemIcon>\r\n\r\n            <ListItemText\r\n              primary={menu.name}\r\n              onClick={() => props.onToggle(menu.name)}\r\n            />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </>\r\n  )\r\n\r\n  return (\r\n    <Drawer anchor='left' open={props.isActive}>\r\n      <Grid container justify='flex-end'>\r\n        <IconButton\r\n          onClick={() => props.onToggle()}\r\n          edge='start'\r\n          color='inherit'\r\n          aria-label='menu'\r\n        >\r\n          <ArrowBack />\r\n        </IconButton>\r\n      </Grid>\r\n      {list()}\r\n      <Divider style={{ marginLeft: 10, marginRight: 10 }}></Divider>\r\n      <FormControlLabel\r\n        style={{ marginLeft: 10, marginTop: 10 }}\r\n        control={\r\n          <Switch\r\n            checked={ctx?.isDark}\r\n            onChange={() => ctx?.setIsDark((isDark) => !isDark)}\r\n            name='checkedA'\r\n            inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n          />\r\n        }\r\n        label='Dark Mode'\r\n      />\r\n    </Drawer>\r\n  )\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  close: {\r\n    paddingTop: 5,\r\n    paddingRight: 5,\r\n  },\r\n}))\r\n\r\nexport default MyDrawer\r\n","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\pages\\Dashboard\\Dashboard.tsx",[],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\providers\\Providers.tsx",[],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Layout\\Layout.tsx",[],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Common\\MyAlert\\MyAlert.tsx",["175"],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Common\\MyNav\\MyNav.tsx",[],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Pages\\Users\\ViewUser\\index.ts",[],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Common\\MyDrawer\\MyDrawer.tsx",["176"],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Pages\\Dashboard\\Dashboard.tsx",[],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Pages\\Users\\ViewUser\\ViewUser.tsx",[],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Pages\\Users\\NewUser\\NewUser.tsx",["177"],"import Button from '@material-ui/core/Button'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport { MyForm, MyFormProps, InputProps } from 'components/Common/MyForm'\r\nimport User from 'models/user'\r\nimport GlobalContext from 'providers/contexts/globalContext'\r\nimport React, { useContext } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport validator from './validator'\r\n\r\nexport interface NewUserProps {}\r\n\r\nexport const NewUser: React.SFC<NewUserProps> = () => {\r\n  const ctx = useContext(GlobalContext)\r\n\r\n  const history = useHistory()\r\n\r\n  const [newUser, setNewUser] = React.useState<User>({\r\n    username: '',\r\n    password: '',\r\n    firstname: '',\r\n    middlename: '',\r\n    lastname: '',\r\n    address: '',\r\n    contact: '',\r\n    gender: null,\r\n    civil: null,\r\n    birthdate: null,\r\n    position: null,\r\n    branch: null,\r\n    team: null,\r\n  })\r\n\r\n  const onSubmit = async () => {\r\n    ctx?.setAlert({ message: 'Successfully added', type: 'success' })\r\n    return Promise.resolve()\r\n  }\r\n\r\n  const formProps: MyFormProps<User> = {\r\n    state: [newUser, setNewUser],\r\n    onSubmit,\r\n    validator,\r\n  }\r\n\r\n  const [isVisible, setIsVisible] = React.useState<boolean>(false)\r\n\r\n  return (\r\n    <Grid container direction='column'>\r\n      <MyForm {...formProps}>\r\n        {({\r\n          myInput,\r\n          myInputPassword,\r\n          mySelect,\r\n          myDateTimePicker,\r\n          myButton,\r\n        }) => (\r\n          <>\r\n            {myInput({\r\n              label: 'Username',\r\n              value: newUser.username,\r\n              name: 'username',\r\n            })}\r\n            {myInputPassword({\r\n              label: 'Password',\r\n              value: newUser.password,\r\n              name: 'password',\r\n              type: isVisible ? 'text' : 'password',\r\n              onTogglePassword: setIsVisible,\r\n            })}\r\n            {myInput({\r\n              label: 'Firstname',\r\n              value: newUser.firstname,\r\n              name: 'firstname',\r\n            })}\r\n            {myInput({\r\n              label: 'Middlename',\r\n              value: newUser.middlename,\r\n              name: 'middlename',\r\n            })}\r\n            {myInput({\r\n              label: 'Lastname',\r\n              value: newUser.lastname,\r\n              name: 'lastname',\r\n            })}\r\n            {myInput({\r\n              label: 'Contact Number',\r\n              value: newUser.contact,\r\n              name: 'contact',\r\n            })}\r\n\r\n            {myInput({\r\n              label: 'Address',\r\n              value: newUser.address,\r\n              name: 'address',\r\n              isMultiline: true,\r\n            })}\r\n            {mySelect({\r\n              label: 'Gender',\r\n              value: newUser.gender,\r\n              name: 'gender',\r\n              options: ['Male', 'Female', 'Other'],\r\n            })}\r\n            {mySelect({\r\n              label: 'Civil Status',\r\n              value: newUser.civil,\r\n              name: 'civil',\r\n              options: ['Single', 'Married', 'Widowed'],\r\n            })}\r\n\r\n            {mySelect({\r\n              label: 'Position',\r\n              value: newUser.position,\r\n              name: 'position',\r\n              options: [\r\n                'Sales Agent',\r\n                'Branch Manager',\r\n                'Agency Manager',\r\n                'Supervisor',\r\n                'Admin',\r\n              ],\r\n            })}\r\n\r\n            {mySelect({\r\n              label: 'Branch',\r\n              value: newUser.branch,\r\n              name: 'branch',\r\n              options: ['CEBU', 'MAKATI', 'MANILA'],\r\n            })}\r\n\r\n            {mySelect({\r\n              label: 'Team',\r\n              value: newUser.team,\r\n              name: 'team',\r\n              options: ['ABC', '123', 'XYZ'],\r\n            })}\r\n\r\n            {myDateTimePicker({\r\n              label: 'Birthdate',\r\n              value: newUser.birthdate,\r\n              name: 'birthdate',\r\n            })}\r\n\r\n            <Grid\r\n              style={{ paddingLeft: 18, paddingTop: 10, paddingBottom: 5 }}\r\n              container\r\n              xs={12}\r\n              justify='center'\r\n              spacing={2}\r\n            >\r\n              <Grid item xs={6}>\r\n                <Button\r\n                  onClick={() => history.push('/users')}\r\n                  style={{ paddingTop: 15, paddingBottom: 15 }}\r\n                  fullWidth\r\n                  variant='contained'\r\n                  color='default'\r\n                >\r\n                  BACK\r\n                </Button>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                {myButton()}\r\n              </Grid>\r\n            </Grid>\r\n          </>\r\n        )}\r\n      </MyForm>\r\n    </Grid>\r\n  )\r\n}\r\n","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Pages\\Users\\Users.tsx",[],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\utils\\helper.ts",[],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Pages\\Users\\UserCard\\UserCard.tsx",[],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Common\\MyForm\\MyForm.tsx",["178","179","180"],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Common\\MyCard\\MyCard.tsx",["181","182"],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\providers\\index.tsx",[],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Layout\\index.tsx",[],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Common\\MyNav\\index.tsx",[],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Common\\MyAlert\\index.tsx",[],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\providers\\contexts\\globalContext.tsx",[],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\providers\\services\\useGlobalState.tsx",[],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\providers\\contexts\\userContext.tsx",[],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\providers\\services\\useUserService.tsx",[],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Common\\MyDrawer\\index.tsx",[],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Pages\\Users\\index.tsx",[],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Pages\\Dashboard\\index.tsx",[],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Pages\\Users\\NewUser\\index.tsx",[],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Pages\\Users\\NewUser\\validator.tsx",[],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Pages\\Users\\UserCard\\index.tsx",[],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Common\\MyCard\\index.tsx",[],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Common\\MyForm\\index.tsx",[],{"ruleId":"183","replacedBy":"184"},{"ruleId":"185","replacedBy":"186"},{"ruleId":"187","severity":1,"message":"188","line":1,"column":17,"nodeType":"189","messageId":"190","endLine":1,"endColumn":27},{"ruleId":"187","severity":1,"message":"191","line":1,"column":29,"nodeType":"189","messageId":"190","endLine":1,"endColumn":37},{"ruleId":"187","severity":1,"message":"192","line":5,"column":25,"nodeType":"189","messageId":"190","endLine":5,"endColumn":36},{"ruleId":"183","replacedBy":"193"},{"ruleId":"185","replacedBy":"194"},{"ruleId":"187","severity":1,"message":"195","line":7,"column":8,"nodeType":"189","messageId":"190","endLine":7,"endColumn":12},{"ruleId":"187","severity":1,"message":"196","line":8,"column":8,"nodeType":"189","messageId":"190","endLine":8,"endColumn":19},{"ruleId":"187","severity":1,"message":"188","line":1,"column":17,"nodeType":"189","messageId":"190","endLine":1,"endColumn":27},{"ruleId":"187","severity":1,"message":"197","line":17,"column":8,"nodeType":"189","messageId":"190","endLine":17,"endColumn":15},{"ruleId":"187","severity":1,"message":"198","line":53,"column":10,"nodeType":"189","messageId":"190","endLine":53,"endColumn":19},{"ruleId":"187","severity":1,"message":"199","line":24,"column":9,"nodeType":"189","messageId":"190","endLine":24,"endColumn":15},{"ruleId":"187","severity":1,"message":"192","line":5,"column":25,"nodeType":"189","messageId":"190","endLine":5,"endColumn":36},{"ruleId":"187","severity":1,"message":"199","line":24,"column":9,"nodeType":"189","messageId":"190","endLine":24,"endColumn":15},{"ruleId":"187","severity":1,"message":"200","line":3,"column":31,"nodeType":"189","messageId":"190","endLine":3,"endColumn":41},{"ruleId":"187","severity":1,"message":"188","line":1,"column":17,"nodeType":"189","messageId":"190","endLine":1,"endColumn":27},{"ruleId":"187","severity":1,"message":"197","line":17,"column":8,"nodeType":"189","messageId":"190","endLine":17,"endColumn":15},{"ruleId":"187","severity":1,"message":"198","line":53,"column":10,"nodeType":"189","messageId":"190","endLine":53,"endColumn":19},{"ruleId":"187","severity":1,"message":"195","line":7,"column":8,"nodeType":"189","messageId":"190","endLine":7,"endColumn":12},{"ruleId":"187","severity":1,"message":"196","line":8,"column":8,"nodeType":"189","messageId":"190","endLine":8,"endColumn":19},"no-native-reassign",["201"],"no-negated-in-lhs",["202"],"@typescript-eslint/no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'GlobalProps' is defined but never used.",["201"],["202"],"'Grid' is defined but never used.","'CardContent' is defined but never used.","'classes' is defined but never used.","'isDisable' is assigned a value but never used.","'styles' is assigned a value but never used.","'InputProps' is defined but never used.","no-global-assign","no-unsafe-negation"]