[{"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\index.tsx":"1","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\App.tsx":"2","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\providers\\index.tsx":"3","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\providers\\contexts\\globalContext.tsx":"4","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\routes\\index.tsx":"5","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\common\\nav\\index.tsx":"6","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\common\\myDrawer\\index.tsx":"7","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\pages\\users\\new\\index.tsx":"8","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\common\\myForm\\index.tsx":"9","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\providers\\contexts\\userContext.tsx":"10","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\providers\\services\\useUserService.tsx":"11","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\pages\\users\\new\\validator.tsx":"12","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\utils\\helper.tsx":"13","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\providers\\services\\useGlobalState.tsx":"14","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\common\\myAlert\\index.tsx":"15"},{"size":324,"mtime":1610876126787,"results":"16","hashOfConfig":"17"},{"size":889,"mtime":1611029415306,"results":"18","hashOfConfig":"17"},{"size":784,"mtime":1611026387783,"results":"19","hashOfConfig":"17"},{"size":511,"mtime":1611027229960,"results":"20","hashOfConfig":"17"},{"size":342,"mtime":1611030728211,"results":"21","hashOfConfig":"17"},{"size":1628,"mtime":1611048526725,"results":"22","hashOfConfig":"17"},{"size":2066,"mtime":1611049239428,"results":"23","hashOfConfig":"17"},{"size":3791,"mtime":1611052464394,"results":"24","hashOfConfig":"17"},{"size":4980,"mtime":1611051281289,"results":"25","hashOfConfig":"17"},{"size":275,"mtime":1611052421527,"results":"26","hashOfConfig":"17"},{"size":324,"mtime":1611052388004,"results":"27","hashOfConfig":"17"},{"size":666,"mtime":1611046340718,"results":"28","hashOfConfig":"17"},{"size":1459,"mtime":1611046274968,"results":"29","hashOfConfig":"17"},{"size":888,"mtime":1611045680200,"results":"30","hashOfConfig":"17"},{"size":837,"mtime":1611029571293,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"csx4bj",{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\index.tsx",[],["64","65"],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\App.tsx",["66","67"],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\providers\\index.tsx",[],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\providers\\contexts\\globalContext.tsx",[],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\routes\\index.tsx",[],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\common\\nav\\index.tsx",["68"],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\common\\myDrawer\\index.tsx",["69"],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\pages\\users\\new\\index.tsx",["70","71"],"import Grid from '@material-ui/core/Grid'\r\nimport MyForm, { MyFormProps } from 'components/common/myForm'\r\nimport User from 'models/user'\r\nimport UserContext, { UserProps } from 'providers/contexts/userContext'\r\nimport GlobalContext, { GlobalProps } from 'providers/contexts/globalContext'\r\nimport React, { useContext } from 'react'\r\nimport validator from './validator'\r\n\r\nexport interface NewUserProps {}\r\n\r\nconst NewUser: React.SFC<NewUserProps> = () => {\r\n  const { setAlert } = useContext<GlobalProps>(GlobalContext)\r\n\r\n  const [newUser, setNewUser] = React.useState<User>({\r\n    username: '',\r\n    password: '',\r\n    firstname: '',\r\n    middlename: '',\r\n    lastname: '',\r\n    address: '',\r\n    contact: '',\r\n    gender: null,\r\n    civil: null,\r\n    birthdate: null,\r\n    position: null,\r\n    branch: null,\r\n    team: null,\r\n  })\r\n\r\n  const onSubmit = async () => {\r\n    setAlert({ message: 'Successfully added', type: 'success' })\r\n    return Promise.resolve()\r\n  }\r\n\r\n  const formProps: MyFormProps<User> = {\r\n    state: [newUser, setNewUser],\r\n    onSubmit,\r\n    validator,\r\n  }\r\n\r\n  return (\r\n    <Grid container direction='column'>\r\n      <MyForm {...formProps}>\r\n        {({ myInput, mySelect, myDateTimePicker, myButton }) => (\r\n          <>\r\n            {myInput({\r\n              label: 'Username',\r\n              value: newUser.username,\r\n              name: 'username',\r\n            })}\r\n            {myInput({\r\n              label: 'Password',\r\n              value: newUser.password,\r\n              name: 'password',\r\n              type: 'password',\r\n            })}\r\n            {myInput({\r\n              label: 'Firstname',\r\n              value: newUser.firstname,\r\n              name: 'firstname',\r\n            })}\r\n            {myInput({\r\n              label: 'Middlename',\r\n              value: newUser.middlename,\r\n              name: 'middlename',\r\n            })}\r\n            {myInput({\r\n              label: 'Lastname',\r\n              value: newUser.lastname,\r\n              name: 'lastname',\r\n            })}\r\n            {myInput({\r\n              label: 'Contact Number',\r\n              value: newUser.contact,\r\n              name: 'contact',\r\n            })}\r\n\r\n            {myInput({\r\n              label: 'Address',\r\n              value: newUser.address,\r\n              name: 'address',\r\n              isMultiline: true,\r\n            })}\r\n            {mySelect({\r\n              label: 'Gender',\r\n              value: newUser.gender,\r\n              name: 'gender',\r\n              options: ['Male', 'Female', 'Other'],\r\n            })}\r\n            {mySelect({\r\n              label: 'Civil Status',\r\n              value: newUser.civil,\r\n              name: 'civil',\r\n              options: ['Single', 'Married', 'Widowed'],\r\n            })}\r\n\r\n            {mySelect({\r\n              label: 'Position',\r\n              value: newUser.position,\r\n              name: 'position',\r\n              options: [\r\n                'Sales Agent',\r\n                'Branch Manager',\r\n                'Agency Manager',\r\n                'Supervisor',\r\n                'Admin',\r\n              ],\r\n            })}\r\n\r\n            {mySelect({\r\n              label: 'Branch',\r\n              value: newUser.branch,\r\n              name: 'branch',\r\n              options: ['CEBU', 'MAKATI', 'MANILA'],\r\n            })}\r\n\r\n            {mySelect({\r\n              label: 'Team',\r\n              value: newUser.team,\r\n              name: 'team',\r\n              options: ['ABC', '123', 'XYZ'],\r\n            })}\r\n\r\n            {myDateTimePicker({\r\n              label: 'Birthdate',\r\n              value: newUser.birthdate,\r\n              name: 'birthdate',\r\n            })}\r\n\r\n            {myButton()}\r\n          </>\r\n        )}\r\n      </MyForm>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default NewUser\r\n","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\common\\myForm\\index.tsx",["72","73"],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\providers\\contexts\\userContext.tsx",[],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\providers\\services\\useUserService.tsx",[],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\pages\\users\\new\\validator.tsx",[],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\utils\\helper.tsx",[],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\providers\\services\\useGlobalState.tsx",[],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\common\\myAlert\\index.tsx",[],{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":1,"column":17,"nodeType":"80","messageId":"81","endLine":1,"endColumn":27},{"ruleId":"78","severity":1,"message":"82","line":1,"column":29,"nodeType":"80","messageId":"81","endLine":1,"endColumn":37},{"ruleId":"78","severity":1,"message":"83","line":8,"column":8,"nodeType":"80","messageId":"81","endLine":8,"endColumn":14},{"ruleId":"78","severity":1,"message":"84","line":20,"column":9,"nodeType":"80","messageId":"81","endLine":20,"endColumn":15},{"ruleId":"78","severity":1,"message":"85","line":4,"column":8,"nodeType":"80","messageId":"81","endLine":4,"endColumn":19},{"ruleId":"78","severity":1,"message":"86","line":4,"column":23,"nodeType":"80","messageId":"81","endLine":4,"endColumn":32},{"ruleId":"78","severity":1,"message":"79","line":1,"column":17,"nodeType":"80","messageId":"81","endLine":1,"endColumn":27},{"ruleId":"78","severity":1,"message":"87","line":47,"column":10,"nodeType":"80","messageId":"81","endLine":47,"endColumn":19},"no-native-reassign",["88"],"no-negated-in-lhs",["89"],"@typescript-eslint/no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'styles' is defined but never used.","'styles' is assigned a value but never used.","'UserContext' is defined but never used.","'UserProps' is defined but never used.","'isDisable' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]