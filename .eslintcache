[{"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\index.tsx":"1","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\App.tsx":"2","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\providers\\index.tsx":"3","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\utils\\helper.ts":"4","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Pages\\Employees\\index.tsx":"5","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Pages\\Employees\\NewEmployee\\index.tsx":"6","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Pages\\Employees\\EditEmployee\\index.tsx":"7","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Pages\\Employees\\EmployeeCard\\index.tsx":"8","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Pages\\clients\\index.tsx":"9","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Common\\MySearchField\\index.tsx":"10","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Pages\\Clients\\index.tsx":"11","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Pages\\Clients\\ClientCard\\index.tsx":"12","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Common\\MyAvatar\\index.tsx":"13","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Pages\\Clients\\ViewClient\\index.tsx":"14","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Pages\\Clients\\NewClient\\index.tsx":"15","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Pages\\Clients\\NewClient\\ClientStepOne.tsx":"16","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Pages\\Clients\\NewClient\\ClientStepTwo.tsx":"17","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\validators\\saveEmployeeValidator.tsx":"18","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\validators\\saveProfileValidator.tsx":"19","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Pages\\Clients\\NewClient\\ClientStepThree.tsx":"20","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\validators\\clientStepTwoValidator.tsx":"21","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\validators\\clientStepThreeValidator.tsx":"22","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\providers\\ClientProvicer.tsx":"23","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\hooks\\useGlobalState.tsx":"24","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\hooks\\useClientState.tsx":"25","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\api\\clientService.tsx":"26","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Pages\\Employees\\ViewEmployee\\index.tsx":"27","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\pages\\Employees\\index.tsx":"28","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\pages\\Employees\\ViewEmployee\\index.tsx":"29","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\pages\\Clients\\index.tsx":"30","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\pages\\Clients\\ViewClient\\index.tsx":"31","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\pages\\Employees\\NewEmployee\\index.tsx":"32","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\pages\\Employees\\EditEmployee\\index.tsx":"33","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\pages\\Clients\\NewClient\\index.tsx":"34","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\pages\\Clients\\NewClient\\ClientStepOne.tsx":"35","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\pages\\Clients\\NewClient\\ClientStepTwo.tsx":"36","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\pages\\Clients\\NewClient\\ClientStepThree.tsx":"37","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\pages\\Employees\\EmployeeCard\\index.tsx":"38","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\pages\\Clients\\ClientCard\\index.tsx":"39","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\common\\MySearchField\\index.tsx":"40","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\common\\MyAvatar\\index.tsx":"41","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\layout\\index.tsx":"42","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\common\\MyAlert\\index.tsx":"43","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\common\\MyNav\\index.tsx":"44","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\common\\MyForm\\index.tsx":"45","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\common\\MyStepper\\index.tsx":"46","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\common\\MyDrawer\\index.tsx":"47","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\common\\MyCard\\index.tsx":"48","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\pages\\Dashboard\\index.tsx":"49","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\providers\\EmployeeProvider.tsx":"50","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\hooks\\useEmployeeState.tsx":"51","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\api\\employeeService.tsx":"52","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\common\\MySkeletonCards\\index.tsx":"53","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\utils\\http.ts":"54","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\common\\MySkeletonCard\\index.tsx":"55","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\pages\\Auth\\SignIn\\index.tsx":"56","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\api\\authService.tsx":"57","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\validators\\signInValidator.tsx":"58","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\common\\MyAuthRoute\\index.tsx":"59","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\pages\\Clients\\Transaction\\index.tsx":"60","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\common\\MyMiniCards\\index.tsx":"61","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\pages\\Clients\\Transaction\\TransactionForm.tsx":"62","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\validators\\clientTransactionValidator.tsx":"63","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\pages\\Settings\\index.tsx":"64","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\common\\MySkeletonMiniCards\\index.tsx":"65","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\common\\MyChips\\index.tsx":"66","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\pages\\Clients\\EditClient\\index.tsx":"67","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\pages\\Payments\\index.tsx":"68","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\hooks\\usePaymentState.tsx":"69","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\api\\paymentService.tsx":"70","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\providers\\PaymentProvider.tsx":"71","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\pages\\Payments\\PaymentCard\\index.tsx":"72"},{"size":342,"mtime":1612026287995,"results":"73","hashOfConfig":"74"},{"size":845,"mtime":1612566539133,"results":"75","hashOfConfig":"74"},{"size":1306,"mtime":1612565542774,"results":"76","hashOfConfig":"74"},{"size":2097,"mtime":1612292428996,"results":"77","hashOfConfig":"74"},{"size":2405,"mtime":1612026326387,"results":"78","hashOfConfig":"74"},{"size":4262,"mtime":1612026038974,"results":"79","hashOfConfig":"74"},{"size":4389,"mtime":1612026139393,"results":"80","hashOfConfig":"74"},{"size":2913,"mtime":1612026087251,"results":"81","hashOfConfig":"74"},{"size":27,"mtime":1611588252955,"results":"82","hashOfConfig":"74"},{"size":1510,"mtime":1612025364106,"results":"83","hashOfConfig":"74"},{"size":2067,"mtime":1612025557633,"results":"84","hashOfConfig":"74"},{"size":2958,"mtime":1612025770740,"results":"85","hashOfConfig":"74"},{"size":400,"mtime":1612025207022,"results":"86","hashOfConfig":"74"},{"size":6132,"mtime":1612025599805,"results":"87","hashOfConfig":"74"},{"size":4334,"mtime":1612025652721,"results":"88","hashOfConfig":"74"},{"size":3116,"mtime":1612025682832,"results":"89","hashOfConfig":"74"},{"size":4540,"mtime":1612025713442,"results":"90","hashOfConfig":"74"},{"size":518,"mtime":1612529121407,"results":"91","hashOfConfig":"74"},{"size":382,"mtime":1612444021661,"results":"92","hashOfConfig":"74"},{"size":4188,"mtime":1612025697638,"results":"93","hashOfConfig":"74"},{"size":389,"mtime":1611869862713,"results":"94","hashOfConfig":"74"},{"size":484,"mtime":1612442435359,"results":"95","hashOfConfig":"74"},{"size":487,"mtime":1612092273377,"results":"96","hashOfConfig":"74"},{"size":1514,"mtime":1612565464225,"results":"97","hashOfConfig":"74"},{"size":1851,"mtime":1612553845664,"results":"98","hashOfConfig":"74"},{"size":3953,"mtime":1612479886630,"results":"99","hashOfConfig":"74"},{"size":5777,"mtime":1612025945257,"results":"100","hashOfConfig":"74"},{"size":2649,"mtime":1612565627491,"results":"101","hashOfConfig":"74"},{"size":8688,"mtime":1612565690954,"results":"102","hashOfConfig":"74"},{"size":2623,"mtime":1612565745044,"results":"103","hashOfConfig":"74"},{"size":6385,"mtime":1612565764304,"results":"104","hashOfConfig":"74"},{"size":6887,"mtime":1612565636129,"results":"105","hashOfConfig":"74"},{"size":5239,"mtime":1612565641116,"results":"106","hashOfConfig":"74"},{"size":4517,"mtime":1612565788056,"results":"107","hashOfConfig":"74"},{"size":3116,"mtime":1612028993718,"results":"108","hashOfConfig":"74"},{"size":4540,"mtime":1612028993833,"results":"109","hashOfConfig":"74"},{"size":4220,"mtime":1612565785478,"results":"110","hashOfConfig":"74"},{"size":3077,"mtime":1612296907560,"results":"111","hashOfConfig":"74"},{"size":3236,"mtime":1612303884860,"results":"112","hashOfConfig":"74"},{"size":1510,"mtime":1612025364106,"results":"113","hashOfConfig":"74"},{"size":948,"mtime":1612297346480,"results":"114","hashOfConfig":"74"},{"size":2358,"mtime":1612558816931,"results":"115","hashOfConfig":"74"},{"size":841,"mtime":1612565717336,"results":"116","hashOfConfig":"74"},{"size":2591,"mtime":1612565707477,"results":"117","hashOfConfig":"74"},{"size":10872,"mtime":1612565865613,"results":"118","hashOfConfig":"74"},{"size":1391,"mtime":1612055049295,"results":"119","hashOfConfig":"74"},{"size":3602,"mtime":1612569136073,"results":"120","hashOfConfig":"74"},{"size":1057,"mtime":1612470956152,"results":"121","hashOfConfig":"74"},{"size":408,"mtime":1612565727464,"results":"122","hashOfConfig":"74"},{"size":517,"mtime":1612092401758,"results":"123","hashOfConfig":"74"},{"size":1375,"mtime":1612554298565,"results":"124","hashOfConfig":"74"},{"size":2602,"mtime":1612529485012,"results":"125","hashOfConfig":"74"},{"size":1420,"mtime":1612294543434,"results":"126","hashOfConfig":"74"},{"size":935,"mtime":1612264143119,"results":"127","hashOfConfig":"74"},{"size":1401,"mtime":1612474036715,"results":"128","hashOfConfig":"74"},{"size":2366,"mtime":1612565801704,"results":"129","hashOfConfig":"74"},{"size":161,"mtime":1612302155489,"results":"130","hashOfConfig":"74"},{"size":197,"mtime":1612302613209,"results":"131","hashOfConfig":"74"},{"size":739,"mtime":1612565812320,"results":"132","hashOfConfig":"74"},{"size":5620,"mtime":1612569122501,"results":"133","hashOfConfig":"74"},{"size":2822,"mtime":1612565851178,"results":"134","hashOfConfig":"74"},{"size":4652,"mtime":1612528676017,"results":"135","hashOfConfig":"74"},{"size":476,"mtime":1612442365936,"results":"136","hashOfConfig":"74"},{"size":1155,"mtime":1612565831430,"results":"137","hashOfConfig":"74"},{"size":1364,"mtime":1612473662456,"results":"138","hashOfConfig":"74"},{"size":1442,"mtime":1612478320177,"results":"139","hashOfConfig":"74"},{"size":3758,"mtime":1612565661055,"results":"140","hashOfConfig":"74"},{"size":1269,"mtime":1612567309580,"results":"141","hashOfConfig":"74"},{"size":711,"mtime":1612566498140,"results":"142","hashOfConfig":"74"},{"size":1006,"mtime":1612568668400,"results":"143","hashOfConfig":"74"},{"size":506,"mtime":1612566502913,"results":"144","hashOfConfig":"74"},{"size":2130,"mtime":1612569388457,"results":"145","hashOfConfig":"74"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},"csx4bj",{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"158"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"158"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"158"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"158"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"158"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"158"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"158"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"158"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"158"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"193","messages":"194","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"195","messages":"196","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"158"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"148"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"205","messages":"206","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"207","messages":"208","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"209","messages":"210","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"211","messages":"212","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"213","messages":"214","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"215","messages":"216","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"217","messages":"218","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"219","messages":"220","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"221","messages":"222","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"223","messages":"224","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"225","messages":"226","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"227","messages":"228","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"148"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"148"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"237","messages":"238","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"148"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"248","messages":"249","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"250","messages":"251","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"258","messages":"259","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"272","messages":"273","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"276","messages":"277","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"280","messages":"281","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"282","messages":"283","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"284","messages":"285","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"286","messages":"287","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"294","messages":"295","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"296","messages":"297","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"298","messages":"299","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\index.tsx",[],["306","307"],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\App.tsx",[],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\providers\\index.tsx",[],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\utils\\helper.ts",[],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Pages\\Employees\\index.tsx",["308","309"],"import React, { useContext, useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Fab from '@material-ui/core/Fab'\r\nimport AddIcon from '@material-ui/icons/Add'\r\n\r\nimport { Theme, createStyles, makeStyles } from '@material-ui/core/styles'\r\n\r\nimport Employee from 'models/employee'\r\nimport EmployeeCard from './EmployeeCard'\r\nimport MySearchField from 'components/Common/MySearchField'\r\nimport { GlobalContext } from 'hooks/useGlobalState'\r\n\r\nexport interface EmployeesProps {}\r\n\r\nconst Employees: React.SFC<EmployeesProps> = () => {\r\n  const [state, dispatch] = useContext(GlobalContext)!\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: 'setTitle', payload: 'Employee Management' })\r\n  }, [])\r\n\r\n  const employees: Partial<Employee>[] = [\r\n    {\r\n      id: 1,\r\n      firstname: 'Ftname',\r\n      middlename: 'Mee',\r\n      lastname: 'ame',\r\n      position: 'Agency Manager',\r\n      status: 'deactive',\r\n    },\r\n    {\r\n      id: 2,\r\n      firstname: 'Firstname',\r\n      middlename: 'Middlename',\r\n      lastname: 'Lastname',\r\n      position: 'Sales Agent',\r\n      status: 'active',\r\n    },\r\n    {\r\n      id: 3,\r\n      firstname: 'Firstname',\r\n      middlename: 'Middlename',\r\n      lastname: 'Lastname',\r\n      position: 'Branch Manager',\r\n      status: 'deceased',\r\n    },\r\n\r\n    {\r\n      id: 4,\r\n      firstname: 'Firstname',\r\n      middlename: 'Middlename',\r\n      lastname: 'Lastname',\r\n      position: 'Supervisor',\r\n      status: 'active',\r\n    },\r\n  ]\r\n\r\n  const history = useHistory()\r\n\r\n  const styles = useStyles()\r\n  return (\r\n    <>\r\n      <MySearchField style={{ marginBottom: 15 }} />\r\n\r\n      <Grid\r\n        container\r\n        spacing={2}\r\n        direction='column'\r\n        justify='flex-start'\r\n        alignItems='center'\r\n      >\r\n        {employees.map((employee) => (\r\n          <Grid key={employee.id} item xs={12}>\r\n            <EmployeeCard employee={employee} />\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n\r\n      <Fab\r\n        onClick={() => history.push('/employees/new')}\r\n        className={styles.fab}\r\n        color='primary'\r\n        aria-label='add'\r\n      >\r\n        <AddIcon />\r\n      </Fab>\r\n    </>\r\n  )\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    fab: {\r\n      position: 'fixed',\r\n      bottom: 20,\r\n      right: 20,\r\n    },\r\n  }),\r\n)\r\n\r\nexport default Employees\r\n",["310","311"],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Pages\\Employees\\NewEmployee\\index.tsx",["312","313"],"import React, { useContext } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport Button from '@material-ui/core/Button'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport { GlobalContext } from 'hooks/useGlobalState'\r\nimport validator from '../../../../validators/saveEmployeeValidator'\r\nimport MyForm, { MyFormProps, InputProps } from 'components/Common/MyForm'\r\nimport Employee from 'models/employee'\r\n\r\nexport interface NewUserProps {}\r\n\r\nconst NewEmployee: React.SFC<NewUserProps> = () => {\r\n  const [_, dispatch] = useContext(GlobalContext)!\r\n\r\n  const history = useHistory()\r\n\r\n  const [employee, setEmployee] = React.useState<Employee>({\r\n    firstname: 'dfdf',\r\n    middlename: '',\r\n    lastname: '',\r\n    address: '',\r\n    contact: '',\r\n  })\r\n\r\n  const onSubmit = async (data: Employee) => {\r\n    console.log(data)\r\n    dispatch({\r\n      type: 'setAlert',\r\n      payload: { message: 'Successfully added', type: 'success' },\r\n    })\r\n    return Promise.resolve()\r\n  }\r\n\r\n  const formProps: MyFormProps<Employee> = {\r\n    state: [employee, setEmployee],\r\n    onSubmit,\r\n    validator,\r\n  }\r\n\r\n  return (\r\n    <MyForm {...formProps}>\r\n      {({ myInput, mySelect, myDateTimePicker, myButton }) => (\r\n        <>\r\n          {myInput({\r\n            label: 'Firstname',\r\n            value: employee.firstname,\r\n            name: 'firstname',\r\n          })}\r\n          {myInput({\r\n            label: 'Middlename',\r\n            value: employee.middlename,\r\n            name: 'middlename',\r\n          })}\r\n          {myInput({\r\n            label: 'Lastname',\r\n            value: employee.lastname,\r\n            name: 'lastname',\r\n          })}\r\n          {myInput({\r\n            label: 'Contact Number',\r\n            value: employee.contact,\r\n            name: 'contact',\r\n          })}\r\n\r\n          {myInput({\r\n            label: 'Address',\r\n            value: employee.address,\r\n            name: 'address',\r\n            isMultiline: true,\r\n          })}\r\n          {mySelect({\r\n            label: 'Gender',\r\n            value: employee.gender,\r\n            name: 'gender',\r\n            options: [\r\n              { value: 'Male' },\r\n              { value: 'Female' },\r\n              { value: 'Other' },\r\n            ],\r\n          })}\r\n          {mySelect({\r\n            label: 'Civil Status',\r\n            value: employee.civil,\r\n            name: 'civil',\r\n            labelWidth: 80,\r\n            options: [\r\n              { value: 'Single' },\r\n              { value: 'Married' },\r\n              { value: 'Widowed' },\r\n            ],\r\n          })}\r\n\r\n          {mySelect({\r\n            label: 'Position',\r\n            value: employee.position,\r\n            name: 'position',\r\n            labelWidth: 55,\r\n            options: [\r\n              { value: 'Sales Agent' },\r\n              { value: 'Branch Manager' },\r\n              { value: 'Agency Manager' },\r\n              { value: 'Supervisor' },\r\n            ],\r\n          })}\r\n\r\n          {mySelect({\r\n            label: 'Branch',\r\n            value: employee.branch,\r\n            name: 'branch',\r\n            labelWidth: 55,\r\n            options: [{ value: 'Cebu' }, { value: 'Manila' }],\r\n          })}\r\n\r\n          {mySelect({\r\n            label: 'Team',\r\n            value: employee.team,\r\n            name: 'team',\r\n            labelWidth: 40,\r\n            options: [{ value: 'ABC' }],\r\n          })}\r\n\r\n          {myDateTimePicker({\r\n            label: 'Birthdate',\r\n            value: employee.birthdate,\r\n            name: 'birthdate',\r\n          })}\r\n\r\n          <Grid\r\n            style={{ paddingLeft: 18, paddingTop: 10, paddingBottom: 5 }}\r\n            container\r\n            xs={12}\r\n            justify='center'\r\n            spacing={2}\r\n          >\r\n            <Grid item xs={6}>\r\n              <Button\r\n                onClick={() => history.goBack()}\r\n                style={{ paddingTop: 15, paddingBottom: 15 }}\r\n                fullWidth\r\n                variant='contained'\r\n                color='default'\r\n              >\r\n                BACK\r\n              </Button>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              {myButton()}\r\n            </Grid>\r\n          </Grid>\r\n        </>\r\n      )}\r\n    </MyForm>\r\n  )\r\n}\r\nexport default NewEmployee\r\n","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Pages\\Employees\\EditEmployee\\index.tsx",["314"],"import React, { useContext } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport Button from '@material-ui/core/Button'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport { GlobalContext } from 'hooks/useGlobalState'\r\nimport validator from '../../../../validators/saveEmployeeValidator'\r\nimport MyForm, { MyFormProps } from 'components/Common/MyForm'\r\nimport Employee from 'models/employee'\r\n\r\nexport interface EditUserProps {}\r\n\r\nconst EditEmployee: React.SFC<EditUserProps> = () => {\r\n  const [_, dispatch] = useContext(GlobalContext)!\r\n\r\n  const history = useHistory()\r\n\r\n  const [employee, setEmployee] = React.useState<Employee>({\r\n    firstname: 'sds',\r\n    middlename: 'dfdf',\r\n    lastname: 'fgf',\r\n    address: 'fgf',\r\n    contact: 'fgfg',\r\n    gender: 'Male',\r\n    civil: 'Single',\r\n    birthdate: new Date('10/03/1991'),\r\n    position: 'Branch Manager',\r\n  })\r\n\r\n  const onSubmit = async (data: Employee) => {\r\n    console.log(data)\r\n    dispatch({\r\n      type: 'setAlert',\r\n      payload: { message: 'Successfully added', type: 'success' },\r\n    })\r\n\r\n    return Promise.resolve()\r\n  }\r\n\r\n  const formProps: MyFormProps<Employee> = {\r\n    state: [employee, setEmployee],\r\n    onSubmit,\r\n    validator,\r\n  }\r\n\r\n  return (\r\n    <MyForm {...formProps}>\r\n      {({ myInput, mySelect, myDateTimePicker, myButton }) => (\r\n        <>\r\n          {myInput({\r\n            label: 'Firstname',\r\n            value: employee.firstname,\r\n            name: 'firstname',\r\n          })}\r\n          {myInput({\r\n            label: 'Middlename',\r\n            value: employee.middlename,\r\n            name: 'middlename',\r\n          })}\r\n          {myInput({\r\n            label: 'Lastname',\r\n            value: employee.lastname,\r\n            name: 'lastname',\r\n          })}\r\n          {myInput({\r\n            label: 'Contact Number',\r\n            value: employee.contact,\r\n            name: 'contact',\r\n          })}\r\n\r\n          {myInput({\r\n            label: 'Address',\r\n            value: employee.address,\r\n            name: 'address',\r\n            isMultiline: true,\r\n          })}\r\n\r\n          {mySelect({\r\n            label: 'Gender',\r\n            value: employee.gender,\r\n            name: 'gender',\r\n            options: [\r\n              { value: 'Male' },\r\n              { value: 'Female' },\r\n              { value: 'Other' },\r\n            ],\r\n          })}\r\n\r\n          {mySelect({\r\n            label: 'Civil Status',\r\n            value: employee.civil,\r\n            name: 'civil',\r\n            labelWidth: 80,\r\n            options: [\r\n              { value: 'Single' },\r\n              { value: 'Married' },\r\n              { value: 'Widowed' },\r\n            ],\r\n          })}\r\n\r\n          {mySelect({\r\n            label: 'Position',\r\n            value: employee.position,\r\n            name: 'position',\r\n            labelWidth: 55,\r\n            options: [\r\n              { value: 'Sales Agent' },\r\n              { value: 'Branch Manager' },\r\n              { value: 'Agency Manager' },\r\n              { value: 'Supervisor' },\r\n            ],\r\n          })}\r\n\r\n          {mySelect({\r\n            label: 'Branch',\r\n            value: employee.branch,\r\n            name: 'branch',\r\n            labelWidth: 55,\r\n            options: [{ value: 'Cebu' }, { value: 'Manila' }],\r\n          })}\r\n\r\n          {mySelect({\r\n            label: 'Team',\r\n            value: employee.team,\r\n            name: 'team',\r\n            labelWidth: 40,\r\n            options: [{ value: 'ABC' }],\r\n          })}\r\n\r\n          {myDateTimePicker({\r\n            label: 'Birthdate',\r\n            value: employee.birthdate,\r\n            name: 'birthdate',\r\n          })}\r\n\r\n          <Grid\r\n            style={{ paddingLeft: 18, paddingTop: 10, paddingBottom: 5 }}\r\n            container\r\n            xs={12}\r\n            justify='center'\r\n            spacing={2}\r\n          >\r\n            <Grid item xs={6}>\r\n              <Button\r\n                onClick={() => history.goBack()}\r\n                style={{ paddingTop: 15, paddingBottom: 15 }}\r\n                fullWidth\r\n                variant='contained'\r\n                color='default'\r\n              >\r\n                BACK\r\n              </Button>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              {myButton()}\r\n            </Grid>\r\n          </Grid>\r\n        </>\r\n      )}\r\n    </MyForm>\r\n  )\r\n}\r\nexport default EditEmployee\r\n","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Pages\\Employees\\EmployeeCard\\index.tsx",[],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Pages\\clients\\index.tsx",[],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Common\\MySearchField\\index.tsx",[],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Pages\\Clients\\index.tsx",["315","316","317"],"import MySearchField from 'components/Common/MySearchField'\r\nimport Client from 'models/client'\r\nimport { Theme, createStyles, makeStyles } from '@material-ui/core/styles'\r\n\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Fab from '@material-ui/core/Fab'\r\nimport AddIcon from '@material-ui/icons/Add'\r\nimport { useHistory } from 'react-router-dom'\r\nimport ClientCard from './ClientCard'\r\nimport { useContext, useEffect } from 'react'\r\nimport { getClients } from 'api/clientService'\r\nimport { ClientContext } from 'hooks/useClientState'\r\nimport { GlobalContext } from 'hooks/useGlobalState'\r\n\r\nexport interface ClientsProps {}\r\n\r\nconst Clients: React.SFC<ClientsProps> = () => {\r\n  const [clientState, clientDispatch] = useContext(ClientContext)!\r\n\r\n  const [_, globalDispatch] = useContext(GlobalContext)!\r\n\r\n  const styles = useStyles()\r\n  const history = useHistory()\r\n\r\n  useEffect(() => {\r\n    globalDispatch({ type: 'setTitle', payload: 'Client Management' })\r\n    clientDispatch({ type: 'setIsLoading', payload: true })\r\n    getClients().then((clients) => {\r\n      clientDispatch({ type: 'onLoad', payload: clients })\r\n    })\r\n  }, [])\r\n\r\n  if (clientState.isLoading && !clientState.clients.length)\r\n    return <h4>Loading...</h4>\r\n\r\n  return (\r\n    <>\r\n      <MySearchField style={{ marginBottom: 15 }} />\r\n      <Grid\r\n        container\r\n        spacing={2}\r\n        direction='column'\r\n        justify='flex-start'\r\n        alignItems='center'\r\n      >\r\n        {clientState.clients.map((client) => (\r\n          <Grid key={client.id} item xs={12}>\r\n            <ClientCard key={client.id} client={client} />\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n\r\n      <Fab\r\n        onClick={() => history.push('/clients/new')}\r\n        className={styles.fab}\r\n        color='primary'\r\n        aria-label='add'\r\n      >\r\n        <AddIcon />\r\n      </Fab>\r\n    </>\r\n  )\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    fab: {\r\n      position: 'fixed',\r\n      bottom: 20,\r\n      right: 20,\r\n    },\r\n  }),\r\n)\r\n\r\nexport default Clients\r\n","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Pages\\Clients\\ClientCard\\index.tsx",["318","319"],"import MyCard from 'components/Common/MyCard'\r\nimport React from 'react'\r\nimport CardContent from '@material-ui/core/CardContent'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport EditIcon from '@material-ui/icons/Edit'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport ViewIcon from '@material-ui/icons/RemoveRedEye'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Divider from '@material-ui/core/Divider'\r\nimport Chip from '@material-ui/core/Chip'\r\nimport Avatar from '@material-ui/core/Avatar'\r\nimport userIcon from 'assets/profile-user.svg'\r\nimport Client from 'models/client'\r\nimport { useHistory } from 'react-router-dom'\r\nimport MyAvatar from 'components/Common/MyAvatar'\r\nimport { computeTotalPaid, computeTotalPay } from 'api/clientService'\r\n\r\nexport interface ClientCardProps {\r\n  client: Client\r\n}\r\n\r\nexport const ClientCard: React.SFC<ClientCardProps> = ({ client }) => {\r\n  const history = useHistory()\r\n\r\n  return (\r\n    <MyCard title={client.code} style={{ paddingBottom: 5 }}>\r\n      <CardContent>\r\n        <Grid container xs={12} justify='space-between'>\r\n          <Grid\r\n            style={{ paddingLeft: 10 }}\r\n            container\r\n            item\r\n            direction='column'\r\n            xs={7}\r\n            justify='flex-start'\r\n          >\r\n            <Typography component='h6' variant='h6'>\r\n              {`${client.lastname}, ${client.firstname} ${client.middlename}`}\r\n            </Typography>\r\n            <Typography variant='subtitle1' color='textSecondary'>\r\n              {client.plan + ' - ' + client.payment_mode}\r\n            </Typography>\r\n            <Grid item xs={1}>\r\n              <Chip\r\n                style={{ marginTop: 5 }}\r\n                size='small'\r\n                label={\r\n                  computeTotalPaid(client) +\r\n                  '/' +\r\n                  computeTotalPay(client) +\r\n                  ' Paid'\r\n                }\r\n                variant='default'\r\n                color='secondary'\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container item xs={5} justify='center' alignItems='center'>\r\n            <MyAvatar onClick={() => history.push('/clients/' + client.id)} />\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n\r\n      <Divider style={{ marginLeft: 20, marginRight: 20 }}></Divider>\r\n      <Grid container xs={12} justify='space-evenly'>\r\n        <IconButton\r\n          onClick={() => history.push('/clients/' + client.id)}\r\n          aria-label='view'\r\n        >\r\n          <ViewIcon />\r\n        </IconButton>\r\n        <IconButton\r\n          onClick={() => history.push('/clients/edit/' + client.id)}\r\n          aria-label='edit'\r\n        >\r\n          <EditIcon />\r\n        </IconButton>\r\n        <IconButton aria-label='archive'>\r\n          <DeleteIcon />\r\n        </IconButton>\r\n      </Grid>\r\n    </MyCard>\r\n  )\r\n}\r\nexport default ClientCard\r\n","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Common\\MyAvatar\\index.tsx",[],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Pages\\Clients\\ViewClient\\index.tsx",["320","321"],"import React, { useState, useEffect, useContext } from 'react'\r\n\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Button from '@material-ui/core/Button'\r\nimport CardContent from '@material-ui/core/CardContent'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Chip from '@material-ui/core/Chip'\r\nimport Divider from '@material-ui/core/Divider'\r\nimport userIcon from 'assets/profile-user.svg'\r\nimport { calculateAge } from 'utils/helper'\r\nimport MyCard from 'components/Common/MyCard'\r\nimport Client from 'models/client'\r\nimport { ClientContext } from 'hooks/useClientState'\r\nimport { GlobalContext } from 'hooks/useGlobalState'\r\n\r\nimport { getClient, computeTotalPaid, computeTotalPay } from 'api/clientService'\r\n\r\nexport interface ViewClientProps {}\r\n\r\nconst ViewClient: React.SFC<ViewClientProps> = () => {\r\n  const history = useHistory()\r\n\r\n  const { id } = useParams<{ id: string }>()\r\n\r\n  const [_, globalDispatch] = useContext(GlobalContext)!\r\n\r\n  const [clientState] = useContext(ClientContext)!\r\n\r\n  const [client, setClient] = useState<Client>()\r\n\r\n  useEffect(() => {\r\n    globalDispatch({ type: 'setTitle', payload: 'Client Details' })\r\n    getClient(clientState.clients, +id).then((client) => setClient(client))\r\n  }, [])\r\n\r\n  const detail = (title: string, subtitle: any) => (\r\n    <Grid container alignItems='center' direction='column' item xs={6}>\r\n      <Typography component='h6' variant='h6'>\r\n        {title}\r\n      </Typography>\r\n      <Typography variant='subtitle1' color='textSecondary'>\r\n        {subtitle}\r\n      </Typography>\r\n    </Grid>\r\n  )\r\n\r\n  return (\r\n    <Grid container xs={12}>\r\n      {client && (\r\n        <>\r\n          <MyCard title={client.code}>\r\n            <CardContent>\r\n              <Grid container xs={12} justify='space-between'>\r\n                <Grid\r\n                  style={{ paddingLeft: 10 }}\r\n                  container\r\n                  direction='column'\r\n                  item\r\n                  xs={7}\r\n                  justify='flex-start'\r\n                >\r\n                  <Typography component='h6' variant='h6'>\r\n                    {`${client.lastname}, ${client.firstname} ${client.middlename}`}\r\n                  </Typography>\r\n                  <Typography variant='subtitle1' color='textSecondary'>\r\n                    {client.plan + ' - ' + client.payment_mode}\r\n                  </Typography>\r\n\r\n                  <Grid item xs={1}>\r\n                    <Chip\r\n                      style={{ marginTop: 5 }}\r\n                      size='small'\r\n                      label={\r\n                        computeTotalPaid(client) +\r\n                        '/' +\r\n                        computeTotalPay(client) +\r\n                        ' Paid'\r\n                      }\r\n                      variant='default'\r\n                      color='secondary'\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid\r\n                  container\r\n                  item\r\n                  xs={5}\r\n                  justify='center'\r\n                  alignItems='center'\r\n                >\r\n                  <IconButton aria-label='play/pause'>\r\n                    <img\r\n                      style={{ width: 100 }}\r\n                      src={userIcon}\r\n                      alt='User Logo'\r\n                    />\r\n                  </IconButton>\r\n                </Grid>\r\n              </Grid>\r\n            </CardContent>\r\n            <Divider style={{ marginLeft: 20, marginRight: 20 }}></Divider>\r\n            <CardContent>\r\n              <Grid spacing={1} container xs={12} style={{ paddingLeft: 10 }}>\r\n                {detail('Period ', client.payment_period)}\r\n                {detail('Balance', 'Php ' + client.balance)}\r\n                {detail('Branch', client.branch)}\r\n                {detail('Ended', client.end_date?.toLocaleDateString())}\r\n              </Grid>\r\n            </CardContent>\r\n            <Divider style={{ marginLeft: 20, marginRight: 20 }}></Divider>\r\n            <CardContent>\r\n              <Grid spacing={1} container xs={12} style={{ paddingLeft: 10 }}>\r\n                {detail('Gender', client.gender)}\r\n                {detail('Civil Status', client.civil)}\r\n                {detail('Contact', client.contact)}\r\n                {detail(\r\n                  'Age',\r\n                  client.birthdate ? calculateAge(client.birthdate) : 'N/A',\r\n                )}\r\n\r\n                <Grid\r\n                  container\r\n                  alignItems='center'\r\n                  direction='column'\r\n                  item\r\n                  xs={12}\r\n                >\r\n                  <Typography component='h6' variant='h6'>\r\n                    Address\r\n                  </Typography>\r\n                  <Typography variant='subtitle1' color='textSecondary'>\r\n                    {client.address}\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n            </CardContent>\r\n          </MyCard>\r\n          <Grid\r\n            style={{ paddingLeft: 18, paddingTop: 10, paddingBottom: 5 }}\r\n            container\r\n            xs={12}\r\n            justify='center'\r\n            spacing={2}\r\n          >\r\n            <Grid item xs={6}>\r\n              <Button\r\n                onClick={() => history.goBack()}\r\n                style={{ paddingTop: 15, paddingBottom: 15 }}\r\n                fullWidth\r\n                variant='contained'\r\n                color='default'\r\n              >\r\n                BACK\r\n              </Button>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <Button\r\n                onClick={() => history.push('/clients/edit/' + client.id)}\r\n                style={{ paddingTop: 15, paddingBottom: 15 }}\r\n                fullWidth\r\n                variant='contained'\r\n                color='primary'\r\n              >\r\n                EDIT\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </>\r\n      )}\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default ViewClient\r\n","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Pages\\Clients\\NewClient\\index.tsx",["322","323"],"import React, { useContext, useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport Button from '@material-ui/core/Button'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Profile from 'models/profile'\r\nimport Client from 'models/client'\r\nimport Commissioner from 'models/commissioner'\r\nimport { ClientStepOne } from './ClientStepOne'\r\nimport { ClientStepTwo } from './ClientStepTwo'\r\nimport MyStepper, { useStepper } from 'components/Common/MyStepper'\r\nimport { ClientStepThree } from './ClientStepThree'\r\nimport Scroll from 'react-scroll'\r\nimport { GlobalContext } from 'hooks/useGlobalState'\r\n\r\nexport interface NewClientProps {}\r\n\r\nconst NewClient: React.SFC<NewClientProps> = () => {\r\n  const [state, dispatch] = useContext(GlobalContext)!\r\n\r\n  const scroll = Scroll.animateScroll\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: 'setTitle', payload: 'Client Registration' })\r\n    scroll.scrollToTop({ duration: 500 })\r\n  }, [])\r\n\r\n  const history = useHistory()\r\n\r\n  const stepper = useStepper([\r\n    'Create Profile Account',\r\n    'Select All Commissioners',\r\n    'Select Plan And Payment',\r\n  ])\r\n\r\n  const [profile, setProfile] = React.useState<Profile>({})\r\n\r\n  const [commissioner, setCommissioner] = React.useState<Commissioner>({\r\n    position: 'sales_agent',\r\n  })\r\n\r\n  const [client, setClient] = React.useState<Client>({})\r\n\r\n  const onNextOne = async (profile: Profile) => {\r\n    scroll.scrollToTop({ duration: 500 })\r\n    console.log('profile', profile)\r\n    setProfile(profile)\r\n    stepper.handleNext()\r\n  }\r\n\r\n  const onNextTwo = async (commissioner: Commissioner) => {\r\n    const insured_employee = commissioner[commissioner.position] ?? ''\r\n\r\n    if (!insured_employee) {\r\n      dispatch({\r\n        type: 'setAlert',\r\n        payload: {\r\n          message:\r\n            'Sales Agent is not present! Please select another employee.',\r\n          type: 'error',\r\n        },\r\n      })\r\n\r\n      return\r\n    }\r\n\r\n    scroll.scrollToTop({ duration: 500 })\r\n\r\n    setClient((client) => ({ ...client, insured_employee }))\r\n\r\n    setCommissioner(commissioner)\r\n\r\n    stepper.handleNext()\r\n\r\n    console.log(commissioner)\r\n  }\r\n\r\n  const onNextThree = async (client: Client) => {\r\n    scroll.scrollToTop({ duration: 500 })\r\n\r\n    setClient(client)\r\n\r\n    stepper.handleNext()\r\n\r\n    console.log({\r\n      client: { ...profile, ...client },\r\n      commissioner,\r\n    })\r\n  }\r\n\r\n  const onAddNew = () => {\r\n    stepper.handleReset()\r\n    setProfile({})\r\n    setCommissioner({\r\n      position: 'sales_agent',\r\n    })\r\n    setClient({})\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <MyStepper {...stepper} />\r\n      {stepper.activeStep === 0 && (\r\n        <ClientStepOne onNext={onNextOne} state={[profile, setProfile]} />\r\n      )}\r\n      {stepper.activeStep === 1 && (\r\n        <ClientStepTwo\r\n          onBack={() => stepper.handleBack()}\r\n          onNext={onNextTwo}\r\n          state={[commissioner, setCommissioner]}\r\n        />\r\n      )}\r\n      {stepper.activeStep === 2 && (\r\n        <ClientStepThree\r\n          onBack={() => stepper.handleBack()}\r\n          onNext={onNextThree}\r\n          state={[client, setClient]}\r\n        />\r\n      )}\r\n\r\n      {stepper.activeStep === 3 && (\r\n        <Grid container xs={12} direction='column' alignItems='center'>\r\n          <Typography component='h6' variant='subtitle1'>\r\n            All Step Completed!\r\n          </Typography>\r\n          <Grid spacing={2} item container xs={12}>\r\n            <Grid item xs={6}>\r\n              <Button\r\n                onClick={() => history.replace('/clients')}\r\n                style={{ paddingTop: 15, paddingBottom: 15, marginTop: 10 }}\r\n                fullWidth\r\n                variant='contained'\r\n                color='default'\r\n              >\r\n                CLIENT LIST\r\n              </Button>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <Button\r\n                onClick={onAddNew}\r\n                style={{ paddingTop: 15, paddingBottom: 15, marginTop: 10 }}\r\n                fullWidth\r\n                variant='contained'\r\n                color='primary'\r\n              >\r\n                ADD NEW\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default NewClient\r\n","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Pages\\Clients\\NewClient\\ClientStepOne.tsx",["324"],"import React, { useContext } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport Button from '@material-ui/core/Button'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport MyForm, { MyFormProps } from 'components/Common/MyForm'\r\nimport Profile from 'models/profile'\r\nimport validator from 'validators/saveProfileValidator'\r\n\r\nexport interface ClientStepOneProps {\r\n  state: [Profile, React.Dispatch<React.SetStateAction<Profile>>]\r\n  onNext: (profile: Profile) => Promise<void>\r\n}\r\n\r\nexport const ClientStepOne: React.SFC<ClientStepOneProps> = ({\r\n  state: [profile, setProfile],\r\n  onNext,\r\n}) => {\r\n  const history = useHistory()\r\n\r\n  const formProps: MyFormProps<Profile> = {\r\n    state: [profile, setProfile],\r\n    onSubmit: onNext,\r\n    validator,\r\n  }\r\n\r\n  return (\r\n    <MyForm {...formProps}>\r\n      {({ myInput, mySelect, myDateTimePicker, myButton }) => (\r\n        <>\r\n          {myInput({\r\n            label: 'Firstname',\r\n            value: profile.firstname,\r\n            name: 'firstname',\r\n          })}\r\n          {myInput({\r\n            label: 'Middlename',\r\n            value: profile.middlename,\r\n            name: 'middlename',\r\n          })}\r\n          {myInput({\r\n            label: 'Lastname',\r\n            value: profile.lastname,\r\n            name: 'lastname',\r\n          })}\r\n          {myInput({\r\n            label: 'Contact Number',\r\n            value: profile.contact,\r\n            name: 'contact',\r\n          })}\r\n\r\n          {myInput({\r\n            label: 'Address',\r\n            value: profile.address,\r\n            name: 'address',\r\n            isMultiline: true,\r\n          })}\r\n          {mySelect({\r\n            label: 'Gender',\r\n            value: profile.gender,\r\n            name: 'gender',\r\n            options: [\r\n              { value: 'Male' },\r\n              { value: 'Female' },\r\n              { value: 'Other' },\r\n            ],\r\n          })}\r\n\r\n          {mySelect({\r\n            label: 'Civil Status',\r\n            value: profile.civil,\r\n            name: 'civil',\r\n            labelWidth: 80,\r\n            options: [\r\n              { value: 'Single' },\r\n              { value: 'Married' },\r\n              { value: 'Widowed' },\r\n            ],\r\n          })}\r\n\r\n          {myDateTimePicker({\r\n            label: 'Birthdate',\r\n            value: profile.birthdate,\r\n            name: 'birthdate',\r\n          })}\r\n\r\n          <Grid\r\n            style={{ paddingLeft: 18, paddingTop: 10, paddingBottom: 5 }}\r\n            container\r\n            xs={12}\r\n            justify='center'\r\n            spacing={2}\r\n          >\r\n            <Grid item xs={6}>\r\n              <Button\r\n                onClick={() => history.goBack()}\r\n                style={{ paddingTop: 15, paddingBottom: 15 }}\r\n                fullWidth\r\n                variant='contained'\r\n                color='default'\r\n              >\r\n                BACK\r\n              </Button>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              {myButton('NEXT')}\r\n            </Grid>\r\n          </Grid>\r\n        </>\r\n      )}\r\n    </MyForm>\r\n  )\r\n}\r\n\r\nexport default ClientStepOne\r\n","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Pages\\Clients\\NewClient\\ClientStepTwo.tsx",["325","326","327"],"import React from 'react'\r\nimport Button from '@material-ui/core/Button'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport MyForm, { MyFormProps } from 'components/Common/MyForm'\r\nimport Client from 'models/client'\r\nimport Commissioner from 'models/commissioner'\r\nimport Divider from '@material-ui/core/Divider'\r\nimport validator from 'validators/clientStepTwoValidator'\r\n\r\nexport interface ClientStepTwoProps {\r\n  onBack: () => void\r\n  onNext: (commissioner: Commissioner) => Promise<void>\r\n  state: [Commissioner, React.Dispatch<React.SetStateAction<Commissioner>>]\r\n}\r\n\r\nexport const ClientStepTwo: React.SFC<ClientStepTwoProps> = ({\r\n  state: [commissioner, setCommissioner],\r\n  onBack,\r\n  onNext,\r\n}) => {\r\n  const formProps: MyFormProps<Commissioner> = {\r\n    state: [commissioner, setCommissioner],\r\n    onSubmit: onNext,\r\n    validator,\r\n    radioButtonDefaultValue: commissioner.position,\r\n  }\r\n\r\n  return (\r\n    <MyForm {...formProps}>\r\n      {({ myRadio, mySelect, myButton }) => (\r\n        <>\r\n          <Grid\r\n            style={{ paddingLeft: 10, marginTop: 5 }}\r\n            spacing={2}\r\n            container\r\n            xs={12}\r\n          >\r\n            <>\r\n              <Grid item xs={10}>\r\n                {mySelect({\r\n                  label: 'Branch Manager',\r\n                  value: commissioner.branch_manager,\r\n                  name: 'branch_manager',\r\n                  labelWidth: 120,\r\n                  options: [\r\n                    { value: 1, name: 'John Doe' },\r\n                    { value: 2, name: 'John Smith' },\r\n                  ],\r\n                })}\r\n              </Grid>\r\n              <Grid container item xs={2} justify='center' alignItems='center'>\r\n                {myRadio({ value: 'branch_manager', name: 'position' })}\r\n              </Grid>\r\n            </>\r\n            <>\r\n              <Grid item xs={10}>\r\n                {mySelect({\r\n                  label: 'Agency Manager',\r\n                  value: commissioner.agency_manager,\r\n                  name: 'agency_manager',\r\n                  labelWidth: 120,\r\n                  options: [\r\n                    { value: 3, name: 'John Joe' },\r\n                    { value: 4, name: 'John Witch' },\r\n                  ],\r\n                })}\r\n              </Grid>\r\n              <Grid container item xs={2} justify='center' alignItems='center'>\r\n                {myRadio({ value: 'agency_manager', name: 'position' })}\r\n              </Grid>\r\n            </>\r\n            <>\r\n              <Grid item xs={10}>\r\n                {mySelect({\r\n                  label: 'Supervisor',\r\n                  value: commissioner.supervisor,\r\n                  name: 'supervisor',\r\n                  labelWidth: 80,\r\n                  options: [\r\n                    { value: 5, name: 'John Doex' },\r\n                    { value: 6, name: 'John Smithx' },\r\n                  ],\r\n                })}\r\n              </Grid>\r\n              <Grid container item xs={2} justify='center' alignItems='center'>\r\n                {myRadio({ value: 'supervisor', name: 'position' })}\r\n              </Grid>\r\n            </>\r\n\r\n            <>\r\n              <Grid item xs={10}>\r\n                {mySelect({\r\n                  label: 'Sales Agent',\r\n                  value: commissioner.sales_agent,\r\n                  name: 'sales_agent',\r\n                  labelWidth: 85,\r\n                  options: [\r\n                    { value: 7, name: 'John Doex' },\r\n                    { value: 8, name: 'John Smithc' },\r\n                  ],\r\n                })}\r\n              </Grid>\r\n              <Grid container item xs={2} justify='center' alignItems='center'>\r\n                {myRadio({ value: 'sales_agent', name: 'position' })}\r\n              </Grid>\r\n            </>\r\n          </Grid>\r\n\r\n          <Grid\r\n            style={{ paddingLeft: 18, paddingTop: 15, paddingBottom: 15 }}\r\n            container\r\n            xs={12}\r\n            justify='center'\r\n            spacing={2}\r\n          >\r\n            <Grid item xs={6}>\r\n              <Button\r\n                onClick={() => onBack()}\r\n                style={{ paddingTop: 15, paddingBottom: 15 }}\r\n                fullWidth\r\n                variant='contained'\r\n                color='default'\r\n              >\r\n                BACK\r\n              </Button>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              {myButton('NEXT')}\r\n            </Grid>\r\n          </Grid>\r\n        </>\r\n      )}\r\n    </MyForm>\r\n  )\r\n}\r\n","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\validators\\saveEmployeeValidator.tsx",["328","329"],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\validators\\saveProfileValidator.tsx",["330"],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Pages\\Clients\\NewClient\\ClientStepThree.tsx",["331"],"import React from 'react'\r\nimport Button from '@material-ui/core/Button'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport MyForm, { MyFormProps } from 'components/Common/MyForm'\r\nimport Client from 'models/client'\r\nimport Commissioner from 'models/commissioner'\r\nimport validator from 'validators/clientStepThreeValidator'\r\n\r\nexport interface ClientStepTwoProps {\r\n  onBack: () => void\r\n  onNext: (client: Client) => Promise<void>\r\n  state: [Client, React.Dispatch<React.SetStateAction<Client>>]\r\n}\r\n\r\nexport const ClientStepThree: React.SFC<ClientStepTwoProps> = ({\r\n  state: [client, setClient],\r\n  onBack,\r\n  onNext,\r\n}) => {\r\n  const formProps: MyFormProps<Client> = {\r\n    state: [client, setClient],\r\n    onSubmit: onNext,\r\n    validator,\r\n  }\r\n\r\n  return (\r\n    <MyForm {...formProps}>\r\n      {({ myInput, mySelect, myButton }) => (\r\n        <>\r\n          {mySelect({\r\n            label: 'Plan',\r\n            value: client.plan,\r\n            name: 'plan',\r\n            labelWidth: 30,\r\n            options: [\r\n              { value: 'Plan 1' },\r\n              { value: 'Plan 2' },\r\n              { value: 'Plan 3' },\r\n            ],\r\n          })}\r\n          {mySelect({\r\n            label: 'Payment Mode',\r\n            value: client.payment_mode,\r\n            name: 'payment_mode',\r\n            labelWidth: 110,\r\n            options: [{ value: 'Installment' }, { value: 'Fullpayment' }],\r\n          })}\r\n\r\n          {client.payment_mode && client.plan && (\r\n            <>\r\n              {client.payment_mode === 'Installment' &&\r\n                mySelect({\r\n                  label: 'Payment Period',\r\n                  value: client.payment_period,\r\n                  name: 'payment_period',\r\n                  labelWidth: 120,\r\n                  options: [\r\n                    { value: 'Monthly' },\r\n                    { value: 'Quarterly' },\r\n                    { value: 'Semi-Annually' },\r\n                    { value: 'Annually' },\r\n                  ],\r\n                })}\r\n\r\n              <Grid\r\n                xs={12}\r\n                style={{\r\n                  marginBottom: 10,\r\n                  marginTop: 10,\r\n                  paddingRight: 8,\r\n                  paddingLeft: 8,\r\n                }}\r\n                direction='column'\r\n              >\r\n                {myInput({\r\n                  label: 'OR Number',\r\n                  name: 'or_number',\r\n                })}\r\n              </Grid>\r\n\r\n              <Grid style={{ paddingLeft: 10 }} direction='column'>\r\n                {client.payment_period &&\r\n                  client.payment_mode === 'Installment' && (\r\n                    <>\r\n                      <Typography component='h6' variant='subtitle1'>\r\n                        Downpayment\r\n                      </Typography>\r\n                      <Typography color='primary' variant='subtitle1'>\r\n                        Php 388.00\r\n                      </Typography>\r\n                    </>\r\n                  )}\r\n                {client.payment_mode === 'Fullpayment' && (\r\n                  <>\r\n                    <Typography component='h6' variant='subtitle1'>\r\n                      Lumpsum Price\r\n                    </Typography>\r\n                    <Typography color='primary' variant='subtitle1'>\r\n                      Php 23,280.00\r\n                    </Typography>\r\n                  </>\r\n                )}\r\n              </Grid>\r\n            </>\r\n          )}\r\n\r\n          <Grid\r\n            style={{ paddingLeft: 18, paddingTop: 15, paddingBottom: 15 }}\r\n            container\r\n            xs={12}\r\n            justify='center'\r\n            spacing={2}\r\n          >\r\n            <Grid item xs={6}>\r\n              <Button\r\n                onClick={() => onBack()}\r\n                style={{ paddingTop: 15, paddingBottom: 15 }}\r\n                fullWidth\r\n                variant='contained'\r\n                color='default'\r\n              >\r\n                BACK\r\n              </Button>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              {myButton('PAY')}\r\n            </Grid>\r\n          </Grid>\r\n        </>\r\n      )}\r\n    </MyForm>\r\n  )\r\n}\r\n","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\validators\\clientStepTwoValidator.tsx",["332"],"import Joi from 'joi'\r\nimport { lettersOnly, notNull } from 'utils/helper'\r\n\r\nconst clientStepTwoValidator = {\r\n  branch_manager: notNull('Branch Manager'),\r\n  agency_manager: notNull('Agency Manager'),\r\n  supervisor: notNull('Supervisor'),\r\n  sales_agent: Joi.optional(),\r\n  position: notNull('Position'),\r\n  insured_employee: Joi.optional(),\r\n}\r\n\r\nexport default clientStepTwoValidator\r\n","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\validators\\clientStepThreeValidator.tsx",["333"],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\providers\\ClientProvicer.tsx",[],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\hooks\\useGlobalState.tsx",["334","335"],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\hooks\\useClientState.tsx",["336","337"],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\api\\clientService.tsx",["338"],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Pages\\Employees\\ViewEmployee\\index.tsx",["339","340","341"],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\pages\\Employees\\index.tsx",["342","343"],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\pages\\Employees\\ViewEmployee\\index.tsx",["344","345","346","347","348","349","350","351","352","353","354","355"],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\pages\\Clients\\index.tsx",["356","357","358"],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\pages\\Clients\\ViewClient\\index.tsx",["359","360","361","362","363"],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\pages\\Employees\\NewEmployee\\index.tsx",["364","365","366","367"],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\pages\\Employees\\EditEmployee\\index.tsx",["368","369","370"],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\pages\\Clients\\NewClient\\index.tsx",["371","372"],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\pages\\Clients\\NewClient\\ClientStepOne.tsx",["373"],"import React, { useContext } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport Button from '@material-ui/core/Button'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport MyForm, { MyFormProps } from 'components/common/MyForm'\r\nimport Profile from 'models/profile'\r\nimport validator from 'validators/saveProfileValidator'\r\n\r\nexport interface ClientStepOneProps {\r\n  state: [Profile, React.Dispatch<React.SetStateAction<Profile>>]\r\n  onNext: (profile: Profile) => Promise<void>\r\n}\r\n\r\nexport const ClientStepOne: React.SFC<ClientStepOneProps> = ({\r\n  state: [profile, setProfile],\r\n  onNext,\r\n}) => {\r\n  const history = useHistory()\r\n\r\n  const formProps: MyFormProps<Profile> = {\r\n    state: [profile, setProfile],\r\n    onSubmit: onNext,\r\n    validator,\r\n  }\r\n\r\n  return (\r\n    <MyForm {...formProps}>\r\n      {({ myInput, mySelect, myDateTimePicker, myButton }) => (\r\n        <>\r\n          {myInput({\r\n            label: 'Firstname',\r\n            value: profile.firstname,\r\n            name: 'firstname',\r\n          })}\r\n          {myInput({\r\n            label: 'Middlename',\r\n            value: profile.middlename,\r\n            name: 'middlename',\r\n          })}\r\n          {myInput({\r\n            label: 'Lastname',\r\n            value: profile.lastname,\r\n            name: 'lastname',\r\n          })}\r\n          {myInput({\r\n            label: 'Contact Number',\r\n            value: profile.contact,\r\n            name: 'contact',\r\n          })}\r\n\r\n          {myInput({\r\n            label: 'Address',\r\n            value: profile.address,\r\n            name: 'address',\r\n            isMultiline: true,\r\n          })}\r\n          {mySelect({\r\n            label: 'Gender',\r\n            value: profile.gender,\r\n            name: 'gender',\r\n            options: [\r\n              { value: 'Male' },\r\n              { value: 'Female' },\r\n              { value: 'Other' },\r\n            ],\r\n          })}\r\n\r\n          {mySelect({\r\n            label: 'Civil Status',\r\n            value: profile.civil,\r\n            name: 'civil',\r\n            labelWidth: 80,\r\n            options: [\r\n              { value: 'Single' },\r\n              { value: 'Married' },\r\n              { value: 'Widowed' },\r\n            ],\r\n          })}\r\n\r\n          {myDateTimePicker({\r\n            label: 'Birthdate',\r\n            value: profile.birthdate,\r\n            name: 'birthdate',\r\n          })}\r\n\r\n          <Grid\r\n            style={{ paddingLeft: 18, paddingTop: 10, paddingBottom: 5 }}\r\n            container\r\n            xs={12}\r\n            justify='center'\r\n            spacing={2}\r\n          >\r\n            <Grid item xs={6}>\r\n              <Button\r\n                onClick={() => history.goBack()}\r\n                style={{ paddingTop: 15, paddingBottom: 15 }}\r\n                fullWidth\r\n                variant='contained'\r\n                color='default'\r\n              >\r\n                BACK\r\n              </Button>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              {myButton('NEXT')}\r\n            </Grid>\r\n          </Grid>\r\n        </>\r\n      )}\r\n    </MyForm>\r\n  )\r\n}\r\n\r\nexport default ClientStepOne\r\n","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\pages\\Clients\\NewClient\\ClientStepTwo.tsx",["374","375","376"],"import React from 'react'\r\nimport Button from '@material-ui/core/Button'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport MyForm, { MyFormProps } from 'components/common/MyForm'\r\nimport Client from 'models/client'\r\nimport Commissioner from 'models/commissioner'\r\nimport Divider from '@material-ui/core/Divider'\r\nimport validator from 'validators/clientStepTwoValidator'\r\n\r\nexport interface ClientStepTwoProps {\r\n  onBack: () => void\r\n  onNext: (commissioner: Commissioner) => Promise<void>\r\n  state: [Commissioner, React.Dispatch<React.SetStateAction<Commissioner>>]\r\n}\r\n\r\nexport const ClientStepTwo: React.SFC<ClientStepTwoProps> = ({\r\n  state: [commissioner, setCommissioner],\r\n  onBack,\r\n  onNext,\r\n}) => {\r\n  const formProps: MyFormProps<Commissioner> = {\r\n    state: [commissioner, setCommissioner],\r\n    onSubmit: onNext,\r\n    validator,\r\n    radioButtonDefaultValue: commissioner.position,\r\n  }\r\n\r\n  return (\r\n    <MyForm {...formProps}>\r\n      {({ myRadio, mySelect, myButton }) => (\r\n        <>\r\n          <Grid\r\n            style={{ paddingLeft: 10, marginTop: 5 }}\r\n            spacing={2}\r\n            container\r\n            xs={12}\r\n          >\r\n            <>\r\n              <Grid item xs={10}>\r\n                {mySelect({\r\n                  label: 'Branch Manager',\r\n                  value: commissioner.branch_manager,\r\n                  name: 'branch_manager',\r\n                  labelWidth: 120,\r\n                  options: [\r\n                    { value: 1, name: 'John Doe' },\r\n                    { value: 2, name: 'John Smith' },\r\n                  ],\r\n                })}\r\n              </Grid>\r\n              <Grid container item xs={2} justify='center' alignItems='center'>\r\n                {myRadio({ value: 'branch_manager', name: 'position' })}\r\n              </Grid>\r\n            </>\r\n            <>\r\n              <Grid item xs={10}>\r\n                {mySelect({\r\n                  label: 'Agency Manager',\r\n                  value: commissioner.agency_manager,\r\n                  name: 'agency_manager',\r\n                  labelWidth: 120,\r\n                  options: [\r\n                    { value: 3, name: 'John Joe' },\r\n                    { value: 4, name: 'John Witch' },\r\n                  ],\r\n                })}\r\n              </Grid>\r\n              <Grid container item xs={2} justify='center' alignItems='center'>\r\n                {myRadio({ value: 'agency_manager', name: 'position' })}\r\n              </Grid>\r\n            </>\r\n            <>\r\n              <Grid item xs={10}>\r\n                {mySelect({\r\n                  label: 'Supervisor',\r\n                  value: commissioner.supervisor,\r\n                  name: 'supervisor',\r\n                  labelWidth: 80,\r\n                  options: [\r\n                    { value: 5, name: 'John Doex' },\r\n                    { value: 6, name: 'John Smithx' },\r\n                  ],\r\n                })}\r\n              </Grid>\r\n              <Grid container item xs={2} justify='center' alignItems='center'>\r\n                {myRadio({ value: 'supervisor', name: 'position' })}\r\n              </Grid>\r\n            </>\r\n\r\n            <>\r\n              <Grid item xs={10}>\r\n                {mySelect({\r\n                  label: 'Sales Agent',\r\n                  value: commissioner.sales_agent,\r\n                  name: 'sales_agent',\r\n                  labelWidth: 85,\r\n                  options: [\r\n                    { value: 7, name: 'John Doex' },\r\n                    { value: 8, name: 'John Smithc' },\r\n                  ],\r\n                })}\r\n              </Grid>\r\n              <Grid container item xs={2} justify='center' alignItems='center'>\r\n                {myRadio({ value: 'sales_agent', name: 'position' })}\r\n              </Grid>\r\n            </>\r\n          </Grid>\r\n\r\n          <Grid\r\n            style={{ paddingLeft: 18, paddingTop: 15, paddingBottom: 15 }}\r\n            container\r\n            xs={12}\r\n            justify='center'\r\n            spacing={2}\r\n          >\r\n            <Grid item xs={6}>\r\n              <Button\r\n                onClick={() => onBack()}\r\n                style={{ paddingTop: 15, paddingBottom: 15 }}\r\n                fullWidth\r\n                variant='contained'\r\n                color='default'\r\n              >\r\n                BACK\r\n              </Button>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              {myButton('NEXT')}\r\n            </Grid>\r\n          </Grid>\r\n        </>\r\n      )}\r\n    </MyForm>\r\n  )\r\n}\r\n","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\pages\\Clients\\NewClient\\ClientStepThree.tsx",["377","378","379","380"],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\pages\\Employees\\EmployeeCard\\index.tsx",[],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\pages\\Clients\\ClientCard\\index.tsx",["381","382","383","384"],"import MyCard from 'components/common/MyCard'\r\nimport { useContext } from 'react'\r\nimport CardContent from '@material-ui/core/CardContent'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport EditIcon from '@material-ui/icons/Edit'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport ViewIcon from '@material-ui/icons/RemoveRedEye'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Divider from '@material-ui/core/Divider'\r\nimport Chip from '@material-ui/core/Chip'\r\nimport Avatar from '@material-ui/core/Avatar'\r\nimport userIcon from 'assets/profile-user.svg'\r\nimport Client from 'models/client'\r\nimport { useHistory } from 'react-router-dom'\r\nimport MyAvatar from 'components/common/MyAvatar'\r\nimport { ClientContext } from 'providers/ClientProvicer'\r\n\r\nimport {\r\n  computeTotalCountPaid,\r\n  computeTotalCountToPay,\r\n} from 'api/clientService'\r\nimport { capitalize } from 'utils/helper'\r\n\r\nexport interface ClientCardProps {\r\n  client: Client\r\n}\r\n\r\nexport const ClientCard: React.SFC<ClientCardProps> = ({ client }) => {\r\n  const history = useHistory()\r\n  const [clientState, clientDispatch] = useContext(ClientContext)!\r\n  return (\r\n    <MyCard title={client.code} style={{ paddingBottom: 5 }}>\r\n      <CardContent>\r\n        <Grid container xs={12} justify='space-between'>\r\n          <Grid\r\n            style={{ paddingLeft: 10 }}\r\n            container\r\n            item\r\n            direction='column'\r\n            xs={7}\r\n            justify='flex-start'\r\n          >\r\n            <Typography component='h6' variant='h6'>\r\n              {`${client.lastname}, ${client.firstname} ${client.middlename}`}\r\n            </Typography>\r\n            <Typography variant='subtitle1' color='textSecondary'>\r\n              {client.plan + ' - ' + client.payment_mode}\r\n            </Typography>\r\n            <Grid item xs={1}>\r\n              <Chip\r\n                style={{ marginTop: 5 }}\r\n                size='small'\r\n                label={\r\n                  computeTotalCountPaid(client, clientState.plans) + ' Paid'\r\n                }\r\n                variant='default'\r\n                color='secondary'\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container item xs={5} justify='center' alignItems='center'>\r\n            <MyAvatar\r\n              text={\r\n                capitalize(client.lastname!) + capitalize(client.firstname!)\r\n              }\r\n              onClick={() => history.push('/clients/' + client.id)}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n\r\n      <Divider style={{ marginLeft: 20, marginRight: 20 }}></Divider>\r\n      <Grid container xs={12} justify='space-evenly'>\r\n        <IconButton\r\n          onClick={() => history.push('/clients/' + client.id)}\r\n          aria-label='view'\r\n        >\r\n          <ViewIcon />\r\n        </IconButton>\r\n        <IconButton\r\n          onClick={() => history.push('/clients/edit/' + client.id)}\r\n          aria-label='edit'\r\n        >\r\n          <EditIcon />\r\n        </IconButton>\r\n        <IconButton aria-label='archive'>\r\n          <DeleteIcon />\r\n        </IconButton>\r\n      </Grid>\r\n    </MyCard>\r\n  )\r\n}\r\nexport default ClientCard\r\n","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\common\\MySearchField\\index.tsx",[],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\common\\MyAvatar\\index.tsx",[],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\layout\\index.tsx",[],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\common\\MyAlert\\index.tsx",[],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\common\\MyNav\\index.tsx",["385"],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\common\\MyForm\\index.tsx",["386"],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\common\\MyStepper\\index.tsx",[],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\common\\MyDrawer\\index.tsx",["387","388"],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\common\\MyCard\\index.tsx",[],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\pages\\Dashboard\\index.tsx",["389","390"],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\providers\\EmployeeProvider.tsx",[],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\hooks\\useEmployeeState.tsx",[],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\api\\employeeService.tsx",[],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\common\\MySkeletonCards\\index.tsx",[],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\utils\\http.ts",["391"],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\common\\MySkeletonCard\\index.tsx",[],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\pages\\Auth\\SignIn\\index.tsx",["392","393"],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\api\\authService.tsx",[],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\validators\\signInValidator.tsx",["394"],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\common\\MyAuthRoute\\index.tsx",[],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\pages\\Clients\\Transaction\\index.tsx",["395","396","397"],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\common\\MyMiniCards\\index.tsx",["398"],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\pages\\Clients\\Transaction\\TransactionForm.tsx",["399","400"],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\validators\\clientTransactionValidator.tsx",["401"],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\pages\\Settings\\index.tsx",[],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\common\\MySkeletonMiniCards\\index.tsx",[],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\common\\MyChips\\index.tsx",[],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\pages\\Clients\\EditClient\\index.tsx",["402","403","404"],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\pages\\Payments\\index.tsx",["405"],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\hooks\\usePaymentState.tsx",["406","407"],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\api\\paymentService.tsx",[],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\providers\\PaymentProvider.tsx",[],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\pages\\Payments\\PaymentCard\\index.tsx",[],{"ruleId":"408","replacedBy":"409"},{"ruleId":"410","replacedBy":"411"},{"ruleId":"412","severity":1,"message":"413","line":18,"column":10,"nodeType":"414","messageId":"415","endLine":18,"endColumn":15},{"ruleId":"416","severity":1,"message":"417","line":22,"column":6,"nodeType":"418","endLine":22,"endColumn":8,"suggestions":"419"},{"ruleId":"408","replacedBy":"420"},{"ruleId":"410","replacedBy":"421"},{"ruleId":"412","severity":1,"message":"422","line":7,"column":31,"nodeType":"414","messageId":"415","endLine":7,"endColumn":41},{"ruleId":"412","severity":1,"message":"423","line":13,"column":10,"nodeType":"414","messageId":"415","endLine":13,"endColumn":11},{"ruleId":"412","severity":1,"message":"423","line":13,"column":10,"nodeType":"414","messageId":"415","endLine":13,"endColumn":11},{"ruleId":"412","severity":1,"message":"424","line":2,"column":8,"nodeType":"414","messageId":"415","endLine":2,"endColumn":14},{"ruleId":"412","severity":1,"message":"423","line":20,"column":10,"nodeType":"414","messageId":"415","endLine":20,"endColumn":11},{"ruleId":"416","severity":1,"message":"425","line":31,"column":6,"nodeType":"418","endLine":31,"endColumn":8,"suggestions":"426"},{"ruleId":"412","severity":1,"message":"427","line":12,"column":8,"nodeType":"414","messageId":"415","endLine":12,"endColumn":14},{"ruleId":"412","severity":1,"message":"428","line":13,"column":8,"nodeType":"414","messageId":"415","endLine":13,"endColumn":16},{"ruleId":"412","severity":1,"message":"423","line":27,"column":10,"nodeType":"414","messageId":"415","endLine":27,"endColumn":11},{"ruleId":"416","severity":1,"message":"429","line":36,"column":6,"nodeType":"418","endLine":36,"endColumn":8,"suggestions":"430"},{"ruleId":"412","severity":1,"message":"413","line":19,"column":10,"nodeType":"414","messageId":"415","endLine":19,"endColumn":15},{"ruleId":"416","severity":1,"message":"431","line":26,"column":6,"nodeType":"418","endLine":26,"endColumn":8,"suggestions":"432"},{"ruleId":"412","severity":1,"message":"433","line":1,"column":17,"nodeType":"414","messageId":"415","endLine":1,"endColumn":27},{"ruleId":"412","severity":1,"message":"434","line":4,"column":8,"nodeType":"414","messageId":"415","endLine":4,"endColumn":18},{"ruleId":"412","severity":1,"message":"424","line":6,"column":8,"nodeType":"414","messageId":"415","endLine":6,"endColumn":14},{"ruleId":"412","severity":1,"message":"435","line":8,"column":8,"nodeType":"414","messageId":"415","endLine":8,"endColumn":15},{"ruleId":"412","severity":1,"message":"436","line":1,"column":8,"nodeType":"414","messageId":"415","endLine":1,"endColumn":11},{"ruleId":"412","severity":1,"message":"437","line":2,"column":8,"nodeType":"414","messageId":"415","endLine":2,"endColumn":16},{"ruleId":"412","severity":1,"message":"436","line":1,"column":8,"nodeType":"414","messageId":"415","endLine":1,"endColumn":11},{"ruleId":"412","severity":1,"message":"438","line":7,"column":8,"nodeType":"414","messageId":"415","endLine":7,"endColumn":20},{"ruleId":"412","severity":1,"message":"439","line":2,"column":10,"nodeType":"414","messageId":"415","endLine":2,"endColumn":21},{"ruleId":"412","severity":1,"message":"439","line":2,"column":10,"nodeType":"414","messageId":"415","endLine":2,"endColumn":21},{"ruleId":"412","severity":1,"message":"440","line":1,"column":22,"nodeType":"414","messageId":"415","endLine":1,"endColumn":30},{"ruleId":"412","severity":1,"message":"441","line":1,"column":32,"nodeType":"414","messageId":"415","endLine":1,"endColumn":45},{"ruleId":"412","severity":1,"message":"441","line":1,"column":10,"nodeType":"414","messageId":"415","endLine":1,"endColumn":23},{"ruleId":"412","severity":1,"message":"440","line":1,"column":25,"nodeType":"414","messageId":"415","endLine":1,"endColumn":33},{"ruleId":"442","severity":1,"message":"443","line":128,"column":7,"nodeType":"444","messageId":"445","endLine":128,"endColumn":12},{"ruleId":"412","severity":1,"message":"446","line":8,"column":8,"nodeType":"414","messageId":"415","endLine":8,"endColumn":16},{"ruleId":"412","severity":1,"message":"423","line":23,"column":10,"nodeType":"414","messageId":"415","endLine":23,"endColumn":11},{"ruleId":"416","severity":1,"message":"417","line":27,"column":6,"nodeType":"418","endLine":27,"endColumn":8,"suggestions":"447"},{"ruleId":"412","severity":1,"message":"423","line":21,"column":10,"nodeType":"414","messageId":"415","endLine":21,"endColumn":11},{"ruleId":"416","severity":1,"message":"448","line":36,"column":6,"nodeType":"418","endLine":36,"endColumn":8,"suggestions":"449"},{"ruleId":"412","severity":1,"message":"450","line":8,"column":8,"nodeType":"414","messageId":"415","endLine":8,"endColumn":18},{"ruleId":"412","severity":1,"message":"451","line":9,"column":8,"nodeType":"414","messageId":"415","endLine":9,"endColumn":12},{"ruleId":"412","severity":1,"message":"427","line":10,"column":8,"nodeType":"414","messageId":"415","endLine":10,"endColumn":14},{"ruleId":"412","severity":1,"message":"452","line":11,"column":8,"nodeType":"414","messageId":"415","endLine":11,"endColumn":18},{"ruleId":"412","severity":1,"message":"446","line":12,"column":8,"nodeType":"414","messageId":"415","endLine":12,"endColumn":16},{"ruleId":"412","severity":1,"message":"453","line":14,"column":8,"nodeType":"414","messageId":"415","endLine":14,"endColumn":16},{"ruleId":"412","severity":1,"message":"428","line":16,"column":8,"nodeType":"414","messageId":"415","endLine":16,"endColumn":16},{"ruleId":"412","severity":1,"message":"454","line":21,"column":8,"nodeType":"414","messageId":"415","endLine":21,"endColumn":18},{"ruleId":"412","severity":1,"message":"455","line":25,"column":10,"nodeType":"414","messageId":"415","endLine":25,"endColumn":23},{"ruleId":"412","severity":1,"message":"456","line":40,"column":9,"nodeType":"414","messageId":"415","endLine":40,"endColumn":15},{"ruleId":"412","severity":1,"message":"423","line":41,"column":10,"nodeType":"414","messageId":"415","endLine":41,"endColumn":11},{"ruleId":"416","severity":1,"message":"417","line":55,"column":6,"nodeType":"418","endLine":55,"endColumn":8,"suggestions":"457"},{"ruleId":"412","severity":1,"message":"458","line":9,"column":33,"nodeType":"414","messageId":"415","endLine":9,"endColumn":41},{"ruleId":"412","severity":1,"message":"459","line":21,"column":10,"nodeType":"414","messageId":"415","endLine":21,"endColumn":21},{"ruleId":"416","severity":1,"message":"425","line":34,"column":6,"nodeType":"418","endLine":34,"endColumn":8,"suggestions":"460"},{"ruleId":"412","severity":1,"message":"450","line":8,"column":8,"nodeType":"414","messageId":"415","endLine":8,"endColumn":18},{"ruleId":"412","severity":1,"message":"428","line":11,"column":8,"nodeType":"414","messageId":"415","endLine":11,"endColumn":16},{"ruleId":"412","severity":1,"message":"461","line":21,"column":3,"nodeType":"414","messageId":"415","endLine":21,"endColumn":25},{"ruleId":"412","severity":1,"message":"423","line":34,"column":10,"nodeType":"414","messageId":"415","endLine":34,"endColumn":11},{"ruleId":"416","severity":1,"message":"429","line":48,"column":6,"nodeType":"418","endLine":48,"endColumn":8,"suggestions":"462"},{"ruleId":"412","severity":1,"message":"422","line":10,"column":31,"nodeType":"414","messageId":"415","endLine":10,"endColumn":41},{"ruleId":"412","severity":1,"message":"423","line":18,"column":10,"nodeType":"414","messageId":"415","endLine":18,"endColumn":11},{"ruleId":"412","severity":1,"message":"463","line":20,"column":10,"nodeType":"414","messageId":"415","endLine":20,"endColumn":23},{"ruleId":"416","severity":1,"message":"464","line":28,"column":6,"nodeType":"418","endLine":28,"endColumn":8,"suggestions":"465"},{"ruleId":"412","severity":1,"message":"466","line":10,"column":10,"nodeType":"414","messageId":"415","endLine":10,"endColumn":22},{"ruleId":"412","severity":1,"message":"423","line":15,"column":10,"nodeType":"414","messageId":"415","endLine":15,"endColumn":11},{"ruleId":"416","severity":1,"message":"467","line":35,"column":6,"nodeType":"418","endLine":35,"endColumn":30,"suggestions":"468"},{"ruleId":"412","severity":1,"message":"413","line":20,"column":10,"nodeType":"414","messageId":"415","endLine":20,"endColumn":15},{"ruleId":"416","severity":1,"message":"431","line":27,"column":6,"nodeType":"418","endLine":27,"endColumn":8,"suggestions":"469"},{"ruleId":"412","severity":1,"message":"433","line":1,"column":17,"nodeType":"414","messageId":"415","endLine":1,"endColumn":27},{"ruleId":"412","severity":1,"message":"434","line":4,"column":8,"nodeType":"414","messageId":"415","endLine":4,"endColumn":18},{"ruleId":"412","severity":1,"message":"424","line":6,"column":8,"nodeType":"414","messageId":"415","endLine":6,"endColumn":14},{"ruleId":"412","severity":1,"message":"435","line":8,"column":8,"nodeType":"414","messageId":"415","endLine":8,"endColumn":15},{"ruleId":"412","severity":1,"message":"434","line":4,"column":8,"nodeType":"414","messageId":"415","endLine":4,"endColumn":18},{"ruleId":"412","severity":1,"message":"438","line":7,"column":8,"nodeType":"414","messageId":"415","endLine":7,"endColumn":20},{"ruleId":"412","severity":1,"message":"470","line":27,"column":23,"nodeType":"414","messageId":"415","endLine":27,"endColumn":37},{"ruleId":"416","severity":1,"message":"471","line":37,"column":6,"nodeType":"418","endLine":37,"endColumn":63,"suggestions":"472"},{"ruleId":"412","severity":1,"message":"427","line":12,"column":8,"nodeType":"414","messageId":"415","endLine":12,"endColumn":14},{"ruleId":"412","severity":1,"message":"428","line":13,"column":8,"nodeType":"414","messageId":"415","endLine":13,"endColumn":16},{"ruleId":"412","severity":1,"message":"461","line":21,"column":3,"nodeType":"414","messageId":"415","endLine":21,"endColumn":25},{"ruleId":"412","severity":1,"message":"470","line":31,"column":23,"nodeType":"414","messageId":"415","endLine":31,"endColumn":37},{"ruleId":"412","severity":1,"message":"473","line":19,"column":9,"nodeType":"414","messageId":"415","endLine":19,"endColumn":16},{"ruleId":"412","severity":1,"message":"413","line":103,"column":10,"nodeType":"414","messageId":"415","endLine":103,"endColumn":15},{"ruleId":"412","severity":1,"message":"456","line":28,"column":9,"nodeType":"414","messageId":"415","endLine":28,"endColumn":15},{"ruleId":"412","severity":1,"message":"413","line":32,"column":10,"nodeType":"414","messageId":"415","endLine":32,"endColumn":15},{"ruleId":"412","severity":1,"message":"413","line":7,"column":10,"nodeType":"414","messageId":"415","endLine":7,"endColumn":15},{"ruleId":"416","severity":1,"message":"417","line":11,"column":6,"nodeType":"418","endLine":11,"endColumn":8,"suggestions":"474"},{"ruleId":"475","severity":1,"message":"476","line":38,"column":1,"nodeType":"477","endLine":44,"endColumn":2},{"ruleId":"412","severity":1,"message":"413","line":17,"column":10,"nodeType":"414","messageId":"415","endLine":17,"endColumn":15},{"ruleId":"416","severity":1,"message":"417","line":23,"column":6,"nodeType":"418","endLine":23,"endColumn":8,"suggestions":"478"},{"ruleId":"412","severity":1,"message":"436","line":1,"column":8,"nodeType":"414","messageId":"415","endLine":1,"endColumn":11},{"ruleId":"412","severity":1,"message":"459","line":22,"column":10,"nodeType":"414","messageId":"415","endLine":22,"endColumn":21},{"ruleId":"416","severity":1,"message":"425","line":35,"column":6,"nodeType":"418","endLine":35,"endColumn":8,"suggestions":"479"},{"ruleId":"416","severity":1,"message":"480","line":56,"column":6,"nodeType":"418","endLine":56,"endColumn":48,"suggestions":"481"},{"ruleId":"412","severity":1,"message":"423","line":35,"column":17,"nodeType":"414","messageId":"415","endLine":35,"endColumn":18},{"ruleId":"412","severity":1,"message":"482","line":3,"column":31,"nodeType":"414","messageId":"415","endLine":3,"endColumn":42},{"ruleId":"412","severity":1,"message":"438","line":5,"column":8,"nodeType":"414","messageId":"415","endLine":5,"endColumn":20},{"ruleId":"412","severity":1,"message":"439","line":2,"column":10,"nodeType":"414","messageId":"415","endLine":2,"endColumn":21},{"ruleId":"412","severity":1,"message":"423","line":17,"column":10,"nodeType":"414","messageId":"415","endLine":17,"endColumn":11},{"ruleId":"412","severity":1,"message":"470","line":19,"column":23,"nodeType":"414","messageId":"415","endLine":19,"endColumn":37},{"ruleId":"416","severity":1,"message":"483","line":35,"column":6,"nodeType":"418","endLine":35,"endColumn":8,"suggestions":"484"},{"ruleId":"416","severity":1,"message":"485","line":18,"column":6,"nodeType":"418","endLine":18,"endColumn":8,"suggestions":"486"},{"ruleId":"412","severity":1,"message":"441","line":2,"column":10,"nodeType":"414","messageId":"415","endLine":2,"endColumn":23},{"ruleId":"412","severity":1,"message":"440","line":2,"column":25,"nodeType":"414","messageId":"415","endLine":2,"endColumn":33},"no-native-reassign",["487"],"no-negated-in-lhs",["488"],"@typescript-eslint/no-unused-vars","'state' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["489"],["487"],["488"],"'InputProps' is defined but never used.","'_' is assigned a value but never used.","'Client' is defined but never used.","React Hook useEffect has missing dependencies: 'clientDispatch' and 'globalDispatch'. Either include them or remove the dependency array.",["490"],"'Avatar' is defined but never used.","'userIcon' is defined but never used.","React Hook useEffect has missing dependencies: 'clientState.clients', 'globalDispatch', and 'id'. Either include them or remove the dependency array.",["491"],"React Hook useEffect has missing dependencies: 'dispatch' and 'scroll'. Either include them or remove the dependency array.",["492"],"'useContext' is defined but never used.","'Typography' is defined but never used.","'Divider' is defined but never used.","'Joi' is defined but never used.","'Employee' is defined but never used.","'Commissioner' is defined but never used.","'lettersOnly' is defined but never used.","'Dispatch' is defined but never used.","'createContext' is defined but never used.","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","'EditIcon' is defined but never used.",["493"],"React Hook useEffect has missing dependencies: 'employeeDispatch' and 'globalDispatch'. Either include them or remove the dependency array.",["494"],"'IconButton' is defined but never used.","'Card' is defined but never used.","'CardHeader' is defined but never used.","'FaceIcon' is defined but never used.","'ClientCard' is defined but never used.","'ClientContext' is defined but never used.","'styles' is assigned a value but never used.",["495"],"'useState' is defined but never used.","'globalState' is assigned a value but never used.",["496"],"'computeTotalCountToPay' is defined but never used.",["497"],"'employeeState' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'globalDispatch'. Either include it or remove the dependency array.",["498"],"'getEmployees' is defined but never used.","React Hook useEffect has missing dependencies: 'employeeDispatch', 'globalDispatch', and 'id'. Either include them or remove the dependency array.",["499"],["500"],"'clientDispatch' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'clientState.plans' and 'setClient'. Either include them or remove the dependency array. If 'setClient' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["501"],"'history' is assigned a value but never used.",["502"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",["503"],["504"],"React Hook useEffect has missing dependencies: 'clientState.plans' and 'transaction'. Either include them or remove the dependency array.",["505"],"'RenderProps' is defined but never used.","React Hook useEffect has missing dependencies: 'clientState.clients', 'globalDispatch', and 'params.id'. Either include them or remove the dependency array.",["506"],"React Hook useEffect has a missing dependency: 'paymentDispatch'. Either include it or remove the dependency array.",["507"],"no-global-assign","no-unsafe-negation",{"desc":"508","fix":"509"},{"desc":"510","fix":"511"},{"desc":"512","fix":"513"},{"desc":"514","fix":"515"},{"desc":"508","fix":"516"},{"desc":"517","fix":"518"},{"desc":"508","fix":"519"},{"desc":"510","fix":"520"},{"desc":"512","fix":"521"},{"desc":"522","fix":"523"},{"desc":"524","fix":"525"},{"desc":"514","fix":"526"},{"desc":"527","fix":"528"},{"desc":"508","fix":"529"},{"desc":"508","fix":"530"},{"desc":"510","fix":"531"},{"desc":"532","fix":"533"},{"desc":"534","fix":"535"},{"desc":"536","fix":"537"},"Update the dependencies array to be: [dispatch]",{"range":"538","text":"539"},"Update the dependencies array to be: [clientDispatch, globalDispatch]",{"range":"540","text":"541"},"Update the dependencies array to be: [clientState.clients, globalDispatch, id]",{"range":"542","text":"543"},"Update the dependencies array to be: [dispatch, scroll]",{"range":"544","text":"545"},{"range":"546","text":"539"},"Update the dependencies array to be: [employeeDispatch, globalDispatch]",{"range":"547","text":"548"},{"range":"549","text":"539"},{"range":"550","text":"541"},{"range":"551","text":"543"},"Update the dependencies array to be: [globalDispatch]",{"range":"552","text":"553"},"Update the dependencies array to be: [employeeDispatch, employeeState.employee, globalDispatch, id]",{"range":"554","text":"555"},{"range":"556","text":"545"},"Update the dependencies array to be: [client.payment_mode, client.payment_period, client.plan, clientState.plans, setClient]",{"range":"557","text":"558"},{"range":"559","text":"539"},{"range":"560","text":"539"},{"range":"561","text":"541"},"Update the dependencies array to be: [transaction.payment_mode, transaction.id, transaction, clientState.plans]",{"range":"562","text":"563"},"Update the dependencies array to be: [clientState.clients, globalDispatch, params.id]",{"range":"564","text":"565"},"Update the dependencies array to be: [paymentDispatch]",{"range":"566","text":"567"},[757,759],"[dispatch]",[1141,1143],"[clientDispatch, globalDispatch]",[1358,1360],"[clientState.clients, globalDispatch, id]",[1007,1009],"[dispatch, scroll]",[1005,1007],[1402,1404],"[employeeDispatch, globalDispatch]",[2180,2182],[1373,1375],[1652,1654],[1140,1142],"[globalDispatch]",[1213,1237],"[employeeDispatch, employeeState.employee, globalDispatch, id]",[1035,1037],[1276,1333],"[client.payment_mode, client.payment_period, client.plan, clientState.plans, setClient]",[334,336],[755,757],[1446,1448],[1928,1970],"[transaction.payment_mode, transaction.id, transaction, clientState.plans]",[1159,1161],"[clientState.clients, globalDispatch, params.id]",[679,681],"[paymentDispatch]"]