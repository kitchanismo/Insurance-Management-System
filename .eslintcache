[{"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\index.tsx":"1","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\App.tsx":"2","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\providers\\index.tsx":"3","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\utils\\helper.ts":"4","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Pages\\Employees\\index.tsx":"5","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Pages\\Employees\\NewEmployee\\index.tsx":"6","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Pages\\Employees\\EditEmployee\\index.tsx":"7","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Pages\\Employees\\EmployeeCard\\index.tsx":"8","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Pages\\clients\\index.tsx":"9","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Common\\MySearchField\\index.tsx":"10","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Pages\\Clients\\index.tsx":"11","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Pages\\Clients\\ClientCard\\index.tsx":"12","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Common\\MyAvatar\\index.tsx":"13","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Pages\\Clients\\ViewClient\\index.tsx":"14","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Pages\\Clients\\NewClient\\index.tsx":"15","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Pages\\Clients\\NewClient\\ClientStepOne.tsx":"16","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Pages\\Clients\\NewClient\\ClientStepTwo.tsx":"17","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\validators\\saveEmployeeValidator.tsx":"18","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\validators\\saveProfileValidator.tsx":"19","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Pages\\Clients\\NewClient\\ClientStepThree.tsx":"20","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\validators\\clientStepTwoValidator.tsx":"21","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\validators\\clientStepThreeValidator.tsx":"22","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\providers\\ClientProvicer.tsx":"23","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\hooks\\useGlobalState.tsx":"24","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\hooks\\useClientState.tsx":"25","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\api\\clientService.tsx":"26","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Pages\\Employees\\ViewEmployee\\index.tsx":"27","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\pages\\Employees\\index.tsx":"28","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\pages\\Employees\\ViewEmployee\\index.tsx":"29","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\pages\\Clients\\index.tsx":"30","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\pages\\Clients\\ViewClient\\index.tsx":"31","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\pages\\Employees\\NewEmployee\\index.tsx":"32","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\pages\\Employees\\EditEmployee\\index.tsx":"33","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\pages\\Clients\\NewClient\\index.tsx":"34","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\pages\\Clients\\NewClient\\ClientStepOne.tsx":"35","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\pages\\Clients\\NewClient\\ClientStepTwo.tsx":"36","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\pages\\Clients\\NewClient\\ClientStepThree.tsx":"37","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\pages\\Employees\\EmployeeCard\\index.tsx":"38","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\pages\\Clients\\ClientCard\\index.tsx":"39","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\common\\MySearchField\\index.tsx":"40","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\common\\MyAvatar\\index.tsx":"41","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\layout\\index.tsx":"42","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\common\\MyAlert\\index.tsx":"43","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\common\\MyNav\\index.tsx":"44","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\common\\MyForm\\index.tsx":"45","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\common\\MyStepper\\index.tsx":"46","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\common\\MyDrawer\\index.tsx":"47","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\common\\MyCard\\index.tsx":"48","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\pages\\Dashboard\\index.tsx":"49","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\providers\\EmployeeProvider.tsx":"50","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\hooks\\useEmployeeState.tsx":"51","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\api\\employeeService.tsx":"52"},{"size":342,"mtime":1612026287995,"results":"53","hashOfConfig":"54"},{"size":596,"mtime":1612092459778,"results":"55","hashOfConfig":"54"},{"size":1060,"mtime":1612026253798,"results":"56","hashOfConfig":"54"},{"size":1972,"mtime":1611918792397,"results":"57","hashOfConfig":"54"},{"size":2405,"mtime":1612026326387,"results":"58","hashOfConfig":"54"},{"size":4262,"mtime":1612026038974,"results":"59","hashOfConfig":"54"},{"size":4389,"mtime":1612026139393,"results":"60","hashOfConfig":"54"},{"size":2913,"mtime":1612026087251,"results":"61","hashOfConfig":"54"},{"size":27,"mtime":1611588252955,"results":"62","hashOfConfig":"54"},{"size":1510,"mtime":1612025364106,"results":"63","hashOfConfig":"54"},{"size":2067,"mtime":1612025557633,"results":"64","hashOfConfig":"54"},{"size":2958,"mtime":1612025770740,"results":"65","hashOfConfig":"54"},{"size":400,"mtime":1612025207022,"results":"66","hashOfConfig":"54"},{"size":6132,"mtime":1612025599805,"results":"67","hashOfConfig":"54"},{"size":4334,"mtime":1612025652721,"results":"68","hashOfConfig":"54"},{"size":3116,"mtime":1612025682832,"results":"69","hashOfConfig":"54"},{"size":4540,"mtime":1612025713442,"results":"70","hashOfConfig":"54"},{"size":559,"mtime":1611730907908,"results":"71","hashOfConfig":"54"},{"size":468,"mtime":1611823235322,"results":"72","hashOfConfig":"54"},{"size":4188,"mtime":1612025697638,"results":"73","hashOfConfig":"54"},{"size":389,"mtime":1611869862713,"results":"74","hashOfConfig":"54"},{"size":521,"mtime":1612041709661,"results":"75","hashOfConfig":"54"},{"size":487,"mtime":1612092273377,"results":"76","hashOfConfig":"54"},{"size":1375,"mtime":1612184090566,"results":"77","hashOfConfig":"54"},{"size":1521,"mtime":1612184548216,"results":"78","hashOfConfig":"54"},{"size":3889,"mtime":1612201290479,"results":"79","hashOfConfig":"54"},{"size":5777,"mtime":1612025945257,"results":"80","hashOfConfig":"54"},{"size":2069,"mtime":1612184452053,"results":"81","hashOfConfig":"54"},{"size":7881,"mtime":1612200018040,"results":"82","hashOfConfig":"54"},{"size":2331,"mtime":1612195707813,"results":"83","hashOfConfig":"54"},{"size":6106,"mtime":1612184125964,"results":"84","hashOfConfig":"54"},{"size":4263,"mtime":1612184698351,"results":"85","hashOfConfig":"54"},{"size":4390,"mtime":1612184683220,"results":"86","hashOfConfig":"54"},{"size":4528,"mtime":1612201425532,"results":"87","hashOfConfig":"54"},{"size":3116,"mtime":1612028993718,"results":"88","hashOfConfig":"54"},{"size":4540,"mtime":1612028993833,"results":"89","hashOfConfig":"54"},{"size":4482,"mtime":1612200910646,"results":"90","hashOfConfig":"54"},{"size":2913,"mtime":1612029042760,"results":"91","hashOfConfig":"54"},{"size":3048,"mtime":1612092552717,"results":"92","hashOfConfig":"54"},{"size":1510,"mtime":1612025364106,"results":"93","hashOfConfig":"54"},{"size":400,"mtime":1612025207022,"results":"94","hashOfConfig":"54"},{"size":1733,"mtime":1612029063409,"results":"95","hashOfConfig":"54"},{"size":852,"mtime":1612184602184,"results":"96","hashOfConfig":"54"},{"size":2602,"mtime":1612186665946,"results":"97","hashOfConfig":"54"},{"size":9232,"mtime":1612184578001,"results":"98","hashOfConfig":"54"},{"size":1391,"mtime":1612055049295,"results":"99","hashOfConfig":"54"},{"size":3063,"mtime":1612187904587,"results":"100","hashOfConfig":"54"},{"size":1057,"mtime":1612025190065,"results":"101","hashOfConfig":"54"},{"size":410,"mtime":1612184659138,"results":"102","hashOfConfig":"54"},{"size":517,"mtime":1612092401758,"results":"103","hashOfConfig":"54"},{"size":699,"mtime":1612092396588,"results":"104","hashOfConfig":"54"},{"size":907,"mtime":1612092749901,"results":"105","hashOfConfig":"54"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},"csx4bj",{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"118"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"118"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"118"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"118"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"118"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"118"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"118"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"118"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"118"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"118"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"108"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"108"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"172","messages":"173","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"174","messages":"175","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"176","messages":"177","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"178","messages":"179","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"180","messages":"181","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"182","messages":"183","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"184","messages":"185","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"186","messages":"187","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"108"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"108"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"208","messages":"209","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"210","messages":"211","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\index.tsx",[],["226","227"],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\App.tsx",[],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\providers\\index.tsx",[],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\utils\\helper.ts",[],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Pages\\Employees\\index.tsx",["228","229"],"import React, { useContext, useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Fab from '@material-ui/core/Fab'\r\nimport AddIcon from '@material-ui/icons/Add'\r\n\r\nimport { Theme, createStyles, makeStyles } from '@material-ui/core/styles'\r\n\r\nimport Employee from 'models/employee'\r\nimport EmployeeCard from './EmployeeCard'\r\nimport MySearchField from 'components/Common/MySearchField'\r\nimport { GlobalContext } from 'hooks/useGlobalState'\r\n\r\nexport interface EmployeesProps {}\r\n\r\nconst Employees: React.SFC<EmployeesProps> = () => {\r\n  const [state, dispatch] = useContext(GlobalContext)!\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: 'setTitle', payload: 'Employee Management' })\r\n  }, [])\r\n\r\n  const employees: Partial<Employee>[] = [\r\n    {\r\n      id: 1,\r\n      firstname: 'Ftname',\r\n      middlename: 'Mee',\r\n      lastname: 'ame',\r\n      position: 'Agency Manager',\r\n      status: 'deactive',\r\n    },\r\n    {\r\n      id: 2,\r\n      firstname: 'Firstname',\r\n      middlename: 'Middlename',\r\n      lastname: 'Lastname',\r\n      position: 'Sales Agent',\r\n      status: 'active',\r\n    },\r\n    {\r\n      id: 3,\r\n      firstname: 'Firstname',\r\n      middlename: 'Middlename',\r\n      lastname: 'Lastname',\r\n      position: 'Branch Manager',\r\n      status: 'deceased',\r\n    },\r\n\r\n    {\r\n      id: 4,\r\n      firstname: 'Firstname',\r\n      middlename: 'Middlename',\r\n      lastname: 'Lastname',\r\n      position: 'Supervisor',\r\n      status: 'active',\r\n    },\r\n  ]\r\n\r\n  const history = useHistory()\r\n\r\n  const styles = useStyles()\r\n  return (\r\n    <>\r\n      <MySearchField style={{ marginBottom: 15 }} />\r\n\r\n      <Grid\r\n        container\r\n        spacing={2}\r\n        direction='column'\r\n        justify='flex-start'\r\n        alignItems='center'\r\n      >\r\n        {employees.map((employee) => (\r\n          <Grid key={employee.id} item xs={12}>\r\n            <EmployeeCard employee={employee} />\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n\r\n      <Fab\r\n        onClick={() => history.push('/employees/new')}\r\n        className={styles.fab}\r\n        color='primary'\r\n        aria-label='add'\r\n      >\r\n        <AddIcon />\r\n      </Fab>\r\n    </>\r\n  )\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    fab: {\r\n      position: 'fixed',\r\n      bottom: 20,\r\n      right: 20,\r\n    },\r\n  }),\r\n)\r\n\r\nexport default Employees\r\n",["230","231"],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Pages\\Employees\\NewEmployee\\index.tsx",["232","233"],"import React, { useContext } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport Button from '@material-ui/core/Button'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport { GlobalContext } from 'hooks/useGlobalState'\r\nimport validator from '../../../../validators/saveEmployeeValidator'\r\nimport MyForm, { MyFormProps, InputProps } from 'components/Common/MyForm'\r\nimport Employee from 'models/employee'\r\n\r\nexport interface NewUserProps {}\r\n\r\nconst NewEmployee: React.SFC<NewUserProps> = () => {\r\n  const [_, dispatch] = useContext(GlobalContext)!\r\n\r\n  const history = useHistory()\r\n\r\n  const [employee, setEmployee] = React.useState<Employee>({\r\n    firstname: 'dfdf',\r\n    middlename: '',\r\n    lastname: '',\r\n    address: '',\r\n    contact: '',\r\n  })\r\n\r\n  const onSubmit = async (data: Employee) => {\r\n    console.log(data)\r\n    dispatch({\r\n      type: 'setAlert',\r\n      payload: { message: 'Successfully added', type: 'success' },\r\n    })\r\n    return Promise.resolve()\r\n  }\r\n\r\n  const formProps: MyFormProps<Employee> = {\r\n    state: [employee, setEmployee],\r\n    onSubmit,\r\n    validator,\r\n  }\r\n\r\n  return (\r\n    <MyForm {...formProps}>\r\n      {({ myInput, mySelect, myDateTimePicker, myButton }) => (\r\n        <>\r\n          {myInput({\r\n            label: 'Firstname',\r\n            value: employee.firstname,\r\n            name: 'firstname',\r\n          })}\r\n          {myInput({\r\n            label: 'Middlename',\r\n            value: employee.middlename,\r\n            name: 'middlename',\r\n          })}\r\n          {myInput({\r\n            label: 'Lastname',\r\n            value: employee.lastname,\r\n            name: 'lastname',\r\n          })}\r\n          {myInput({\r\n            label: 'Contact Number',\r\n            value: employee.contact,\r\n            name: 'contact',\r\n          })}\r\n\r\n          {myInput({\r\n            label: 'Address',\r\n            value: employee.address,\r\n            name: 'address',\r\n            isMultiline: true,\r\n          })}\r\n          {mySelect({\r\n            label: 'Gender',\r\n            value: employee.gender,\r\n            name: 'gender',\r\n            options: [\r\n              { value: 'Male' },\r\n              { value: 'Female' },\r\n              { value: 'Other' },\r\n            ],\r\n          })}\r\n          {mySelect({\r\n            label: 'Civil Status',\r\n            value: employee.civil,\r\n            name: 'civil',\r\n            labelWidth: 80,\r\n            options: [\r\n              { value: 'Single' },\r\n              { value: 'Married' },\r\n              { value: 'Widowed' },\r\n            ],\r\n          })}\r\n\r\n          {mySelect({\r\n            label: 'Position',\r\n            value: employee.position,\r\n            name: 'position',\r\n            labelWidth: 55,\r\n            options: [\r\n              { value: 'Sales Agent' },\r\n              { value: 'Branch Manager' },\r\n              { value: 'Agency Manager' },\r\n              { value: 'Supervisor' },\r\n            ],\r\n          })}\r\n\r\n          {mySelect({\r\n            label: 'Branch',\r\n            value: employee.branch,\r\n            name: 'branch',\r\n            labelWidth: 55,\r\n            options: [{ value: 'Cebu' }, { value: 'Manila' }],\r\n          })}\r\n\r\n          {mySelect({\r\n            label: 'Team',\r\n            value: employee.team,\r\n            name: 'team',\r\n            labelWidth: 40,\r\n            options: [{ value: 'ABC' }],\r\n          })}\r\n\r\n          {myDateTimePicker({\r\n            label: 'Birthdate',\r\n            value: employee.birthdate,\r\n            name: 'birthdate',\r\n          })}\r\n\r\n          <Grid\r\n            style={{ paddingLeft: 18, paddingTop: 10, paddingBottom: 5 }}\r\n            container\r\n            xs={12}\r\n            justify='center'\r\n            spacing={2}\r\n          >\r\n            <Grid item xs={6}>\r\n              <Button\r\n                onClick={() => history.goBack()}\r\n                style={{ paddingTop: 15, paddingBottom: 15 }}\r\n                fullWidth\r\n                variant='contained'\r\n                color='default'\r\n              >\r\n                BACK\r\n              </Button>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              {myButton()}\r\n            </Grid>\r\n          </Grid>\r\n        </>\r\n      )}\r\n    </MyForm>\r\n  )\r\n}\r\nexport default NewEmployee\r\n","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Pages\\Employees\\EditEmployee\\index.tsx",["234"],"import React, { useContext } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport Button from '@material-ui/core/Button'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport { GlobalContext } from 'hooks/useGlobalState'\r\nimport validator from '../../../../validators/saveEmployeeValidator'\r\nimport MyForm, { MyFormProps } from 'components/Common/MyForm'\r\nimport Employee from 'models/employee'\r\n\r\nexport interface EditUserProps {}\r\n\r\nconst EditEmployee: React.SFC<EditUserProps> = () => {\r\n  const [_, dispatch] = useContext(GlobalContext)!\r\n\r\n  const history = useHistory()\r\n\r\n  const [employee, setEmployee] = React.useState<Employee>({\r\n    firstname: 'sds',\r\n    middlename: 'dfdf',\r\n    lastname: 'fgf',\r\n    address: 'fgf',\r\n    contact: 'fgfg',\r\n    gender: 'Male',\r\n    civil: 'Single',\r\n    birthdate: new Date('10/03/1991'),\r\n    position: 'Branch Manager',\r\n  })\r\n\r\n  const onSubmit = async (data: Employee) => {\r\n    console.log(data)\r\n    dispatch({\r\n      type: 'setAlert',\r\n      payload: { message: 'Successfully added', type: 'success' },\r\n    })\r\n\r\n    return Promise.resolve()\r\n  }\r\n\r\n  const formProps: MyFormProps<Employee> = {\r\n    state: [employee, setEmployee],\r\n    onSubmit,\r\n    validator,\r\n  }\r\n\r\n  return (\r\n    <MyForm {...formProps}>\r\n      {({ myInput, mySelect, myDateTimePicker, myButton }) => (\r\n        <>\r\n          {myInput({\r\n            label: 'Firstname',\r\n            value: employee.firstname,\r\n            name: 'firstname',\r\n          })}\r\n          {myInput({\r\n            label: 'Middlename',\r\n            value: employee.middlename,\r\n            name: 'middlename',\r\n          })}\r\n          {myInput({\r\n            label: 'Lastname',\r\n            value: employee.lastname,\r\n            name: 'lastname',\r\n          })}\r\n          {myInput({\r\n            label: 'Contact Number',\r\n            value: employee.contact,\r\n            name: 'contact',\r\n          })}\r\n\r\n          {myInput({\r\n            label: 'Address',\r\n            value: employee.address,\r\n            name: 'address',\r\n            isMultiline: true,\r\n          })}\r\n\r\n          {mySelect({\r\n            label: 'Gender',\r\n            value: employee.gender,\r\n            name: 'gender',\r\n            options: [\r\n              { value: 'Male' },\r\n              { value: 'Female' },\r\n              { value: 'Other' },\r\n            ],\r\n          })}\r\n\r\n          {mySelect({\r\n            label: 'Civil Status',\r\n            value: employee.civil,\r\n            name: 'civil',\r\n            labelWidth: 80,\r\n            options: [\r\n              { value: 'Single' },\r\n              { value: 'Married' },\r\n              { value: 'Widowed' },\r\n            ],\r\n          })}\r\n\r\n          {mySelect({\r\n            label: 'Position',\r\n            value: employee.position,\r\n            name: 'position',\r\n            labelWidth: 55,\r\n            options: [\r\n              { value: 'Sales Agent' },\r\n              { value: 'Branch Manager' },\r\n              { value: 'Agency Manager' },\r\n              { value: 'Supervisor' },\r\n            ],\r\n          })}\r\n\r\n          {mySelect({\r\n            label: 'Branch',\r\n            value: employee.branch,\r\n            name: 'branch',\r\n            labelWidth: 55,\r\n            options: [{ value: 'Cebu' }, { value: 'Manila' }],\r\n          })}\r\n\r\n          {mySelect({\r\n            label: 'Team',\r\n            value: employee.team,\r\n            name: 'team',\r\n            labelWidth: 40,\r\n            options: [{ value: 'ABC' }],\r\n          })}\r\n\r\n          {myDateTimePicker({\r\n            label: 'Birthdate',\r\n            value: employee.birthdate,\r\n            name: 'birthdate',\r\n          })}\r\n\r\n          <Grid\r\n            style={{ paddingLeft: 18, paddingTop: 10, paddingBottom: 5 }}\r\n            container\r\n            xs={12}\r\n            justify='center'\r\n            spacing={2}\r\n          >\r\n            <Grid item xs={6}>\r\n              <Button\r\n                onClick={() => history.goBack()}\r\n                style={{ paddingTop: 15, paddingBottom: 15 }}\r\n                fullWidth\r\n                variant='contained'\r\n                color='default'\r\n              >\r\n                BACK\r\n              </Button>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              {myButton()}\r\n            </Grid>\r\n          </Grid>\r\n        </>\r\n      )}\r\n    </MyForm>\r\n  )\r\n}\r\nexport default EditEmployee\r\n","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Pages\\Employees\\EmployeeCard\\index.tsx",[],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Pages\\clients\\index.tsx",[],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Common\\MySearchField\\index.tsx",[],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Pages\\Clients\\index.tsx",["235","236","237"],"import MySearchField from 'components/Common/MySearchField'\r\nimport Client from 'models/client'\r\nimport { Theme, createStyles, makeStyles } from '@material-ui/core/styles'\r\n\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Fab from '@material-ui/core/Fab'\r\nimport AddIcon from '@material-ui/icons/Add'\r\nimport { useHistory } from 'react-router-dom'\r\nimport ClientCard from './ClientCard'\r\nimport { useContext, useEffect } from 'react'\r\nimport { getClients } from 'api/clientService'\r\nimport { ClientContext } from 'hooks/useClientState'\r\nimport { GlobalContext } from 'hooks/useGlobalState'\r\n\r\nexport interface ClientsProps {}\r\n\r\nconst Clients: React.SFC<ClientsProps> = () => {\r\n  const [clientState, clientDispatch] = useContext(ClientContext)!\r\n\r\n  const [_, globalDispatch] = useContext(GlobalContext)!\r\n\r\n  const styles = useStyles()\r\n  const history = useHistory()\r\n\r\n  useEffect(() => {\r\n    globalDispatch({ type: 'setTitle', payload: 'Client Management' })\r\n    clientDispatch({ type: 'setIsLoading', payload: true })\r\n    getClients().then((clients) => {\r\n      clientDispatch({ type: 'onLoad', payload: clients })\r\n    })\r\n  }, [])\r\n\r\n  if (clientState.isLoading && !clientState.clients.length)\r\n    return <h4>Loading...</h4>\r\n\r\n  return (\r\n    <>\r\n      <MySearchField style={{ marginBottom: 15 }} />\r\n      <Grid\r\n        container\r\n        spacing={2}\r\n        direction='column'\r\n        justify='flex-start'\r\n        alignItems='center'\r\n      >\r\n        {clientState.clients.map((client) => (\r\n          <Grid key={client.id} item xs={12}>\r\n            <ClientCard key={client.id} client={client} />\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n\r\n      <Fab\r\n        onClick={() => history.push('/clients/new')}\r\n        className={styles.fab}\r\n        color='primary'\r\n        aria-label='add'\r\n      >\r\n        <AddIcon />\r\n      </Fab>\r\n    </>\r\n  )\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    fab: {\r\n      position: 'fixed',\r\n      bottom: 20,\r\n      right: 20,\r\n    },\r\n  }),\r\n)\r\n\r\nexport default Clients\r\n","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Pages\\Clients\\ClientCard\\index.tsx",["238","239"],"import MyCard from 'components/Common/MyCard'\r\nimport React from 'react'\r\nimport CardContent from '@material-ui/core/CardContent'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport EditIcon from '@material-ui/icons/Edit'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport ViewIcon from '@material-ui/icons/RemoveRedEye'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Divider from '@material-ui/core/Divider'\r\nimport Chip from '@material-ui/core/Chip'\r\nimport Avatar from '@material-ui/core/Avatar'\r\nimport userIcon from 'assets/profile-user.svg'\r\nimport Client from 'models/client'\r\nimport { useHistory } from 'react-router-dom'\r\nimport MyAvatar from 'components/Common/MyAvatar'\r\nimport { computeTotalPaid, computeTotalPay } from 'api/clientService'\r\n\r\nexport interface ClientCardProps {\r\n  client: Client\r\n}\r\n\r\nexport const ClientCard: React.SFC<ClientCardProps> = ({ client }) => {\r\n  const history = useHistory()\r\n\r\n  return (\r\n    <MyCard title={client.code} style={{ paddingBottom: 5 }}>\r\n      <CardContent>\r\n        <Grid container xs={12} justify='space-between'>\r\n          <Grid\r\n            style={{ paddingLeft: 10 }}\r\n            container\r\n            item\r\n            direction='column'\r\n            xs={7}\r\n            justify='flex-start'\r\n          >\r\n            <Typography component='h6' variant='h6'>\r\n              {`${client.lastname}, ${client.firstname} ${client.middlename}`}\r\n            </Typography>\r\n            <Typography variant='subtitle1' color='textSecondary'>\r\n              {client.plan + ' - ' + client.payment_mode}\r\n            </Typography>\r\n            <Grid item xs={1}>\r\n              <Chip\r\n                style={{ marginTop: 5 }}\r\n                size='small'\r\n                label={\r\n                  computeTotalPaid(client) +\r\n                  '/' +\r\n                  computeTotalPay(client) +\r\n                  ' Paid'\r\n                }\r\n                variant='default'\r\n                color='secondary'\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container item xs={5} justify='center' alignItems='center'>\r\n            <MyAvatar onClick={() => history.push('/clients/' + client.id)} />\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n\r\n      <Divider style={{ marginLeft: 20, marginRight: 20 }}></Divider>\r\n      <Grid container xs={12} justify='space-evenly'>\r\n        <IconButton\r\n          onClick={() => history.push('/clients/' + client.id)}\r\n          aria-label='view'\r\n        >\r\n          <ViewIcon />\r\n        </IconButton>\r\n        <IconButton\r\n          onClick={() => history.push('/clients/edit/' + client.id)}\r\n          aria-label='edit'\r\n        >\r\n          <EditIcon />\r\n        </IconButton>\r\n        <IconButton aria-label='archive'>\r\n          <DeleteIcon />\r\n        </IconButton>\r\n      </Grid>\r\n    </MyCard>\r\n  )\r\n}\r\nexport default ClientCard\r\n","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Common\\MyAvatar\\index.tsx",[],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Pages\\Clients\\ViewClient\\index.tsx",["240","241"],"import React, { useState, useEffect, useContext } from 'react'\r\n\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Button from '@material-ui/core/Button'\r\nimport CardContent from '@material-ui/core/CardContent'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Chip from '@material-ui/core/Chip'\r\nimport Divider from '@material-ui/core/Divider'\r\nimport userIcon from 'assets/profile-user.svg'\r\nimport { calculateAge } from 'utils/helper'\r\nimport MyCard from 'components/Common/MyCard'\r\nimport Client from 'models/client'\r\nimport { ClientContext } from 'hooks/useClientState'\r\nimport { GlobalContext } from 'hooks/useGlobalState'\r\n\r\nimport { getClient, computeTotalPaid, computeTotalPay } from 'api/clientService'\r\n\r\nexport interface ViewClientProps {}\r\n\r\nconst ViewClient: React.SFC<ViewClientProps> = () => {\r\n  const history = useHistory()\r\n\r\n  const { id } = useParams<{ id: string }>()\r\n\r\n  const [_, globalDispatch] = useContext(GlobalContext)!\r\n\r\n  const [clientState] = useContext(ClientContext)!\r\n\r\n  const [client, setClient] = useState<Client>()\r\n\r\n  useEffect(() => {\r\n    globalDispatch({ type: 'setTitle', payload: 'Client Details' })\r\n    getClient(clientState.clients, +id).then((client) => setClient(client))\r\n  }, [])\r\n\r\n  const detail = (title: string, subtitle: any) => (\r\n    <Grid container alignItems='center' direction='column' item xs={6}>\r\n      <Typography component='h6' variant='h6'>\r\n        {title}\r\n      </Typography>\r\n      <Typography variant='subtitle1' color='textSecondary'>\r\n        {subtitle}\r\n      </Typography>\r\n    </Grid>\r\n  )\r\n\r\n  return (\r\n    <Grid container xs={12}>\r\n      {client && (\r\n        <>\r\n          <MyCard title={client.code}>\r\n            <CardContent>\r\n              <Grid container xs={12} justify='space-between'>\r\n                <Grid\r\n                  style={{ paddingLeft: 10 }}\r\n                  container\r\n                  direction='column'\r\n                  item\r\n                  xs={7}\r\n                  justify='flex-start'\r\n                >\r\n                  <Typography component='h6' variant='h6'>\r\n                    {`${client.lastname}, ${client.firstname} ${client.middlename}`}\r\n                  </Typography>\r\n                  <Typography variant='subtitle1' color='textSecondary'>\r\n                    {client.plan + ' - ' + client.payment_mode}\r\n                  </Typography>\r\n\r\n                  <Grid item xs={1}>\r\n                    <Chip\r\n                      style={{ marginTop: 5 }}\r\n                      size='small'\r\n                      label={\r\n                        computeTotalPaid(client) +\r\n                        '/' +\r\n                        computeTotalPay(client) +\r\n                        ' Paid'\r\n                      }\r\n                      variant='default'\r\n                      color='secondary'\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid\r\n                  container\r\n                  item\r\n                  xs={5}\r\n                  justify='center'\r\n                  alignItems='center'\r\n                >\r\n                  <IconButton aria-label='play/pause'>\r\n                    <img\r\n                      style={{ width: 100 }}\r\n                      src={userIcon}\r\n                      alt='User Logo'\r\n                    />\r\n                  </IconButton>\r\n                </Grid>\r\n              </Grid>\r\n            </CardContent>\r\n            <Divider style={{ marginLeft: 20, marginRight: 20 }}></Divider>\r\n            <CardContent>\r\n              <Grid spacing={1} container xs={12} style={{ paddingLeft: 10 }}>\r\n                {detail('Period ', client.payment_period)}\r\n                {detail('Balance', 'Php ' + client.balance)}\r\n                {detail('Branch', client.branch)}\r\n                {detail('Ended', client.end_date?.toLocaleDateString())}\r\n              </Grid>\r\n            </CardContent>\r\n            <Divider style={{ marginLeft: 20, marginRight: 20 }}></Divider>\r\n            <CardContent>\r\n              <Grid spacing={1} container xs={12} style={{ paddingLeft: 10 }}>\r\n                {detail('Gender', client.gender)}\r\n                {detail('Civil Status', client.civil)}\r\n                {detail('Contact', client.contact)}\r\n                {detail(\r\n                  'Age',\r\n                  client.birthdate ? calculateAge(client.birthdate) : 'N/A',\r\n                )}\r\n\r\n                <Grid\r\n                  container\r\n                  alignItems='center'\r\n                  direction='column'\r\n                  item\r\n                  xs={12}\r\n                >\r\n                  <Typography component='h6' variant='h6'>\r\n                    Address\r\n                  </Typography>\r\n                  <Typography variant='subtitle1' color='textSecondary'>\r\n                    {client.address}\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n            </CardContent>\r\n          </MyCard>\r\n          <Grid\r\n            style={{ paddingLeft: 18, paddingTop: 10, paddingBottom: 5 }}\r\n            container\r\n            xs={12}\r\n            justify='center'\r\n            spacing={2}\r\n          >\r\n            <Grid item xs={6}>\r\n              <Button\r\n                onClick={() => history.goBack()}\r\n                style={{ paddingTop: 15, paddingBottom: 15 }}\r\n                fullWidth\r\n                variant='contained'\r\n                color='default'\r\n              >\r\n                BACK\r\n              </Button>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <Button\r\n                onClick={() => history.push('/clients/edit/' + client.id)}\r\n                style={{ paddingTop: 15, paddingBottom: 15 }}\r\n                fullWidth\r\n                variant='contained'\r\n                color='primary'\r\n              >\r\n                EDIT\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </>\r\n      )}\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default ViewClient\r\n","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Pages\\Clients\\NewClient\\index.tsx",["242","243"],"import React, { useContext, useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport Button from '@material-ui/core/Button'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Profile from 'models/profile'\r\nimport Client from 'models/client'\r\nimport Commissioner from 'models/commissioner'\r\nimport { ClientStepOne } from './ClientStepOne'\r\nimport { ClientStepTwo } from './ClientStepTwo'\r\nimport MyStepper, { useStepper } from 'components/Common/MyStepper'\r\nimport { ClientStepThree } from './ClientStepThree'\r\nimport Scroll from 'react-scroll'\r\nimport { GlobalContext } from 'hooks/useGlobalState'\r\n\r\nexport interface NewClientProps {}\r\n\r\nconst NewClient: React.SFC<NewClientProps> = () => {\r\n  const [state, dispatch] = useContext(GlobalContext)!\r\n\r\n  const scroll = Scroll.animateScroll\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: 'setTitle', payload: 'Client Registration' })\r\n    scroll.scrollToTop({ duration: 500 })\r\n  }, [])\r\n\r\n  const history = useHistory()\r\n\r\n  const stepper = useStepper([\r\n    'Create Profile Account',\r\n    'Select All Commissioners',\r\n    'Select Plan And Payment',\r\n  ])\r\n\r\n  const [profile, setProfile] = React.useState<Profile>({})\r\n\r\n  const [commissioner, setCommissioner] = React.useState<Commissioner>({\r\n    position: 'sales_agent',\r\n  })\r\n\r\n  const [client, setClient] = React.useState<Client>({})\r\n\r\n  const onNextOne = async (profile: Profile) => {\r\n    scroll.scrollToTop({ duration: 500 })\r\n    console.log('profile', profile)\r\n    setProfile(profile)\r\n    stepper.handleNext()\r\n  }\r\n\r\n  const onNextTwo = async (commissioner: Commissioner) => {\r\n    const insured_employee = commissioner[commissioner.position] ?? ''\r\n\r\n    if (!insured_employee) {\r\n      dispatch({\r\n        type: 'setAlert',\r\n        payload: {\r\n          message:\r\n            'Sales Agent is not present! Please select another employee.',\r\n          type: 'error',\r\n        },\r\n      })\r\n\r\n      return\r\n    }\r\n\r\n    scroll.scrollToTop({ duration: 500 })\r\n\r\n    setClient((client) => ({ ...client, insured_employee }))\r\n\r\n    setCommissioner(commissioner)\r\n\r\n    stepper.handleNext()\r\n\r\n    console.log(commissioner)\r\n  }\r\n\r\n  const onNextThree = async (client: Client) => {\r\n    scroll.scrollToTop({ duration: 500 })\r\n\r\n    setClient(client)\r\n\r\n    stepper.handleNext()\r\n\r\n    console.log({\r\n      client: { ...profile, ...client },\r\n      commissioner,\r\n    })\r\n  }\r\n\r\n  const onAddNew = () => {\r\n    stepper.handleReset()\r\n    setProfile({})\r\n    setCommissioner({\r\n      position: 'sales_agent',\r\n    })\r\n    setClient({})\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <MyStepper {...stepper} />\r\n      {stepper.activeStep === 0 && (\r\n        <ClientStepOne onNext={onNextOne} state={[profile, setProfile]} />\r\n      )}\r\n      {stepper.activeStep === 1 && (\r\n        <ClientStepTwo\r\n          onBack={() => stepper.handleBack()}\r\n          onNext={onNextTwo}\r\n          state={[commissioner, setCommissioner]}\r\n        />\r\n      )}\r\n      {stepper.activeStep === 2 && (\r\n        <ClientStepThree\r\n          onBack={() => stepper.handleBack()}\r\n          onNext={onNextThree}\r\n          state={[client, setClient]}\r\n        />\r\n      )}\r\n\r\n      {stepper.activeStep === 3 && (\r\n        <Grid container xs={12} direction='column' alignItems='center'>\r\n          <Typography component='h6' variant='subtitle1'>\r\n            All Step Completed!\r\n          </Typography>\r\n          <Grid spacing={2} item container xs={12}>\r\n            <Grid item xs={6}>\r\n              <Button\r\n                onClick={() => history.replace('/clients')}\r\n                style={{ paddingTop: 15, paddingBottom: 15, marginTop: 10 }}\r\n                fullWidth\r\n                variant='contained'\r\n                color='default'\r\n              >\r\n                CLIENT LIST\r\n              </Button>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <Button\r\n                onClick={onAddNew}\r\n                style={{ paddingTop: 15, paddingBottom: 15, marginTop: 10 }}\r\n                fullWidth\r\n                variant='contained'\r\n                color='primary'\r\n              >\r\n                ADD NEW\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default NewClient\r\n","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Pages\\Clients\\NewClient\\ClientStepOne.tsx",["244"],"import React, { useContext } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport Button from '@material-ui/core/Button'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport MyForm, { MyFormProps } from 'components/Common/MyForm'\r\nimport Profile from 'models/profile'\r\nimport validator from 'validators/saveProfileValidator'\r\n\r\nexport interface ClientStepOneProps {\r\n  state: [Profile, React.Dispatch<React.SetStateAction<Profile>>]\r\n  onNext: (profile: Profile) => Promise<void>\r\n}\r\n\r\nexport const ClientStepOne: React.SFC<ClientStepOneProps> = ({\r\n  state: [profile, setProfile],\r\n  onNext,\r\n}) => {\r\n  const history = useHistory()\r\n\r\n  const formProps: MyFormProps<Profile> = {\r\n    state: [profile, setProfile],\r\n    onSubmit: onNext,\r\n    validator,\r\n  }\r\n\r\n  return (\r\n    <MyForm {...formProps}>\r\n      {({ myInput, mySelect, myDateTimePicker, myButton }) => (\r\n        <>\r\n          {myInput({\r\n            label: 'Firstname',\r\n            value: profile.firstname,\r\n            name: 'firstname',\r\n          })}\r\n          {myInput({\r\n            label: 'Middlename',\r\n            value: profile.middlename,\r\n            name: 'middlename',\r\n          })}\r\n          {myInput({\r\n            label: 'Lastname',\r\n            value: profile.lastname,\r\n            name: 'lastname',\r\n          })}\r\n          {myInput({\r\n            label: 'Contact Number',\r\n            value: profile.contact,\r\n            name: 'contact',\r\n          })}\r\n\r\n          {myInput({\r\n            label: 'Address',\r\n            value: profile.address,\r\n            name: 'address',\r\n            isMultiline: true,\r\n          })}\r\n          {mySelect({\r\n            label: 'Gender',\r\n            value: profile.gender,\r\n            name: 'gender',\r\n            options: [\r\n              { value: 'Male' },\r\n              { value: 'Female' },\r\n              { value: 'Other' },\r\n            ],\r\n          })}\r\n\r\n          {mySelect({\r\n            label: 'Civil Status',\r\n            value: profile.civil,\r\n            name: 'civil',\r\n            labelWidth: 80,\r\n            options: [\r\n              { value: 'Single' },\r\n              { value: 'Married' },\r\n              { value: 'Widowed' },\r\n            ],\r\n          })}\r\n\r\n          {myDateTimePicker({\r\n            label: 'Birthdate',\r\n            value: profile.birthdate,\r\n            name: 'birthdate',\r\n          })}\r\n\r\n          <Grid\r\n            style={{ paddingLeft: 18, paddingTop: 10, paddingBottom: 5 }}\r\n            container\r\n            xs={12}\r\n            justify='center'\r\n            spacing={2}\r\n          >\r\n            <Grid item xs={6}>\r\n              <Button\r\n                onClick={() => history.goBack()}\r\n                style={{ paddingTop: 15, paddingBottom: 15 }}\r\n                fullWidth\r\n                variant='contained'\r\n                color='default'\r\n              >\r\n                BACK\r\n              </Button>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              {myButton('NEXT')}\r\n            </Grid>\r\n          </Grid>\r\n        </>\r\n      )}\r\n    </MyForm>\r\n  )\r\n}\r\n\r\nexport default ClientStepOne\r\n","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Pages\\Clients\\NewClient\\ClientStepTwo.tsx",["245","246","247"],"import React from 'react'\r\nimport Button from '@material-ui/core/Button'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport MyForm, { MyFormProps } from 'components/Common/MyForm'\r\nimport Client from 'models/client'\r\nimport Commissioner from 'models/commissioner'\r\nimport Divider from '@material-ui/core/Divider'\r\nimport validator from 'validators/clientStepTwoValidator'\r\n\r\nexport interface ClientStepTwoProps {\r\n  onBack: () => void\r\n  onNext: (commissioner: Commissioner) => Promise<void>\r\n  state: [Commissioner, React.Dispatch<React.SetStateAction<Commissioner>>]\r\n}\r\n\r\nexport const ClientStepTwo: React.SFC<ClientStepTwoProps> = ({\r\n  state: [commissioner, setCommissioner],\r\n  onBack,\r\n  onNext,\r\n}) => {\r\n  const formProps: MyFormProps<Commissioner> = {\r\n    state: [commissioner, setCommissioner],\r\n    onSubmit: onNext,\r\n    validator,\r\n    radioButtonDefaultValue: commissioner.position,\r\n  }\r\n\r\n  return (\r\n    <MyForm {...formProps}>\r\n      {({ myRadio, mySelect, myButton }) => (\r\n        <>\r\n          <Grid\r\n            style={{ paddingLeft: 10, marginTop: 5 }}\r\n            spacing={2}\r\n            container\r\n            xs={12}\r\n          >\r\n            <>\r\n              <Grid item xs={10}>\r\n                {mySelect({\r\n                  label: 'Branch Manager',\r\n                  value: commissioner.branch_manager,\r\n                  name: 'branch_manager',\r\n                  labelWidth: 120,\r\n                  options: [\r\n                    { value: 1, name: 'John Doe' },\r\n                    { value: 2, name: 'John Smith' },\r\n                  ],\r\n                })}\r\n              </Grid>\r\n              <Grid container item xs={2} justify='center' alignItems='center'>\r\n                {myRadio({ value: 'branch_manager', name: 'position' })}\r\n              </Grid>\r\n            </>\r\n            <>\r\n              <Grid item xs={10}>\r\n                {mySelect({\r\n                  label: 'Agency Manager',\r\n                  value: commissioner.agency_manager,\r\n                  name: 'agency_manager',\r\n                  labelWidth: 120,\r\n                  options: [\r\n                    { value: 3, name: 'John Joe' },\r\n                    { value: 4, name: 'John Witch' },\r\n                  ],\r\n                })}\r\n              </Grid>\r\n              <Grid container item xs={2} justify='center' alignItems='center'>\r\n                {myRadio({ value: 'agency_manager', name: 'position' })}\r\n              </Grid>\r\n            </>\r\n            <>\r\n              <Grid item xs={10}>\r\n                {mySelect({\r\n                  label: 'Supervisor',\r\n                  value: commissioner.supervisor,\r\n                  name: 'supervisor',\r\n                  labelWidth: 80,\r\n                  options: [\r\n                    { value: 5, name: 'John Doex' },\r\n                    { value: 6, name: 'John Smithx' },\r\n                  ],\r\n                })}\r\n              </Grid>\r\n              <Grid container item xs={2} justify='center' alignItems='center'>\r\n                {myRadio({ value: 'supervisor', name: 'position' })}\r\n              </Grid>\r\n            </>\r\n\r\n            <>\r\n              <Grid item xs={10}>\r\n                {mySelect({\r\n                  label: 'Sales Agent',\r\n                  value: commissioner.sales_agent,\r\n                  name: 'sales_agent',\r\n                  labelWidth: 85,\r\n                  options: [\r\n                    { value: 7, name: 'John Doex' },\r\n                    { value: 8, name: 'John Smithc' },\r\n                  ],\r\n                })}\r\n              </Grid>\r\n              <Grid container item xs={2} justify='center' alignItems='center'>\r\n                {myRadio({ value: 'sales_agent', name: 'position' })}\r\n              </Grid>\r\n            </>\r\n          </Grid>\r\n\r\n          <Grid\r\n            style={{ paddingLeft: 18, paddingTop: 15, paddingBottom: 15 }}\r\n            container\r\n            xs={12}\r\n            justify='center'\r\n            spacing={2}\r\n          >\r\n            <Grid item xs={6}>\r\n              <Button\r\n                onClick={() => onBack()}\r\n                style={{ paddingTop: 15, paddingBottom: 15 }}\r\n                fullWidth\r\n                variant='contained'\r\n                color='default'\r\n              >\r\n                BACK\r\n              </Button>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              {myButton('NEXT')}\r\n            </Grid>\r\n          </Grid>\r\n        </>\r\n      )}\r\n    </MyForm>\r\n  )\r\n}\r\n","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\validators\\saveEmployeeValidator.tsx",[],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\validators\\saveProfileValidator.tsx",[],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Pages\\Clients\\NewClient\\ClientStepThree.tsx",["248"],"import React from 'react'\r\nimport Button from '@material-ui/core/Button'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport MyForm, { MyFormProps } from 'components/Common/MyForm'\r\nimport Client from 'models/client'\r\nimport Commissioner from 'models/commissioner'\r\nimport validator from 'validators/clientStepThreeValidator'\r\n\r\nexport interface ClientStepTwoProps {\r\n  onBack: () => void\r\n  onNext: (client: Client) => Promise<void>\r\n  state: [Client, React.Dispatch<React.SetStateAction<Client>>]\r\n}\r\n\r\nexport const ClientStepThree: React.SFC<ClientStepTwoProps> = ({\r\n  state: [client, setClient],\r\n  onBack,\r\n  onNext,\r\n}) => {\r\n  const formProps: MyFormProps<Client> = {\r\n    state: [client, setClient],\r\n    onSubmit: onNext,\r\n    validator,\r\n  }\r\n\r\n  return (\r\n    <MyForm {...formProps}>\r\n      {({ myInput, mySelect, myButton }) => (\r\n        <>\r\n          {mySelect({\r\n            label: 'Plan',\r\n            value: client.plan,\r\n            name: 'plan',\r\n            labelWidth: 30,\r\n            options: [\r\n              { value: 'Plan 1' },\r\n              { value: 'Plan 2' },\r\n              { value: 'Plan 3' },\r\n            ],\r\n          })}\r\n          {mySelect({\r\n            label: 'Payment Mode',\r\n            value: client.payment_mode,\r\n            name: 'payment_mode',\r\n            labelWidth: 110,\r\n            options: [{ value: 'Installment' }, { value: 'Fullpayment' }],\r\n          })}\r\n\r\n          {client.payment_mode && client.plan && (\r\n            <>\r\n              {client.payment_mode === 'Installment' &&\r\n                mySelect({\r\n                  label: 'Payment Period',\r\n                  value: client.payment_period,\r\n                  name: 'payment_period',\r\n                  labelWidth: 120,\r\n                  options: [\r\n                    { value: 'Monthly' },\r\n                    { value: 'Quarterly' },\r\n                    { value: 'Semi-Annually' },\r\n                    { value: 'Annually' },\r\n                  ],\r\n                })}\r\n\r\n              <Grid\r\n                xs={12}\r\n                style={{\r\n                  marginBottom: 10,\r\n                  marginTop: 10,\r\n                  paddingRight: 8,\r\n                  paddingLeft: 8,\r\n                }}\r\n                direction='column'\r\n              >\r\n                {myInput({\r\n                  label: 'OR Number',\r\n                  name: 'or_number',\r\n                })}\r\n              </Grid>\r\n\r\n              <Grid style={{ paddingLeft: 10 }} direction='column'>\r\n                {client.payment_period &&\r\n                  client.payment_mode === 'Installment' && (\r\n                    <>\r\n                      <Typography component='h6' variant='subtitle1'>\r\n                        Downpayment\r\n                      </Typography>\r\n                      <Typography color='primary' variant='subtitle1'>\r\n                        Php 388.00\r\n                      </Typography>\r\n                    </>\r\n                  )}\r\n                {client.payment_mode === 'Fullpayment' && (\r\n                  <>\r\n                    <Typography component='h6' variant='subtitle1'>\r\n                      Lumpsum Price\r\n                    </Typography>\r\n                    <Typography color='primary' variant='subtitle1'>\r\n                      Php 23,280.00\r\n                    </Typography>\r\n                  </>\r\n                )}\r\n              </Grid>\r\n            </>\r\n          )}\r\n\r\n          <Grid\r\n            style={{ paddingLeft: 18, paddingTop: 15, paddingBottom: 15 }}\r\n            container\r\n            xs={12}\r\n            justify='center'\r\n            spacing={2}\r\n          >\r\n            <Grid item xs={6}>\r\n              <Button\r\n                onClick={() => onBack()}\r\n                style={{ paddingTop: 15, paddingBottom: 15 }}\r\n                fullWidth\r\n                variant='contained'\r\n                color='default'\r\n              >\r\n                BACK\r\n              </Button>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              {myButton('PAY')}\r\n            </Grid>\r\n          </Grid>\r\n        </>\r\n      )}\r\n    </MyForm>\r\n  )\r\n}\r\n","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\validators\\clientStepTwoValidator.tsx",["249"],"import Joi from 'joi'\r\nimport { lettersOnly, notNull } from 'utils/helper'\r\n\r\nconst clientStepTwoValidator = {\r\n  branch_manager: notNull('Branch Manager'),\r\n  agency_manager: notNull('Agency Manager'),\r\n  supervisor: notNull('Supervisor'),\r\n  sales_agent: Joi.optional(),\r\n  position: notNull('Position'),\r\n  insured_employee: Joi.optional(),\r\n}\r\n\r\nexport default clientStepTwoValidator\r\n","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\validators\\clientStepThreeValidator.tsx",["250"],"import Joi from 'joi'\r\nimport { lettersOnly, notNull } from 'utils/helper'\r\n\r\nconst clientStepThreeValidator = {\r\n  plan: notNull('Plan'),\r\n  insured_employee: Joi.optional(),\r\n  payment_mode: notNull('Payment Mode'),\r\n  or_number: notNull('OR Number'),\r\n  payment_period: Joi.when('payment_mode', {\r\n    is: Joi.string().valid('Fullpayment'),\r\n    then: Joi.valid(null),\r\n    otherwise: notNull('Payment Period'),\r\n  }),\r\n}\r\n\r\nexport default clientStepThreeValidator\r\n","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\providers\\ClientProvicer.tsx",[],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\hooks\\useGlobalState.tsx",[],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\hooks\\useClientState.tsx",["251","252"],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\api\\clientService.tsx",["253"],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Pages\\Employees\\ViewEmployee\\index.tsx",["254","255","256"],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\pages\\Employees\\index.tsx",["257","258"],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\pages\\Employees\\ViewEmployee\\index.tsx",["259","260","261","262","263"],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\pages\\Clients\\index.tsx",["264","265","266"],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\pages\\Clients\\ViewClient\\index.tsx",["267","268","269"],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\pages\\Employees\\NewEmployee\\index.tsx",["270","271"],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\pages\\Employees\\EditEmployee\\index.tsx",["272"],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\pages\\Clients\\NewClient\\index.tsx",["273","274"],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\pages\\Clients\\NewClient\\ClientStepOne.tsx",["275"],"import React, { useContext } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport Button from '@material-ui/core/Button'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport MyForm, { MyFormProps } from 'components/common/MyForm'\r\nimport Profile from 'models/profile'\r\nimport validator from 'validators/saveProfileValidator'\r\n\r\nexport interface ClientStepOneProps {\r\n  state: [Profile, React.Dispatch<React.SetStateAction<Profile>>]\r\n  onNext: (profile: Profile) => Promise<void>\r\n}\r\n\r\nexport const ClientStepOne: React.SFC<ClientStepOneProps> = ({\r\n  state: [profile, setProfile],\r\n  onNext,\r\n}) => {\r\n  const history = useHistory()\r\n\r\n  const formProps: MyFormProps<Profile> = {\r\n    state: [profile, setProfile],\r\n    onSubmit: onNext,\r\n    validator,\r\n  }\r\n\r\n  return (\r\n    <MyForm {...formProps}>\r\n      {({ myInput, mySelect, myDateTimePicker, myButton }) => (\r\n        <>\r\n          {myInput({\r\n            label: 'Firstname',\r\n            value: profile.firstname,\r\n            name: 'firstname',\r\n          })}\r\n          {myInput({\r\n            label: 'Middlename',\r\n            value: profile.middlename,\r\n            name: 'middlename',\r\n          })}\r\n          {myInput({\r\n            label: 'Lastname',\r\n            value: profile.lastname,\r\n            name: 'lastname',\r\n          })}\r\n          {myInput({\r\n            label: 'Contact Number',\r\n            value: profile.contact,\r\n            name: 'contact',\r\n          })}\r\n\r\n          {myInput({\r\n            label: 'Address',\r\n            value: profile.address,\r\n            name: 'address',\r\n            isMultiline: true,\r\n          })}\r\n          {mySelect({\r\n            label: 'Gender',\r\n            value: profile.gender,\r\n            name: 'gender',\r\n            options: [\r\n              { value: 'Male' },\r\n              { value: 'Female' },\r\n              { value: 'Other' },\r\n            ],\r\n          })}\r\n\r\n          {mySelect({\r\n            label: 'Civil Status',\r\n            value: profile.civil,\r\n            name: 'civil',\r\n            labelWidth: 80,\r\n            options: [\r\n              { value: 'Single' },\r\n              { value: 'Married' },\r\n              { value: 'Widowed' },\r\n            ],\r\n          })}\r\n\r\n          {myDateTimePicker({\r\n            label: 'Birthdate',\r\n            value: profile.birthdate,\r\n            name: 'birthdate',\r\n          })}\r\n\r\n          <Grid\r\n            style={{ paddingLeft: 18, paddingTop: 10, paddingBottom: 5 }}\r\n            container\r\n            xs={12}\r\n            justify='center'\r\n            spacing={2}\r\n          >\r\n            <Grid item xs={6}>\r\n              <Button\r\n                onClick={() => history.goBack()}\r\n                style={{ paddingTop: 15, paddingBottom: 15 }}\r\n                fullWidth\r\n                variant='contained'\r\n                color='default'\r\n              >\r\n                BACK\r\n              </Button>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              {myButton('NEXT')}\r\n            </Grid>\r\n          </Grid>\r\n        </>\r\n      )}\r\n    </MyForm>\r\n  )\r\n}\r\n\r\nexport default ClientStepOne\r\n","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\pages\\Clients\\NewClient\\ClientStepTwo.tsx",["276","277","278"],"import React from 'react'\r\nimport Button from '@material-ui/core/Button'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport MyForm, { MyFormProps } from 'components/common/MyForm'\r\nimport Client from 'models/client'\r\nimport Commissioner from 'models/commissioner'\r\nimport Divider from '@material-ui/core/Divider'\r\nimport validator from 'validators/clientStepTwoValidator'\r\n\r\nexport interface ClientStepTwoProps {\r\n  onBack: () => void\r\n  onNext: (commissioner: Commissioner) => Promise<void>\r\n  state: [Commissioner, React.Dispatch<React.SetStateAction<Commissioner>>]\r\n}\r\n\r\nexport const ClientStepTwo: React.SFC<ClientStepTwoProps> = ({\r\n  state: [commissioner, setCommissioner],\r\n  onBack,\r\n  onNext,\r\n}) => {\r\n  const formProps: MyFormProps<Commissioner> = {\r\n    state: [commissioner, setCommissioner],\r\n    onSubmit: onNext,\r\n    validator,\r\n    radioButtonDefaultValue: commissioner.position,\r\n  }\r\n\r\n  return (\r\n    <MyForm {...formProps}>\r\n      {({ myRadio, mySelect, myButton }) => (\r\n        <>\r\n          <Grid\r\n            style={{ paddingLeft: 10, marginTop: 5 }}\r\n            spacing={2}\r\n            container\r\n            xs={12}\r\n          >\r\n            <>\r\n              <Grid item xs={10}>\r\n                {mySelect({\r\n                  label: 'Branch Manager',\r\n                  value: commissioner.branch_manager,\r\n                  name: 'branch_manager',\r\n                  labelWidth: 120,\r\n                  options: [\r\n                    { value: 1, name: 'John Doe' },\r\n                    { value: 2, name: 'John Smith' },\r\n                  ],\r\n                })}\r\n              </Grid>\r\n              <Grid container item xs={2} justify='center' alignItems='center'>\r\n                {myRadio({ value: 'branch_manager', name: 'position' })}\r\n              </Grid>\r\n            </>\r\n            <>\r\n              <Grid item xs={10}>\r\n                {mySelect({\r\n                  label: 'Agency Manager',\r\n                  value: commissioner.agency_manager,\r\n                  name: 'agency_manager',\r\n                  labelWidth: 120,\r\n                  options: [\r\n                    { value: 3, name: 'John Joe' },\r\n                    { value: 4, name: 'John Witch' },\r\n                  ],\r\n                })}\r\n              </Grid>\r\n              <Grid container item xs={2} justify='center' alignItems='center'>\r\n                {myRadio({ value: 'agency_manager', name: 'position' })}\r\n              </Grid>\r\n            </>\r\n            <>\r\n              <Grid item xs={10}>\r\n                {mySelect({\r\n                  label: 'Supervisor',\r\n                  value: commissioner.supervisor,\r\n                  name: 'supervisor',\r\n                  labelWidth: 80,\r\n                  options: [\r\n                    { value: 5, name: 'John Doex' },\r\n                    { value: 6, name: 'John Smithx' },\r\n                  ],\r\n                })}\r\n              </Grid>\r\n              <Grid container item xs={2} justify='center' alignItems='center'>\r\n                {myRadio({ value: 'supervisor', name: 'position' })}\r\n              </Grid>\r\n            </>\r\n\r\n            <>\r\n              <Grid item xs={10}>\r\n                {mySelect({\r\n                  label: 'Sales Agent',\r\n                  value: commissioner.sales_agent,\r\n                  name: 'sales_agent',\r\n                  labelWidth: 85,\r\n                  options: [\r\n                    { value: 7, name: 'John Doex' },\r\n                    { value: 8, name: 'John Smithc' },\r\n                  ],\r\n                })}\r\n              </Grid>\r\n              <Grid container item xs={2} justify='center' alignItems='center'>\r\n                {myRadio({ value: 'sales_agent', name: 'position' })}\r\n              </Grid>\r\n            </>\r\n          </Grid>\r\n\r\n          <Grid\r\n            style={{ paddingLeft: 18, paddingTop: 15, paddingBottom: 15 }}\r\n            container\r\n            xs={12}\r\n            justify='center'\r\n            spacing={2}\r\n          >\r\n            <Grid item xs={6}>\r\n              <Button\r\n                onClick={() => onBack()}\r\n                style={{ paddingTop: 15, paddingBottom: 15 }}\r\n                fullWidth\r\n                variant='contained'\r\n                color='default'\r\n              >\r\n                BACK\r\n              </Button>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              {myButton('NEXT')}\r\n            </Grid>\r\n          </Grid>\r\n        </>\r\n      )}\r\n    </MyForm>\r\n  )\r\n}\r\n","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\pages\\Clients\\NewClient\\ClientStepThree.tsx",["279","280","281","282"],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\pages\\Employees\\EmployeeCard\\index.tsx",[],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\pages\\Clients\\ClientCard\\index.tsx",["283","284","285","286"],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\common\\MySearchField\\index.tsx",[],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\common\\MyAvatar\\index.tsx",[],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\layout\\index.tsx",[],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\common\\MyAlert\\index.tsx",[],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\common\\MyNav\\index.tsx",["287"],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\common\\MyForm\\index.tsx",["288"],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\common\\MyStepper\\index.tsx",[],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\common\\MyDrawer\\index.tsx",["289"],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\common\\MyCard\\index.tsx",[],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\pages\\Dashboard\\index.tsx",["290","291"],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\providers\\EmployeeProvider.tsx",[],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\hooks\\useEmployeeState.tsx",[],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\api\\employeeService.tsx",[],{"ruleId":"292","replacedBy":"293"},{"ruleId":"294","replacedBy":"295"},{"ruleId":"296","severity":1,"message":"297","line":18,"column":10,"nodeType":"298","messageId":"299","endLine":18,"endColumn":15},{"ruleId":"300","severity":1,"message":"301","line":22,"column":6,"nodeType":"302","endLine":22,"endColumn":8,"suggestions":"303"},{"ruleId":"292","replacedBy":"304"},{"ruleId":"294","replacedBy":"305"},{"ruleId":"296","severity":1,"message":"306","line":7,"column":31,"nodeType":"298","messageId":"299","endLine":7,"endColumn":41},{"ruleId":"296","severity":1,"message":"307","line":13,"column":10,"nodeType":"298","messageId":"299","endLine":13,"endColumn":11},{"ruleId":"296","severity":1,"message":"307","line":13,"column":10,"nodeType":"298","messageId":"299","endLine":13,"endColumn":11},{"ruleId":"296","severity":1,"message":"308","line":2,"column":8,"nodeType":"298","messageId":"299","endLine":2,"endColumn":14},{"ruleId":"296","severity":1,"message":"307","line":20,"column":10,"nodeType":"298","messageId":"299","endLine":20,"endColumn":11},{"ruleId":"300","severity":1,"message":"309","line":31,"column":6,"nodeType":"302","endLine":31,"endColumn":8,"suggestions":"310"},{"ruleId":"296","severity":1,"message":"311","line":12,"column":8,"nodeType":"298","messageId":"299","endLine":12,"endColumn":14},{"ruleId":"296","severity":1,"message":"312","line":13,"column":8,"nodeType":"298","messageId":"299","endLine":13,"endColumn":16},{"ruleId":"296","severity":1,"message":"307","line":27,"column":10,"nodeType":"298","messageId":"299","endLine":27,"endColumn":11},{"ruleId":"300","severity":1,"message":"313","line":36,"column":6,"nodeType":"302","endLine":36,"endColumn":8,"suggestions":"314"},{"ruleId":"296","severity":1,"message":"297","line":19,"column":10,"nodeType":"298","messageId":"299","endLine":19,"endColumn":15},{"ruleId":"300","severity":1,"message":"315","line":26,"column":6,"nodeType":"302","endLine":26,"endColumn":8,"suggestions":"316"},{"ruleId":"296","severity":1,"message":"317","line":1,"column":17,"nodeType":"298","messageId":"299","endLine":1,"endColumn":27},{"ruleId":"296","severity":1,"message":"318","line":4,"column":8,"nodeType":"298","messageId":"299","endLine":4,"endColumn":18},{"ruleId":"296","severity":1,"message":"308","line":6,"column":8,"nodeType":"298","messageId":"299","endLine":6,"endColumn":14},{"ruleId":"296","severity":1,"message":"319","line":8,"column":8,"nodeType":"298","messageId":"299","endLine":8,"endColumn":15},{"ruleId":"296","severity":1,"message":"320","line":7,"column":8,"nodeType":"298","messageId":"299","endLine":7,"endColumn":20},{"ruleId":"296","severity":1,"message":"321","line":2,"column":10,"nodeType":"298","messageId":"299","endLine":2,"endColumn":21},{"ruleId":"296","severity":1,"message":"321","line":2,"column":10,"nodeType":"298","messageId":"299","endLine":2,"endColumn":21},{"ruleId":"296","severity":1,"message":"322","line":1,"column":10,"nodeType":"298","messageId":"299","endLine":1,"endColumn":23},{"ruleId":"296","severity":1,"message":"323","line":1,"column":25,"nodeType":"298","messageId":"299","endLine":1,"endColumn":33},{"ruleId":"324","severity":1,"message":"325","line":126,"column":7,"nodeType":"326","messageId":"327","endLine":126,"endColumn":12},{"ruleId":"296","severity":1,"message":"328","line":8,"column":8,"nodeType":"298","messageId":"299","endLine":8,"endColumn":16},{"ruleId":"296","severity":1,"message":"307","line":23,"column":10,"nodeType":"298","messageId":"299","endLine":23,"endColumn":11},{"ruleId":"300","severity":1,"message":"301","line":27,"column":6,"nodeType":"302","endLine":27,"endColumn":8,"suggestions":"329"},{"ruleId":"296","severity":1,"message":"307","line":19,"column":10,"nodeType":"298","messageId":"299","endLine":19,"endColumn":11},{"ruleId":"300","severity":1,"message":"330","line":33,"column":6,"nodeType":"302","endLine":33,"endColumn":8,"suggestions":"331"},{"ruleId":"296","severity":1,"message":"328","line":9,"column":8,"nodeType":"298","messageId":"299","endLine":9,"endColumn":16},{"ruleId":"296","severity":1,"message":"332","line":17,"column":8,"nodeType":"298","messageId":"299","endLine":17,"endColumn":18},{"ruleId":"296","severity":1,"message":"307","line":30,"column":10,"nodeType":"298","messageId":"299","endLine":30,"endColumn":11},{"ruleId":"296","severity":1,"message":"333","line":32,"column":23,"nodeType":"298","messageId":"299","endLine":32,"endColumn":37},{"ruleId":"300","severity":1,"message":"301","line":36,"column":6,"nodeType":"302","endLine":36,"endColumn":8,"suggestions":"334"},{"ruleId":"296","severity":1,"message":"308","line":2,"column":8,"nodeType":"298","messageId":"299","endLine":2,"endColumn":14},{"ruleId":"296","severity":1,"message":"335","line":20,"column":10,"nodeType":"298","messageId":"299","endLine":20,"endColumn":21},{"ruleId":"300","severity":1,"message":"309","line":33,"column":6,"nodeType":"302","endLine":33,"endColumn":8,"suggestions":"336"},{"ruleId":"296","severity":1,"message":"337","line":21,"column":3,"nodeType":"298","messageId":"299","endLine":21,"endColumn":25},{"ruleId":"296","severity":1,"message":"307","line":31,"column":10,"nodeType":"298","messageId":"299","endLine":31,"endColumn":11},{"ruleId":"300","severity":1,"message":"313","line":40,"column":6,"nodeType":"302","endLine":40,"endColumn":8,"suggestions":"338"},{"ruleId":"296","severity":1,"message":"306","line":7,"column":31,"nodeType":"298","messageId":"299","endLine":7,"endColumn":41},{"ruleId":"296","severity":1,"message":"307","line":13,"column":10,"nodeType":"298","messageId":"299","endLine":13,"endColumn":11},{"ruleId":"296","severity":1,"message":"307","line":13,"column":10,"nodeType":"298","messageId":"299","endLine":13,"endColumn":11},{"ruleId":"296","severity":1,"message":"297","line":20,"column":10,"nodeType":"298","messageId":"299","endLine":20,"endColumn":15},{"ruleId":"300","severity":1,"message":"315","line":27,"column":6,"nodeType":"302","endLine":27,"endColumn":8,"suggestions":"339"},{"ruleId":"296","severity":1,"message":"317","line":1,"column":17,"nodeType":"298","messageId":"299","endLine":1,"endColumn":27},{"ruleId":"296","severity":1,"message":"318","line":4,"column":8,"nodeType":"298","messageId":"299","endLine":4,"endColumn":18},{"ruleId":"296","severity":1,"message":"308","line":6,"column":8,"nodeType":"298","messageId":"299","endLine":6,"endColumn":14},{"ruleId":"296","severity":1,"message":"319","line":8,"column":8,"nodeType":"298","messageId":"299","endLine":8,"endColumn":15},{"ruleId":"296","severity":1,"message":"318","line":4,"column":8,"nodeType":"298","messageId":"299","endLine":4,"endColumn":18},{"ruleId":"296","severity":1,"message":"320","line":7,"column":8,"nodeType":"298","messageId":"299","endLine":7,"endColumn":20},{"ruleId":"296","severity":1,"message":"333","line":27,"column":23,"nodeType":"298","messageId":"299","endLine":27,"endColumn":37},{"ruleId":"300","severity":1,"message":"340","line":38,"column":6,"nodeType":"302","endLine":38,"endColumn":63,"suggestions":"341"},{"ruleId":"296","severity":1,"message":"311","line":12,"column":8,"nodeType":"298","messageId":"299","endLine":12,"endColumn":14},{"ruleId":"296","severity":1,"message":"312","line":13,"column":8,"nodeType":"298","messageId":"299","endLine":13,"endColumn":16},{"ruleId":"296","severity":1,"message":"337","line":21,"column":3,"nodeType":"298","messageId":"299","endLine":21,"endColumn":25},{"ruleId":"296","severity":1,"message":"333","line":30,"column":23,"nodeType":"298","messageId":"299","endLine":30,"endColumn":37},{"ruleId":"296","severity":1,"message":"342","line":19,"column":9,"nodeType":"298","messageId":"299","endLine":19,"endColumn":16},{"ruleId":"296","severity":1,"message":"297","line":65,"column":10,"nodeType":"298","messageId":"299","endLine":65,"endColumn":15},{"ruleId":"296","severity":1,"message":"343","line":26,"column":9,"nodeType":"298","messageId":"299","endLine":26,"endColumn":15},{"ruleId":"296","severity":1,"message":"297","line":7,"column":10,"nodeType":"298","messageId":"299","endLine":7,"endColumn":15},{"ruleId":"300","severity":1,"message":"301","line":11,"column":6,"nodeType":"302","endLine":11,"endColumn":8,"suggestions":"344"},"no-native-reassign",["345"],"no-negated-in-lhs",["346"],"@typescript-eslint/no-unused-vars","'state' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["347"],["345"],["346"],"'InputProps' is defined but never used.","'_' is assigned a value but never used.","'Client' is defined but never used.","React Hook useEffect has missing dependencies: 'clientDispatch' and 'globalDispatch'. Either include them or remove the dependency array.",["348"],"'Avatar' is defined but never used.","'userIcon' is defined but never used.","React Hook useEffect has missing dependencies: 'clientState.clients', 'globalDispatch', and 'id'. Either include them or remove the dependency array.",["349"],"React Hook useEffect has missing dependencies: 'dispatch' and 'scroll'. Either include them or remove the dependency array.",["350"],"'useContext' is defined but never used.","'Typography' is defined but never used.","'Divider' is defined but never used.","'Commissioner' is defined but never used.","'lettersOnly' is defined but never used.","'createContext' is defined but never used.","'Dispatch' is defined but never used.","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","'EditIcon' is defined but never used.",["351"],"React Hook useEffect has missing dependencies: 'employeeDispatch' and 'globalDispatch'. Either include them or remove the dependency array.",["352"],"'ClientCard' is defined but never used.","'clientDispatch' is assigned a value but never used.",["353"],"'globalState' is assigned a value but never used.",["354"],"'computeTotalCountToPay' is defined but never used.",["355"],["356"],"React Hook useEffect has missing dependencies: 'client', 'clientState.plans', and 'setClient'. Either include them or remove the dependency array. If 'setClient' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["357"],"'history' is assigned a value but never used.","'styles' is assigned a value but never used.",["358"],"no-global-assign","no-unsafe-negation",{"desc":"359","fix":"360"},{"desc":"361","fix":"362"},{"desc":"363","fix":"364"},{"desc":"365","fix":"366"},{"desc":"359","fix":"367"},{"desc":"368","fix":"369"},{"desc":"359","fix":"370"},{"desc":"361","fix":"371"},{"desc":"363","fix":"372"},{"desc":"365","fix":"373"},{"desc":"374","fix":"375"},{"desc":"359","fix":"376"},"Update the dependencies array to be: [dispatch]",{"range":"377","text":"378"},"Update the dependencies array to be: [clientDispatch, globalDispatch]",{"range":"379","text":"380"},"Update the dependencies array to be: [clientState.clients, globalDispatch, id]",{"range":"381","text":"382"},"Update the dependencies array to be: [dispatch, scroll]",{"range":"383","text":"384"},{"range":"385","text":"378"},"Update the dependencies array to be: [employeeDispatch, globalDispatch]",{"range":"386","text":"387"},{"range":"388","text":"378"},{"range":"389","text":"380"},{"range":"390","text":"382"},{"range":"391","text":"384"},"Update the dependencies array to be: [client, client.payment_mode, client.payment_period, client.plan, clientState.plans, setClient]",{"range":"392","text":"393"},{"range":"394","text":"378"},[757,759],"[dispatch]",[1141,1143],"[clientDispatch, globalDispatch]",[1358,1360],"[clientState.clients, globalDispatch, id]",[1007,1009],"[dispatch, scroll]",[1005,1007],[1234,1236],"[employeeDispatch, globalDispatch]",[1357,1359],[1296,1298],[1386,1388],[1046,1048],[1344,1401],"[client, client.payment_mode, client.payment_period, client.plan, clientState.plans, setClient]",[345,347]]