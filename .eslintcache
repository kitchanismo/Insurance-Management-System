[{"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\index.tsx":"1","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\App.tsx":"2","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\utils\\helper.ts":"3","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Pages\\Employees\\index.tsx":"4","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Pages\\Employees\\NewEmployee\\index.tsx":"5","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Pages\\Employees\\EditEmployee\\index.tsx":"6","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Pages\\Employees\\EmployeeCard\\index.tsx":"7","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Pages\\clients\\index.tsx":"8","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Common\\MySearchField\\index.tsx":"9","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Pages\\Clients\\index.tsx":"10","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Pages\\Clients\\ClientCard\\index.tsx":"11","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Common\\MyAvatar\\index.tsx":"12","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Pages\\Clients\\ViewClient\\index.tsx":"13","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Pages\\Clients\\NewClient\\index.tsx":"14","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Pages\\Clients\\NewClient\\ClientStepOne.tsx":"15","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Pages\\Clients\\NewClient\\ClientStepTwo.tsx":"16","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\validators\\saveEmployeeValidator.tsx":"17","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\validators\\saveProfileValidator.tsx":"18","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Pages\\Clients\\NewClient\\ClientStepThree.tsx":"19","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\validators\\clientStepTwoValidator.tsx":"20","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\validators\\clientStepThreeValidator.tsx":"21","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Pages\\Employees\\ViewEmployee\\index.tsx":"22","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\pages\\Employees\\index.tsx":"23","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\pages\\Employees\\ViewEmployee\\index.tsx":"24","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\pages\\Clients\\index.tsx":"25","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\pages\\Clients\\ViewClient\\index.tsx":"26","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\pages\\Employees\\NewEmployee\\index.tsx":"27","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\pages\\Employees\\EditEmployee\\index.tsx":"28","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\pages\\Clients\\NewClient\\index.tsx":"29","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\pages\\Clients\\NewClient\\ClientStepOne.tsx":"30","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\pages\\Clients\\NewClient\\ClientStepTwo.tsx":"31","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\pages\\Clients\\NewClient\\ClientStepThree.tsx":"32","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\pages\\Employees\\EmployeeCard\\index.tsx":"33","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\pages\\Clients\\ClientCard\\index.tsx":"34","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\common\\MySearchField\\index.tsx":"35","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\common\\MyAvatar\\index.tsx":"36","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\layout\\index.tsx":"37","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\common\\MyAlert\\index.tsx":"38","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\common\\MyNav\\index.tsx":"39","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\common\\MyForm\\index.tsx":"40","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\common\\MyStepper\\index.tsx":"41","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\common\\MyDrawer\\index.tsx":"42","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\common\\MyCard\\index.tsx":"43","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\pages\\Dashboard\\index.tsx":"44","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\providers\\EmployeeProvider.tsx":"45","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\common\\MySkeletonCards\\index.tsx":"46","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\utils\\http.ts":"47","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\common\\MySkeletonCard\\index.tsx":"48","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\pages\\Auth\\SignIn\\index.tsx":"49","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\validators\\signInValidator.tsx":"50","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\common\\MyAuthRoute\\index.tsx":"51","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\pages\\Clients\\Transaction\\index.tsx":"52","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\common\\MyMiniCards\\index.tsx":"53","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\pages\\Clients\\Transaction\\TransactionForm.tsx":"54","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\validators\\clientTransactionValidator.tsx":"55","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\pages\\Settings\\index.tsx":"56","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\common\\MySkeletonMiniCards\\index.tsx":"57","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\common\\MyChips\\index.tsx":"58","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\pages\\Clients\\EditClient\\index.tsx":"59","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\pages\\Payments\\index.tsx":"60","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\providers\\PaymentProvider.tsx":"61","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\pages\\Payments\\PaymentCard\\index.tsx":"62","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\providers\\GlobalProvider.tsx":"63","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\providers\\ClientProvider.tsx":"64","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\services\\clientService.tsx":"65","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\services\\employeeService.tsx":"66","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\services\\paymentService.tsx":"67","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\services\\authService.tsx":"68","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\pages\\Payments\\PaymentView\\index.tsx":"69","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\services\\imageService.tsx":"70"},{"size":357,"mtime":1612608328875,"results":"71","hashOfConfig":"72"},{"size":860,"mtime":1612609925603,"results":"73","hashOfConfig":"72"},{"size":2097,"mtime":1612292428996,"results":"74","hashOfConfig":"72"},{"size":2405,"mtime":1612026326387,"results":"75","hashOfConfig":"72"},{"size":4262,"mtime":1612026038974,"results":"76","hashOfConfig":"72"},{"size":4389,"mtime":1612026139393,"results":"77","hashOfConfig":"72"},{"size":2913,"mtime":1612026087251,"results":"78","hashOfConfig":"72"},{"size":27,"mtime":1611588252955,"results":"79","hashOfConfig":"72"},{"size":1510,"mtime":1612025364106,"results":"80","hashOfConfig":"72"},{"size":2067,"mtime":1612025557633,"results":"81","hashOfConfig":"72"},{"size":2958,"mtime":1612025770740,"results":"82","hashOfConfig":"72"},{"size":400,"mtime":1612025207022,"results":"83","hashOfConfig":"72"},{"size":6132,"mtime":1612025599805,"results":"84","hashOfConfig":"72"},{"size":4334,"mtime":1612025652721,"results":"85","hashOfConfig":"72"},{"size":3116,"mtime":1612025682832,"results":"86","hashOfConfig":"72"},{"size":4540,"mtime":1612025713442,"results":"87","hashOfConfig":"72"},{"size":518,"mtime":1612529121407,"results":"88","hashOfConfig":"72"},{"size":382,"mtime":1612444021661,"results":"89","hashOfConfig":"72"},{"size":4188,"mtime":1612025697638,"results":"90","hashOfConfig":"72"},{"size":389,"mtime":1611869862713,"results":"91","hashOfConfig":"72"},{"size":523,"mtime":1613272835752,"results":"92","hashOfConfig":"72"},{"size":5777,"mtime":1612025945257,"results":"93","hashOfConfig":"72"},{"size":4670,"mtime":1613183507954,"results":"94","hashOfConfig":"72"},{"size":8383,"mtime":1613278561531,"results":"95","hashOfConfig":"72"},{"size":4374,"mtime":1613280631194,"results":"96","hashOfConfig":"72"},{"size":6601,"mtime":1613205761913,"results":"97","hashOfConfig":"72"},{"size":6035,"mtime":1613169313873,"results":"98","hashOfConfig":"72"},{"size":7123,"mtime":1613279779289,"results":"99","hashOfConfig":"72"},{"size":5787,"mtime":1613273760354,"results":"100","hashOfConfig":"72"},{"size":4449,"mtime":1613177089674,"results":"101","hashOfConfig":"72"},{"size":4517,"mtime":1613174632483,"results":"102","hashOfConfig":"72"},{"size":4531,"mtime":1613272743343,"results":"103","hashOfConfig":"72"},{"size":3265,"mtime":1613204622627,"results":"104","hashOfConfig":"72"},{"size":3371,"mtime":1613204555931,"results":"105","hashOfConfig":"72"},{"size":1707,"mtime":1613124423445,"results":"106","hashOfConfig":"72"},{"size":950,"mtime":1613204348433,"results":"107","hashOfConfig":"72"},{"size":2499,"mtime":1612631115327,"results":"108","hashOfConfig":"72"},{"size":856,"mtime":1612608328703,"results":"109","hashOfConfig":"72"},{"size":2606,"mtime":1612608329223,"results":"110","hashOfConfig":"72"},{"size":11116,"mtime":1613216880296,"results":"111","hashOfConfig":"72"},{"size":1391,"mtime":1612055049295,"results":"112","hashOfConfig":"72"},{"size":3617,"mtime":1612608328703,"results":"113","hashOfConfig":"72"},{"size":1057,"mtime":1612470956152,"results":"114","hashOfConfig":"72"},{"size":423,"mtime":1612608329223,"results":"115","hashOfConfig":"72"},{"size":2928,"mtime":1613204776027,"results":"116","hashOfConfig":"72"},{"size":1420,"mtime":1612294543434,"results":"117","hashOfConfig":"72"},{"size":988,"mtime":1613203487693,"results":"118","hashOfConfig":"72"},{"size":1401,"mtime":1612474036715,"results":"119","hashOfConfig":"72"},{"size":2386,"mtime":1612609895816,"results":"120","hashOfConfig":"72"},{"size":197,"mtime":1612302613209,"results":"121","hashOfConfig":"72"},{"size":754,"mtime":1612608328875,"results":"122","hashOfConfig":"72"},{"size":7071,"mtime":1613290915507,"results":"123","hashOfConfig":"72"},{"size":2837,"mtime":1613264089336,"results":"124","hashOfConfig":"72"},{"size":4566,"mtime":1613272767564,"results":"125","hashOfConfig":"72"},{"size":476,"mtime":1613272829349,"results":"126","hashOfConfig":"72"},{"size":1170,"mtime":1612608328813,"results":"127","hashOfConfig":"72"},{"size":1364,"mtime":1612473662456,"results":"128","hashOfConfig":"72"},{"size":1635,"mtime":1613263345681,"results":"129","hashOfConfig":"72"},{"size":5978,"mtime":1613277222163,"results":"130","hashOfConfig":"72"},{"size":1322,"mtime":1613094449708,"results":"131","hashOfConfig":"72"},{"size":859,"mtime":1612614817810,"results":"132","hashOfConfig":"72"},{"size":2171,"mtime":1612609318980,"results":"133","hashOfConfig":"72"},{"size":2583,"mtime":1612614485358,"results":"134","hashOfConfig":"72"},{"size":2504,"mtime":1613104131331,"results":"135","hashOfConfig":"72"},{"size":3305,"mtime":1613290278735,"results":"136","hashOfConfig":"72"},{"size":1726,"mtime":1613284842216,"results":"137","hashOfConfig":"72"},{"size":1243,"mtime":1613284958429,"results":"138","hashOfConfig":"72"},{"size":161,"mtime":1612611908426,"results":"139","hashOfConfig":"72"},{"size":2540,"mtime":1612638590778,"results":"140","hashOfConfig":"72"},{"size":522,"mtime":1613127398068,"results":"141","hashOfConfig":"72"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},"csx4bj",{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"152"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"152"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"152"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"152"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"152"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"152"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"152"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"152"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"152"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"144"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"144"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"152"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"144"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"199","messages":"200","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"201","messages":"202","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"203","messages":"204","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"205","messages":"206","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"207","messages":"208","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"209","messages":"210","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"211","messages":"212","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"213","messages":"214","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"215","messages":"216","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"217","messages":"218","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"219","messages":"220","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"221","messages":"222","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"223","messages":"224","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"225","messages":"226","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"227","messages":"228","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"144"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"144"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"144"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"258","usedDeprecatedRules":"144"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"261","usedDeprecatedRules":"144"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"266","messages":"267","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"268","messages":"269","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"270","messages":"271","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"278","messages":"279","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"280","messages":"281","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"282","usedDeprecatedRules":"144"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"291","usedDeprecatedRules":"144"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"302","usedDeprecatedRules":"144"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\index.tsx",[],["305","306"],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\App.tsx",[],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\utils\\helper.ts",[],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Pages\\Employees\\index.tsx",["307","308"],"import React, { useContext, useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Fab from '@material-ui/core/Fab'\r\nimport AddIcon from '@material-ui/icons/Add'\r\n\r\nimport { Theme, createStyles, makeStyles } from '@material-ui/core/styles'\r\n\r\nimport Employee from 'models/employee'\r\nimport EmployeeCard from './EmployeeCard'\r\nimport MySearchField from 'components/Common/MySearchField'\r\nimport { GlobalContext } from 'hooks/useGlobalState'\r\n\r\nexport interface EmployeesProps {}\r\n\r\nconst Employees: React.SFC<EmployeesProps> = () => {\r\n  const [state, dispatch] = useContext(GlobalContext)!\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: 'setTitle', payload: 'Employee Management' })\r\n  }, [])\r\n\r\n  const employees: Partial<Employee>[] = [\r\n    {\r\n      id: 1,\r\n      firstname: 'Ftname',\r\n      middlename: 'Mee',\r\n      lastname: 'ame',\r\n      position: 'Agency Manager',\r\n      status: 'deactive',\r\n    },\r\n    {\r\n      id: 2,\r\n      firstname: 'Firstname',\r\n      middlename: 'Middlename',\r\n      lastname: 'Lastname',\r\n      position: 'Sales Agent',\r\n      status: 'active',\r\n    },\r\n    {\r\n      id: 3,\r\n      firstname: 'Firstname',\r\n      middlename: 'Middlename',\r\n      lastname: 'Lastname',\r\n      position: 'Branch Manager',\r\n      status: 'deceased',\r\n    },\r\n\r\n    {\r\n      id: 4,\r\n      firstname: 'Firstname',\r\n      middlename: 'Middlename',\r\n      lastname: 'Lastname',\r\n      position: 'Supervisor',\r\n      status: 'active',\r\n    },\r\n  ]\r\n\r\n  const history = useHistory()\r\n\r\n  const styles = useStyles()\r\n  return (\r\n    <>\r\n      <MySearchField style={{ marginBottom: 15 }} />\r\n\r\n      <Grid\r\n        container\r\n        spacing={2}\r\n        direction='column'\r\n        justify='flex-start'\r\n        alignItems='center'\r\n      >\r\n        {employees.map((employee) => (\r\n          <Grid key={employee.id} item xs={12}>\r\n            <EmployeeCard employee={employee} />\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n\r\n      <Fab\r\n        onClick={() => history.push('/employees/new')}\r\n        className={styles.fab}\r\n        color='primary'\r\n        aria-label='add'\r\n      >\r\n        <AddIcon />\r\n      </Fab>\r\n    </>\r\n  )\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    fab: {\r\n      position: 'fixed',\r\n      bottom: 20,\r\n      right: 20,\r\n    },\r\n  }),\r\n)\r\n\r\nexport default Employees\r\n",["309","310"],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Pages\\Employees\\NewEmployee\\index.tsx",["311","312"],"import React, { useContext } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport Button from '@material-ui/core/Button'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport { GlobalContext } from 'hooks/useGlobalState'\r\nimport validator from '../../../../validators/saveEmployeeValidator'\r\nimport MyForm, { MyFormProps, InputProps } from 'components/Common/MyForm'\r\nimport Employee from 'models/employee'\r\n\r\nexport interface NewUserProps {}\r\n\r\nconst NewEmployee: React.SFC<NewUserProps> = () => {\r\n  const [_, dispatch] = useContext(GlobalContext)!\r\n\r\n  const history = useHistory()\r\n\r\n  const [employee, setEmployee] = React.useState<Employee>({\r\n    firstname: 'dfdf',\r\n    middlename: '',\r\n    lastname: '',\r\n    address: '',\r\n    contact: '',\r\n  })\r\n\r\n  const onSubmit = async (data: Employee) => {\r\n    console.log(data)\r\n    dispatch({\r\n      type: 'setAlert',\r\n      payload: { message: 'Successfully added', type: 'success' },\r\n    })\r\n    return Promise.resolve()\r\n  }\r\n\r\n  const formProps: MyFormProps<Employee> = {\r\n    state: [employee, setEmployee],\r\n    onSubmit,\r\n    validator,\r\n  }\r\n\r\n  return (\r\n    <MyForm {...formProps}>\r\n      {({ myInput, mySelect, myDateTimePicker, myButton }) => (\r\n        <>\r\n          {myInput({\r\n            label: 'Firstname',\r\n            value: employee.firstname,\r\n            name: 'firstname',\r\n          })}\r\n          {myInput({\r\n            label: 'Middlename',\r\n            value: employee.middlename,\r\n            name: 'middlename',\r\n          })}\r\n          {myInput({\r\n            label: 'Lastname',\r\n            value: employee.lastname,\r\n            name: 'lastname',\r\n          })}\r\n          {myInput({\r\n            label: 'Contact Number',\r\n            value: employee.contact,\r\n            name: 'contact',\r\n          })}\r\n\r\n          {myInput({\r\n            label: 'Address',\r\n            value: employee.address,\r\n            name: 'address',\r\n            isMultiline: true,\r\n          })}\r\n          {mySelect({\r\n            label: 'Gender',\r\n            value: employee.gender,\r\n            name: 'gender',\r\n            options: [\r\n              { value: 'Male' },\r\n              { value: 'Female' },\r\n              { value: 'Other' },\r\n            ],\r\n          })}\r\n          {mySelect({\r\n            label: 'Civil Status',\r\n            value: employee.civil,\r\n            name: 'civil',\r\n            labelWidth: 80,\r\n            options: [\r\n              { value: 'Single' },\r\n              { value: 'Married' },\r\n              { value: 'Widowed' },\r\n            ],\r\n          })}\r\n\r\n          {mySelect({\r\n            label: 'Position',\r\n            value: employee.position,\r\n            name: 'position',\r\n            labelWidth: 55,\r\n            options: [\r\n              { value: 'Sales Agent' },\r\n              { value: 'Branch Manager' },\r\n              { value: 'Agency Manager' },\r\n              { value: 'Supervisor' },\r\n            ],\r\n          })}\r\n\r\n          {mySelect({\r\n            label: 'Branch',\r\n            value: employee.branch,\r\n            name: 'branch',\r\n            labelWidth: 55,\r\n            options: [{ value: 'Cebu' }, { value: 'Manila' }],\r\n          })}\r\n\r\n          {mySelect({\r\n            label: 'Team',\r\n            value: employee.team,\r\n            name: 'team',\r\n            labelWidth: 40,\r\n            options: [{ value: 'ABC' }],\r\n          })}\r\n\r\n          {myDateTimePicker({\r\n            label: 'Birthdate',\r\n            value: employee.birthdate,\r\n            name: 'birthdate',\r\n          })}\r\n\r\n          <Grid\r\n            style={{ paddingLeft: 18, paddingTop: 10, paddingBottom: 5 }}\r\n            container\r\n            xs={12}\r\n            justify='center'\r\n            spacing={2}\r\n          >\r\n            <Grid item xs={6}>\r\n              <Button\r\n                onClick={() => history.goBack()}\r\n                style={{ paddingTop: 15, paddingBottom: 15 }}\r\n                fullWidth\r\n                variant='contained'\r\n                color='default'\r\n              >\r\n                BACK\r\n              </Button>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              {myButton()}\r\n            </Grid>\r\n          </Grid>\r\n        </>\r\n      )}\r\n    </MyForm>\r\n  )\r\n}\r\nexport default NewEmployee\r\n","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Pages\\Employees\\EditEmployee\\index.tsx",["313"],"import React, { useContext } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport Button from '@material-ui/core/Button'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport { GlobalContext } from 'hooks/useGlobalState'\r\nimport validator from '../../../../validators/saveEmployeeValidator'\r\nimport MyForm, { MyFormProps } from 'components/Common/MyForm'\r\nimport Employee from 'models/employee'\r\n\r\nexport interface EditUserProps {}\r\n\r\nconst EditEmployee: React.SFC<EditUserProps> = () => {\r\n  const [_, dispatch] = useContext(GlobalContext)!\r\n\r\n  const history = useHistory()\r\n\r\n  const [employee, setEmployee] = React.useState<Employee>({\r\n    firstname: 'sds',\r\n    middlename: 'dfdf',\r\n    lastname: 'fgf',\r\n    address: 'fgf',\r\n    contact: 'fgfg',\r\n    gender: 'Male',\r\n    civil: 'Single',\r\n    birthdate: new Date('10/03/1991'),\r\n    position: 'Branch Manager',\r\n  })\r\n\r\n  const onSubmit = async (data: Employee) => {\r\n    console.log(data)\r\n    dispatch({\r\n      type: 'setAlert',\r\n      payload: { message: 'Successfully added', type: 'success' },\r\n    })\r\n\r\n    return Promise.resolve()\r\n  }\r\n\r\n  const formProps: MyFormProps<Employee> = {\r\n    state: [employee, setEmployee],\r\n    onSubmit,\r\n    validator,\r\n  }\r\n\r\n  return (\r\n    <MyForm {...formProps}>\r\n      {({ myInput, mySelect, myDateTimePicker, myButton }) => (\r\n        <>\r\n          {myInput({\r\n            label: 'Firstname',\r\n            value: employee.firstname,\r\n            name: 'firstname',\r\n          })}\r\n          {myInput({\r\n            label: 'Middlename',\r\n            value: employee.middlename,\r\n            name: 'middlename',\r\n          })}\r\n          {myInput({\r\n            label: 'Lastname',\r\n            value: employee.lastname,\r\n            name: 'lastname',\r\n          })}\r\n          {myInput({\r\n            label: 'Contact Number',\r\n            value: employee.contact,\r\n            name: 'contact',\r\n          })}\r\n\r\n          {myInput({\r\n            label: 'Address',\r\n            value: employee.address,\r\n            name: 'address',\r\n            isMultiline: true,\r\n          })}\r\n\r\n          {mySelect({\r\n            label: 'Gender',\r\n            value: employee.gender,\r\n            name: 'gender',\r\n            options: [\r\n              { value: 'Male' },\r\n              { value: 'Female' },\r\n              { value: 'Other' },\r\n            ],\r\n          })}\r\n\r\n          {mySelect({\r\n            label: 'Civil Status',\r\n            value: employee.civil,\r\n            name: 'civil',\r\n            labelWidth: 80,\r\n            options: [\r\n              { value: 'Single' },\r\n              { value: 'Married' },\r\n              { value: 'Widowed' },\r\n            ],\r\n          })}\r\n\r\n          {mySelect({\r\n            label: 'Position',\r\n            value: employee.position,\r\n            name: 'position',\r\n            labelWidth: 55,\r\n            options: [\r\n              { value: 'Sales Agent' },\r\n              { value: 'Branch Manager' },\r\n              { value: 'Agency Manager' },\r\n              { value: 'Supervisor' },\r\n            ],\r\n          })}\r\n\r\n          {mySelect({\r\n            label: 'Branch',\r\n            value: employee.branch,\r\n            name: 'branch',\r\n            labelWidth: 55,\r\n            options: [{ value: 'Cebu' }, { value: 'Manila' }],\r\n          })}\r\n\r\n          {mySelect({\r\n            label: 'Team',\r\n            value: employee.team,\r\n            name: 'team',\r\n            labelWidth: 40,\r\n            options: [{ value: 'ABC' }],\r\n          })}\r\n\r\n          {myDateTimePicker({\r\n            label: 'Birthdate',\r\n            value: employee.birthdate,\r\n            name: 'birthdate',\r\n          })}\r\n\r\n          <Grid\r\n            style={{ paddingLeft: 18, paddingTop: 10, paddingBottom: 5 }}\r\n            container\r\n            xs={12}\r\n            justify='center'\r\n            spacing={2}\r\n          >\r\n            <Grid item xs={6}>\r\n              <Button\r\n                onClick={() => history.goBack()}\r\n                style={{ paddingTop: 15, paddingBottom: 15 }}\r\n                fullWidth\r\n                variant='contained'\r\n                color='default'\r\n              >\r\n                BACK\r\n              </Button>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              {myButton()}\r\n            </Grid>\r\n          </Grid>\r\n        </>\r\n      )}\r\n    </MyForm>\r\n  )\r\n}\r\nexport default EditEmployee\r\n","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Pages\\Employees\\EmployeeCard\\index.tsx",[],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Pages\\clients\\index.tsx",[],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Common\\MySearchField\\index.tsx",[],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Pages\\Clients\\index.tsx",["314","315","316"],"import MySearchField from 'components/Common/MySearchField'\r\nimport Client from 'models/client'\r\nimport { Theme, createStyles, makeStyles } from '@material-ui/core/styles'\r\n\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Fab from '@material-ui/core/Fab'\r\nimport AddIcon from '@material-ui/icons/Add'\r\nimport { useHistory } from 'react-router-dom'\r\nimport ClientCard from './ClientCard'\r\nimport { useContext, useEffect } from 'react'\r\nimport { getClients } from 'api/clientService'\r\nimport { ClientContext } from 'hooks/useClientState'\r\nimport { GlobalContext } from 'hooks/useGlobalState'\r\n\r\nexport interface ClientsProps {}\r\n\r\nconst Clients: React.SFC<ClientsProps> = () => {\r\n  const [clientState, clientDispatch] = useContext(ClientContext)!\r\n\r\n  const [_, globalDispatch] = useContext(GlobalContext)!\r\n\r\n  const styles = useStyles()\r\n  const history = useHistory()\r\n\r\n  useEffect(() => {\r\n    globalDispatch({ type: 'setTitle', payload: 'Client Management' })\r\n    clientDispatch({ type: 'setIsLoading', payload: true })\r\n    getClients().then((clients) => {\r\n      clientDispatch({ type: 'onLoad', payload: clients })\r\n    })\r\n  }, [])\r\n\r\n  if (clientState.isLoading && !clientState.clients.length)\r\n    return <h4>Loading...</h4>\r\n\r\n  return (\r\n    <>\r\n      <MySearchField style={{ marginBottom: 15 }} />\r\n      <Grid\r\n        container\r\n        spacing={2}\r\n        direction='column'\r\n        justify='flex-start'\r\n        alignItems='center'\r\n      >\r\n        {clientState.clients.map((client) => (\r\n          <Grid key={client.id} item xs={12}>\r\n            <ClientCard key={client.id} client={client} />\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n\r\n      <Fab\r\n        onClick={() => history.push('/clients/new')}\r\n        className={styles.fab}\r\n        color='primary'\r\n        aria-label='add'\r\n      >\r\n        <AddIcon />\r\n      </Fab>\r\n    </>\r\n  )\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    fab: {\r\n      position: 'fixed',\r\n      bottom: 20,\r\n      right: 20,\r\n    },\r\n  }),\r\n)\r\n\r\nexport default Clients\r\n","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Pages\\Clients\\ClientCard\\index.tsx",["317","318"],"import MyCard from 'components/Common/MyCard'\r\nimport React from 'react'\r\nimport CardContent from '@material-ui/core/CardContent'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport EditIcon from '@material-ui/icons/Edit'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport ViewIcon from '@material-ui/icons/RemoveRedEye'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Divider from '@material-ui/core/Divider'\r\nimport Chip from '@material-ui/core/Chip'\r\nimport Avatar from '@material-ui/core/Avatar'\r\nimport userIcon from 'assets/profile-user.svg'\r\nimport Client from 'models/client'\r\nimport { useHistory } from 'react-router-dom'\r\nimport MyAvatar from 'components/Common/MyAvatar'\r\nimport { computeTotalPaid, computeTotalPay } from 'api/clientService'\r\n\r\nexport interface ClientCardProps {\r\n  client: Client\r\n}\r\n\r\nexport const ClientCard: React.SFC<ClientCardProps> = ({ client }) => {\r\n  const history = useHistory()\r\n\r\n  return (\r\n    <MyCard title={client.code} style={{ paddingBottom: 5 }}>\r\n      <CardContent>\r\n        <Grid container xs={12} justify='space-between'>\r\n          <Grid\r\n            style={{ paddingLeft: 10 }}\r\n            container\r\n            item\r\n            direction='column'\r\n            xs={7}\r\n            justify='flex-start'\r\n          >\r\n            <Typography component='h6' variant='h6'>\r\n              {`${client.lastname}, ${client.firstname} ${client.middlename}`}\r\n            </Typography>\r\n            <Typography variant='subtitle1' color='textSecondary'>\r\n              {client.plan + ' - ' + client.payment_mode}\r\n            </Typography>\r\n            <Grid item xs={1}>\r\n              <Chip\r\n                style={{ marginTop: 5 }}\r\n                size='small'\r\n                label={\r\n                  computeTotalPaid(client) +\r\n                  '/' +\r\n                  computeTotalPay(client) +\r\n                  ' Paid'\r\n                }\r\n                variant='default'\r\n                color='secondary'\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container item xs={5} justify='center' alignItems='center'>\r\n            <MyAvatar onClick={() => history.push('/clients/' + client.id)} />\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n\r\n      <Divider style={{ marginLeft: 20, marginRight: 20 }}></Divider>\r\n      <Grid container xs={12} justify='space-evenly'>\r\n        <IconButton\r\n          onClick={() => history.push('/clients/' + client.id)}\r\n          aria-label='view'\r\n        >\r\n          <ViewIcon />\r\n        </IconButton>\r\n        <IconButton\r\n          onClick={() => history.push('/clients/edit/' + client.id)}\r\n          aria-label='edit'\r\n        >\r\n          <EditIcon />\r\n        </IconButton>\r\n        <IconButton aria-label='archive'>\r\n          <DeleteIcon />\r\n        </IconButton>\r\n      </Grid>\r\n    </MyCard>\r\n  )\r\n}\r\nexport default ClientCard\r\n","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Common\\MyAvatar\\index.tsx",[],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Pages\\Clients\\ViewClient\\index.tsx",["319","320"],"import React, { useState, useEffect, useContext } from 'react'\r\n\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Button from '@material-ui/core/Button'\r\nimport CardContent from '@material-ui/core/CardContent'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Chip from '@material-ui/core/Chip'\r\nimport Divider from '@material-ui/core/Divider'\r\nimport userIcon from 'assets/profile-user.svg'\r\nimport { calculateAge } from 'utils/helper'\r\nimport MyCard from 'components/Common/MyCard'\r\nimport Client from 'models/client'\r\nimport { ClientContext } from 'hooks/useClientState'\r\nimport { GlobalContext } from 'hooks/useGlobalState'\r\n\r\nimport { getClient, computeTotalPaid, computeTotalPay } from 'api/clientService'\r\n\r\nexport interface ViewClientProps {}\r\n\r\nconst ViewClient: React.SFC<ViewClientProps> = () => {\r\n  const history = useHistory()\r\n\r\n  const { id } = useParams<{ id: string }>()\r\n\r\n  const [_, globalDispatch] = useContext(GlobalContext)!\r\n\r\n  const [clientState] = useContext(ClientContext)!\r\n\r\n  const [client, setClient] = useState<Client>()\r\n\r\n  useEffect(() => {\r\n    globalDispatch({ type: 'setTitle', payload: 'Client Details' })\r\n    getClient(clientState.clients, +id).then((client) => setClient(client))\r\n  }, [])\r\n\r\n  const detail = (title: string, subtitle: any) => (\r\n    <Grid container alignItems='center' direction='column' item xs={6}>\r\n      <Typography component='h6' variant='h6'>\r\n        {title}\r\n      </Typography>\r\n      <Typography variant='subtitle1' color='textSecondary'>\r\n        {subtitle}\r\n      </Typography>\r\n    </Grid>\r\n  )\r\n\r\n  return (\r\n    <Grid container xs={12}>\r\n      {client && (\r\n        <>\r\n          <MyCard title={client.code}>\r\n            <CardContent>\r\n              <Grid container xs={12} justify='space-between'>\r\n                <Grid\r\n                  style={{ paddingLeft: 10 }}\r\n                  container\r\n                  direction='column'\r\n                  item\r\n                  xs={7}\r\n                  justify='flex-start'\r\n                >\r\n                  <Typography component='h6' variant='h6'>\r\n                    {`${client.lastname}, ${client.firstname} ${client.middlename}`}\r\n                  </Typography>\r\n                  <Typography variant='subtitle1' color='textSecondary'>\r\n                    {client.plan + ' - ' + client.payment_mode}\r\n                  </Typography>\r\n\r\n                  <Grid item xs={1}>\r\n                    <Chip\r\n                      style={{ marginTop: 5 }}\r\n                      size='small'\r\n                      label={\r\n                        computeTotalPaid(client) +\r\n                        '/' +\r\n                        computeTotalPay(client) +\r\n                        ' Paid'\r\n                      }\r\n                      variant='default'\r\n                      color='secondary'\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid\r\n                  container\r\n                  item\r\n                  xs={5}\r\n                  justify='center'\r\n                  alignItems='center'\r\n                >\r\n                  <IconButton aria-label='play/pause'>\r\n                    <img\r\n                      style={{ width: 100 }}\r\n                      src={userIcon}\r\n                      alt='User Logo'\r\n                    />\r\n                  </IconButton>\r\n                </Grid>\r\n              </Grid>\r\n            </CardContent>\r\n            <Divider style={{ marginLeft: 20, marginRight: 20 }}></Divider>\r\n            <CardContent>\r\n              <Grid spacing={1} container xs={12} style={{ paddingLeft: 10 }}>\r\n                {detail('Period ', client.payment_period)}\r\n                {detail('Balance', 'Php ' + client.balance)}\r\n                {detail('Branch', client.branch)}\r\n                {detail('Ended', client.end_date?.toLocaleDateString())}\r\n              </Grid>\r\n            </CardContent>\r\n            <Divider style={{ marginLeft: 20, marginRight: 20 }}></Divider>\r\n            <CardContent>\r\n              <Grid spacing={1} container xs={12} style={{ paddingLeft: 10 }}>\r\n                {detail('Gender', client.gender)}\r\n                {detail('Civil Status', client.civil)}\r\n                {detail('Contact', client.contact)}\r\n                {detail(\r\n                  'Age',\r\n                  client.birthdate ? calculateAge(client.birthdate) : 'N/A',\r\n                )}\r\n\r\n                <Grid\r\n                  container\r\n                  alignItems='center'\r\n                  direction='column'\r\n                  item\r\n                  xs={12}\r\n                >\r\n                  <Typography component='h6' variant='h6'>\r\n                    Address\r\n                  </Typography>\r\n                  <Typography variant='subtitle1' color='textSecondary'>\r\n                    {client.address}\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n            </CardContent>\r\n          </MyCard>\r\n          <Grid\r\n            style={{ paddingLeft: 18, paddingTop: 10, paddingBottom: 5 }}\r\n            container\r\n            xs={12}\r\n            justify='center'\r\n            spacing={2}\r\n          >\r\n            <Grid item xs={6}>\r\n              <Button\r\n                onClick={() => history.goBack()}\r\n                style={{ paddingTop: 15, paddingBottom: 15 }}\r\n                fullWidth\r\n                variant='contained'\r\n                color='default'\r\n              >\r\n                BACK\r\n              </Button>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <Button\r\n                onClick={() => history.push('/clients/edit/' + client.id)}\r\n                style={{ paddingTop: 15, paddingBottom: 15 }}\r\n                fullWidth\r\n                variant='contained'\r\n                color='primary'\r\n              >\r\n                EDIT\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </>\r\n      )}\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default ViewClient\r\n","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Pages\\Clients\\NewClient\\index.tsx",["321","322"],"import React, { useContext, useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport Button from '@material-ui/core/Button'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Profile from 'models/profile'\r\nimport Client from 'models/client'\r\nimport Commissioner from 'models/commissioner'\r\nimport { ClientStepOne } from './ClientStepOne'\r\nimport { ClientStepTwo } from './ClientStepTwo'\r\nimport MyStepper, { useStepper } from 'components/Common/MyStepper'\r\nimport { ClientStepThree } from './ClientStepThree'\r\nimport Scroll from 'react-scroll'\r\nimport { GlobalContext } from 'hooks/useGlobalState'\r\n\r\nexport interface NewClientProps {}\r\n\r\nconst NewClient: React.SFC<NewClientProps> = () => {\r\n  const [state, dispatch] = useContext(GlobalContext)!\r\n\r\n  const scroll = Scroll.animateScroll\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: 'setTitle', payload: 'Client Registration' })\r\n    scroll.scrollToTop({ duration: 500 })\r\n  }, [])\r\n\r\n  const history = useHistory()\r\n\r\n  const stepper = useStepper([\r\n    'Create Profile Account',\r\n    'Select All Commissioners',\r\n    'Select Plan And Payment',\r\n  ])\r\n\r\n  const [profile, setProfile] = React.useState<Profile>({})\r\n\r\n  const [commissioner, setCommissioner] = React.useState<Commissioner>({\r\n    position: 'sales_agent',\r\n  })\r\n\r\n  const [client, setClient] = React.useState<Client>({})\r\n\r\n  const onNextOne = async (profile: Profile) => {\r\n    scroll.scrollToTop({ duration: 500 })\r\n    console.log('profile', profile)\r\n    setProfile(profile)\r\n    stepper.handleNext()\r\n  }\r\n\r\n  const onNextTwo = async (commissioner: Commissioner) => {\r\n    const insured_employee = commissioner[commissioner.position] ?? ''\r\n\r\n    if (!insured_employee) {\r\n      dispatch({\r\n        type: 'setAlert',\r\n        payload: {\r\n          message:\r\n            'Sales Agent is not present! Please select another employee.',\r\n          type: 'error',\r\n        },\r\n      })\r\n\r\n      return\r\n    }\r\n\r\n    scroll.scrollToTop({ duration: 500 })\r\n\r\n    setClient((client) => ({ ...client, insured_employee }))\r\n\r\n    setCommissioner(commissioner)\r\n\r\n    stepper.handleNext()\r\n\r\n    console.log(commissioner)\r\n  }\r\n\r\n  const onNextThree = async (client: Client) => {\r\n    scroll.scrollToTop({ duration: 500 })\r\n\r\n    setClient(client)\r\n\r\n    stepper.handleNext()\r\n\r\n    console.log({\r\n      client: { ...profile, ...client },\r\n      commissioner,\r\n    })\r\n  }\r\n\r\n  const onAddNew = () => {\r\n    stepper.handleReset()\r\n    setProfile({})\r\n    setCommissioner({\r\n      position: 'sales_agent',\r\n    })\r\n    setClient({})\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <MyStepper {...stepper} />\r\n      {stepper.activeStep === 0 && (\r\n        <ClientStepOne onNext={onNextOne} state={[profile, setProfile]} />\r\n      )}\r\n      {stepper.activeStep === 1 && (\r\n        <ClientStepTwo\r\n          onBack={() => stepper.handleBack()}\r\n          onNext={onNextTwo}\r\n          state={[commissioner, setCommissioner]}\r\n        />\r\n      )}\r\n      {stepper.activeStep === 2 && (\r\n        <ClientStepThree\r\n          onBack={() => stepper.handleBack()}\r\n          onNext={onNextThree}\r\n          state={[client, setClient]}\r\n        />\r\n      )}\r\n\r\n      {stepper.activeStep === 3 && (\r\n        <Grid container xs={12} direction='column' alignItems='center'>\r\n          <Typography component='h6' variant='subtitle1'>\r\n            All Step Completed!\r\n          </Typography>\r\n          <Grid spacing={2} item container xs={12}>\r\n            <Grid item xs={6}>\r\n              <Button\r\n                onClick={() => history.replace('/clients')}\r\n                style={{ paddingTop: 15, paddingBottom: 15, marginTop: 10 }}\r\n                fullWidth\r\n                variant='contained'\r\n                color='default'\r\n              >\r\n                CLIENT LIST\r\n              </Button>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <Button\r\n                onClick={onAddNew}\r\n                style={{ paddingTop: 15, paddingBottom: 15, marginTop: 10 }}\r\n                fullWidth\r\n                variant='contained'\r\n                color='primary'\r\n              >\r\n                ADD NEW\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default NewClient\r\n","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Pages\\Clients\\NewClient\\ClientStepOne.tsx",["323"],"import React, { useContext } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport Button from '@material-ui/core/Button'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport MyForm, { MyFormProps } from 'components/Common/MyForm'\r\nimport Profile from 'models/profile'\r\nimport validator from 'validators/saveProfileValidator'\r\n\r\nexport interface ClientStepOneProps {\r\n  state: [Profile, React.Dispatch<React.SetStateAction<Profile>>]\r\n  onNext: (profile: Profile) => Promise<void>\r\n}\r\n\r\nexport const ClientStepOne: React.SFC<ClientStepOneProps> = ({\r\n  state: [profile, setProfile],\r\n  onNext,\r\n}) => {\r\n  const history = useHistory()\r\n\r\n  const formProps: MyFormProps<Profile> = {\r\n    state: [profile, setProfile],\r\n    onSubmit: onNext,\r\n    validator,\r\n  }\r\n\r\n  return (\r\n    <MyForm {...formProps}>\r\n      {({ myInput, mySelect, myDateTimePicker, myButton }) => (\r\n        <>\r\n          {myInput({\r\n            label: 'Firstname',\r\n            value: profile.firstname,\r\n            name: 'firstname',\r\n          })}\r\n          {myInput({\r\n            label: 'Middlename',\r\n            value: profile.middlename,\r\n            name: 'middlename',\r\n          })}\r\n          {myInput({\r\n            label: 'Lastname',\r\n            value: profile.lastname,\r\n            name: 'lastname',\r\n          })}\r\n          {myInput({\r\n            label: 'Contact Number',\r\n            value: profile.contact,\r\n            name: 'contact',\r\n          })}\r\n\r\n          {myInput({\r\n            label: 'Address',\r\n            value: profile.address,\r\n            name: 'address',\r\n            isMultiline: true,\r\n          })}\r\n          {mySelect({\r\n            label: 'Gender',\r\n            value: profile.gender,\r\n            name: 'gender',\r\n            options: [\r\n              { value: 'Male' },\r\n              { value: 'Female' },\r\n              { value: 'Other' },\r\n            ],\r\n          })}\r\n\r\n          {mySelect({\r\n            label: 'Civil Status',\r\n            value: profile.civil,\r\n            name: 'civil',\r\n            labelWidth: 80,\r\n            options: [\r\n              { value: 'Single' },\r\n              { value: 'Married' },\r\n              { value: 'Widowed' },\r\n            ],\r\n          })}\r\n\r\n          {myDateTimePicker({\r\n            label: 'Birthdate',\r\n            value: profile.birthdate,\r\n            name: 'birthdate',\r\n          })}\r\n\r\n          <Grid\r\n            style={{ paddingLeft: 18, paddingTop: 10, paddingBottom: 5 }}\r\n            container\r\n            xs={12}\r\n            justify='center'\r\n            spacing={2}\r\n          >\r\n            <Grid item xs={6}>\r\n              <Button\r\n                onClick={() => history.goBack()}\r\n                style={{ paddingTop: 15, paddingBottom: 15 }}\r\n                fullWidth\r\n                variant='contained'\r\n                color='default'\r\n              >\r\n                BACK\r\n              </Button>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              {myButton('NEXT')}\r\n            </Grid>\r\n          </Grid>\r\n        </>\r\n      )}\r\n    </MyForm>\r\n  )\r\n}\r\n\r\nexport default ClientStepOne\r\n","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Pages\\Clients\\NewClient\\ClientStepTwo.tsx",["324","325","326"],"import React from 'react'\r\nimport Button from '@material-ui/core/Button'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport MyForm, { MyFormProps } from 'components/Common/MyForm'\r\nimport Client from 'models/client'\r\nimport Commissioner from 'models/commissioner'\r\nimport Divider from '@material-ui/core/Divider'\r\nimport validator from 'validators/clientStepTwoValidator'\r\n\r\nexport interface ClientStepTwoProps {\r\n  onBack: () => void\r\n  onNext: (commissioner: Commissioner) => Promise<void>\r\n  state: [Commissioner, React.Dispatch<React.SetStateAction<Commissioner>>]\r\n}\r\n\r\nexport const ClientStepTwo: React.SFC<ClientStepTwoProps> = ({\r\n  state: [commissioner, setCommissioner],\r\n  onBack,\r\n  onNext,\r\n}) => {\r\n  const formProps: MyFormProps<Commissioner> = {\r\n    state: [commissioner, setCommissioner],\r\n    onSubmit: onNext,\r\n    validator,\r\n    radioButtonDefaultValue: commissioner.position,\r\n  }\r\n\r\n  return (\r\n    <MyForm {...formProps}>\r\n      {({ myRadio, mySelect, myButton }) => (\r\n        <>\r\n          <Grid\r\n            style={{ paddingLeft: 10, marginTop: 5 }}\r\n            spacing={2}\r\n            container\r\n            xs={12}\r\n          >\r\n            <>\r\n              <Grid item xs={10}>\r\n                {mySelect({\r\n                  label: 'Branch Manager',\r\n                  value: commissioner.branch_manager,\r\n                  name: 'branch_manager',\r\n                  labelWidth: 120,\r\n                  options: [\r\n                    { value: 1, name: 'John Doe' },\r\n                    { value: 2, name: 'John Smith' },\r\n                  ],\r\n                })}\r\n              </Grid>\r\n              <Grid container item xs={2} justify='center' alignItems='center'>\r\n                {myRadio({ value: 'branch_manager', name: 'position' })}\r\n              </Grid>\r\n            </>\r\n            <>\r\n              <Grid item xs={10}>\r\n                {mySelect({\r\n                  label: 'Agency Manager',\r\n                  value: commissioner.agency_manager,\r\n                  name: 'agency_manager',\r\n                  labelWidth: 120,\r\n                  options: [\r\n                    { value: 3, name: 'John Joe' },\r\n                    { value: 4, name: 'John Witch' },\r\n                  ],\r\n                })}\r\n              </Grid>\r\n              <Grid container item xs={2} justify='center' alignItems='center'>\r\n                {myRadio({ value: 'agency_manager', name: 'position' })}\r\n              </Grid>\r\n            </>\r\n            <>\r\n              <Grid item xs={10}>\r\n                {mySelect({\r\n                  label: 'Supervisor',\r\n                  value: commissioner.supervisor,\r\n                  name: 'supervisor',\r\n                  labelWidth: 80,\r\n                  options: [\r\n                    { value: 5, name: 'John Doex' },\r\n                    { value: 6, name: 'John Smithx' },\r\n                  ],\r\n                })}\r\n              </Grid>\r\n              <Grid container item xs={2} justify='center' alignItems='center'>\r\n                {myRadio({ value: 'supervisor', name: 'position' })}\r\n              </Grid>\r\n            </>\r\n\r\n            <>\r\n              <Grid item xs={10}>\r\n                {mySelect({\r\n                  label: 'Sales Agent',\r\n                  value: commissioner.sales_agent,\r\n                  name: 'sales_agent',\r\n                  labelWidth: 85,\r\n                  options: [\r\n                    { value: 7, name: 'John Doex' },\r\n                    { value: 8, name: 'John Smithc' },\r\n                  ],\r\n                })}\r\n              </Grid>\r\n              <Grid container item xs={2} justify='center' alignItems='center'>\r\n                {myRadio({ value: 'sales_agent', name: 'position' })}\r\n              </Grid>\r\n            </>\r\n          </Grid>\r\n\r\n          <Grid\r\n            style={{ paddingLeft: 18, paddingTop: 15, paddingBottom: 15 }}\r\n            container\r\n            xs={12}\r\n            justify='center'\r\n            spacing={2}\r\n          >\r\n            <Grid item xs={6}>\r\n              <Button\r\n                onClick={() => onBack()}\r\n                style={{ paddingTop: 15, paddingBottom: 15 }}\r\n                fullWidth\r\n                variant='contained'\r\n                color='default'\r\n              >\r\n                BACK\r\n              </Button>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              {myButton('NEXT')}\r\n            </Grid>\r\n          </Grid>\r\n        </>\r\n      )}\r\n    </MyForm>\r\n  )\r\n}\r\n","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\validators\\saveEmployeeValidator.tsx",["327","328"],"import Joi from 'joi'\r\nimport Employee from 'models/employee'\r\nimport { lettersOnly, notNull } from 'utils/helper'\r\n\r\nconst saveEmployeeValidator = {\r\n  firstname: lettersOnly('Firstname').min(1).max(50),\r\n  middlename: lettersOnly('Middlename').min(1).max(50),\r\n  lastname: lettersOnly('Lastname').min(1).max(50),\r\n  position: notNull('Position'),\r\n  status: notNull('Status'),\r\n  civil: notNull('Civil Status'),\r\n  gender: notNull('Gender'),\r\n  branch: notNull('Branch'),\r\n}\r\n\r\nexport default saveEmployeeValidator\r\n","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\validators\\saveProfileValidator.tsx",["329"],"import Joi from 'joi'\r\nimport { lettersOnly, notNull } from 'utils/helper'\r\n\r\nconst saveProfileValidator = {\r\n  firstname: lettersOnly('Firstname').min(1).max(50),\r\n  middlename: lettersOnly('Middlename').min(1).max(50),\r\n  lastname: lettersOnly('Lastname').min(1).max(50),\r\n  civil: notNull('Civil Status'),\r\n  gender: notNull('Gender'),\r\n}\r\n\r\nexport default saveProfileValidator\r\n","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Pages\\Clients\\NewClient\\ClientStepThree.tsx",["330"],"import React from 'react'\r\nimport Button from '@material-ui/core/Button'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport MyForm, { MyFormProps } from 'components/Common/MyForm'\r\nimport Client from 'models/client'\r\nimport Commissioner from 'models/commissioner'\r\nimport validator from 'validators/clientStepThreeValidator'\r\n\r\nexport interface ClientStepTwoProps {\r\n  onBack: () => void\r\n  onNext: (client: Client) => Promise<void>\r\n  state: [Client, React.Dispatch<React.SetStateAction<Client>>]\r\n}\r\n\r\nexport const ClientStepThree: React.SFC<ClientStepTwoProps> = ({\r\n  state: [client, setClient],\r\n  onBack,\r\n  onNext,\r\n}) => {\r\n  const formProps: MyFormProps<Client> = {\r\n    state: [client, setClient],\r\n    onSubmit: onNext,\r\n    validator,\r\n  }\r\n\r\n  return (\r\n    <MyForm {...formProps}>\r\n      {({ myInput, mySelect, myButton }) => (\r\n        <>\r\n          {mySelect({\r\n            label: 'Plan',\r\n            value: client.plan,\r\n            name: 'plan',\r\n            labelWidth: 30,\r\n            options: [\r\n              { value: 'Plan 1' },\r\n              { value: 'Plan 2' },\r\n              { value: 'Plan 3' },\r\n            ],\r\n          })}\r\n          {mySelect({\r\n            label: 'Payment Mode',\r\n            value: client.payment_mode,\r\n            name: 'payment_mode',\r\n            labelWidth: 110,\r\n            options: [{ value: 'Installment' }, { value: 'Fullpayment' }],\r\n          })}\r\n\r\n          {client.payment_mode && client.plan && (\r\n            <>\r\n              {client.payment_mode === 'Installment' &&\r\n                mySelect({\r\n                  label: 'Payment Period',\r\n                  value: client.payment_period,\r\n                  name: 'payment_period',\r\n                  labelWidth: 120,\r\n                  options: [\r\n                    { value: 'Monthly' },\r\n                    { value: 'Quarterly' },\r\n                    { value: 'Semi-Annually' },\r\n                    { value: 'Annually' },\r\n                  ],\r\n                })}\r\n\r\n              <Grid\r\n                xs={12}\r\n                style={{\r\n                  marginBottom: 10,\r\n                  marginTop: 10,\r\n                  paddingRight: 8,\r\n                  paddingLeft: 8,\r\n                }}\r\n                direction='column'\r\n              >\r\n                {myInput({\r\n                  label: 'OR Number',\r\n                  name: 'or_number',\r\n                })}\r\n              </Grid>\r\n\r\n              <Grid style={{ paddingLeft: 10 }} direction='column'>\r\n                {client.payment_period &&\r\n                  client.payment_mode === 'Installment' && (\r\n                    <>\r\n                      <Typography component='h6' variant='subtitle1'>\r\n                        Downpayment\r\n                      </Typography>\r\n                      <Typography color='primary' variant='subtitle1'>\r\n                        Php 388.00\r\n                      </Typography>\r\n                    </>\r\n                  )}\r\n                {client.payment_mode === 'Fullpayment' && (\r\n                  <>\r\n                    <Typography component='h6' variant='subtitle1'>\r\n                      Lumpsum Price\r\n                    </Typography>\r\n                    <Typography color='primary' variant='subtitle1'>\r\n                      Php 23,280.00\r\n                    </Typography>\r\n                  </>\r\n                )}\r\n              </Grid>\r\n            </>\r\n          )}\r\n\r\n          <Grid\r\n            style={{ paddingLeft: 18, paddingTop: 15, paddingBottom: 15 }}\r\n            container\r\n            xs={12}\r\n            justify='center'\r\n            spacing={2}\r\n          >\r\n            <Grid item xs={6}>\r\n              <Button\r\n                onClick={() => onBack()}\r\n                style={{ paddingTop: 15, paddingBottom: 15 }}\r\n                fullWidth\r\n                variant='contained'\r\n                color='default'\r\n              >\r\n                BACK\r\n              </Button>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              {myButton('PAY')}\r\n            </Grid>\r\n          </Grid>\r\n        </>\r\n      )}\r\n    </MyForm>\r\n  )\r\n}\r\n","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\validators\\clientStepTwoValidator.tsx",["331"],"import Joi from 'joi'\r\nimport { lettersOnly, notNull } from 'utils/helper'\r\n\r\nconst clientStepTwoValidator = {\r\n  branch_manager: notNull('Branch Manager'),\r\n  agency_manager: notNull('Agency Manager'),\r\n  supervisor: notNull('Supervisor'),\r\n  sales_agent: Joi.optional(),\r\n  position: notNull('Position'),\r\n  insured_employee: Joi.optional(),\r\n}\r\n\r\nexport default clientStepTwoValidator\r\n","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\validators\\clientStepThreeValidator.tsx",["332"],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Pages\\Employees\\ViewEmployee\\index.tsx",["333","334","335"],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\pages\\Employees\\index.tsx",["336","337"],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\pages\\Employees\\ViewEmployee\\index.tsx",["338","339","340","341"],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\pages\\Clients\\index.tsx",["342","343"],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\pages\\Clients\\ViewClient\\index.tsx",["344","345","346","347","348","349","350","351"],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\pages\\Employees\\NewEmployee\\index.tsx",["352","353","354","355"],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\pages\\Employees\\EditEmployee\\index.tsx",["356","357","358","359"],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\pages\\Clients\\NewClient\\index.tsx",["360","361"],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\pages\\Clients\\NewClient\\ClientStepOne.tsx",["362"],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\pages\\Clients\\NewClient\\ClientStepTwo.tsx",["363","364","365","366","367","368"],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\pages\\Clients\\NewClient\\ClientStepThree.tsx",["369","370","371","372"],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\pages\\Employees\\EmployeeCard\\index.tsx",["373","374"],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\pages\\Clients\\ClientCard\\index.tsx",["375","376","377","378","379","380"],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\common\\MySearchField\\index.tsx",["381"],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\common\\MyAvatar\\index.tsx",["382"],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\layout\\index.tsx",[],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\common\\MyAlert\\index.tsx",[],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\common\\MyNav\\index.tsx",["383"],"import * as React from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nimport Typography from '@material-ui/core/Typography'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Menu from '@material-ui/icons/Menu'\r\nimport Grid from '@material-ui/core/Grid'\r\n\r\nimport MyDrawer from 'components/common/MyDrawer'\r\nimport { GlobalContext } from 'providers/GlobalProvider'\r\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger'\r\nimport Slide from '@material-ui/core/Slide'\r\nimport LinearProgress from '@material-ui/core/LinearProgress'\r\n\r\nconst Nav: React.FC = (props) => {\r\n  const [state, dispatch] = React.useContext(GlobalContext)!\r\n  const history = useHistory()\r\n  const [isActive, setIsActive] = React.useState(false)\r\n\r\n  const onToggle = (title?: string) => {\r\n    setIsActive((isActive) => !isActive)\r\n\r\n    if (!title) {\r\n      return\r\n    }\r\n    dispatch({ type: 'SET_TITLE', payload: title })\r\n  }\r\n\r\n  interface Props {\r\n    window?: () => Window\r\n    children: React.ReactElement\r\n  }\r\n\r\n  function HideOnScroll(props: Props) {\r\n    const { children, window } = props\r\n    const trigger = useScrollTrigger({ target: window ? window() : undefined })\r\n\r\n    return (\r\n      <Slide appear={false} direction='down' in={!trigger}>\r\n        {children}\r\n      </Slide>\r\n    )\r\n  }\r\n  return (\r\n    <>\r\n      <MyDrawer onToggle={onToggle} isActive={isActive} />\r\n      <HideOnScroll {...props}>\r\n        <AppBar\r\n          style={{\r\n            background:\r\n              'linear-gradient(to right, #9c27b0, #9c27b0, #9c27b0, #9c27b0, #9c27b0, #a721aa, #b119a4, #ba119e, #cb0090, #d80081, #e20672, #e91e63)',\r\n          }}\r\n        >\r\n          <Toolbar>\r\n            <Grid container xs={12} justify='center'>\r\n              <Grid container xs={1} sm={5} md={4} justify='flex-start'>\r\n                <IconButton\r\n                  onClick={() => onToggle()}\r\n                  edge='start'\r\n                  color='inherit'\r\n                  aria-label='menu'\r\n                >\r\n                  <Menu />\r\n                </IconButton>\r\n              </Grid>\r\n              <Grid container xs={11} sm={5} md={4} justify='flex-end'>\r\n                <Typography style={{ paddingTop: 8 }} variant='h6'>\r\n                  {state.title}\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Toolbar>\r\n\r\n          <LinearProgress hidden={!state.isLoading} />\r\n        </AppBar>\r\n      </HideOnScroll>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Nav\r\n","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\common\\MyForm\\index.tsx",["384","385"],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\common\\MyStepper\\index.tsx",[],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\common\\MyDrawer\\index.tsx",["386","387"],"import React from 'react'\r\nimport Drawer from '@material-ui/core/Drawer'\r\nimport List from '@material-ui/core/List'\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft'\r\nimport EmployeesIcon from '@material-ui/icons/People'\r\nimport ClientIcon from '@material-ui/icons/SupervisedUserCircle'\r\nimport PaymentIcon from '@material-ui/icons/Receipt'\r\nimport SettingsIcon from '@material-ui/icons/Settings'\r\nimport TransactionIcon from '@material-ui/icons/Payment'\r\nimport ExitIcon from '@material-ui/icons/ExitToApp'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport makeStyles from '@material-ui/core/styles/makeStyles'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Divider from '@material-ui/core/Divider'\r\nimport Grid from '@material-ui/core/Grid/Grid'\r\nimport DashboardIcon from '@material-ui/icons/Dashboard'\r\nimport { GlobalContext } from 'providers/GlobalProvider'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nexport interface MyDrawerProps {\r\n  isActive: boolean\r\n  onToggle: Function\r\n}\r\n\r\nconst MyDrawer: React.FC<MyDrawerProps> = (props) => {\r\n  const styles = useStyles()\r\n\r\n  const history = useHistory()\r\n\r\n  const [state, dispatch] = React.useContext(GlobalContext)!\r\n\r\n  const menus = [\r\n    { name: 'Dashboard', path: '/dashboard', icon: <DashboardIcon /> },\r\n    {\r\n      name: 'Employee Management',\r\n      path: '/employees',\r\n      icon: <EmployeesIcon />,\r\n    },\r\n    { name: 'Client Management', path: '/clients', icon: <ClientIcon /> },\r\n    {\r\n      name: 'Encode Transaction',\r\n      path: '/clients/transaction',\r\n      icon: <TransactionIcon />,\r\n    },\r\n    {\r\n      name: 'Payment History',\r\n      path: '/payments',\r\n      icon: <PaymentIcon />,\r\n    },\r\n    {\r\n      name: 'Settings',\r\n      path: '/settings',\r\n      icon: <SettingsIcon />,\r\n    },\r\n  ]\r\n\r\n  const list = () => (\r\n    <>\r\n      <List>\r\n        {menus.map((menu, index) => (\r\n          <ListItem style={{ paddingLeft: 0 }} button key={index}>\r\n            <ListItemIcon style={{ paddingLeft: 20 }}>{menu.icon}</ListItemIcon>\r\n\r\n            <ListItemText\r\n              primary={menu.name}\r\n              onClick={() => {\r\n                props.onToggle(menu.name)\r\n                history.replace(menu.path)\r\n              }}\r\n            />\r\n          </ListItem>\r\n        ))}\r\n        <Divider\r\n          style={{\r\n            marginTop: 10,\r\n            marginLeft: 10,\r\n            marginRight: 10,\r\n          }}\r\n        ></Divider>\r\n        <ListItem style={{ paddingLeft: 0 }} button>\r\n          <ListItemIcon style={{ paddingLeft: 20 }}>\r\n            <ExitIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary='Logout'\r\n            onClick={() => {\r\n              props.onToggle()\r\n              dispatch({ type: 'SET_IS_AUTHENTIC_USER', payload: false })\r\n            }}\r\n          />\r\n        </ListItem>\r\n      </List>\r\n    </>\r\n  )\r\n\r\n  return (\r\n    <Drawer\r\n      anchor='left'\r\n      open={props.isActive}\r\n      ModalProps={{ onBackdropClick: () => props.onToggle() }}\r\n    >\r\n      <Grid container justify='flex-end'>\r\n        <IconButton\r\n          onClick={() => props.onToggle()}\r\n          edge='start'\r\n          color='inherit'\r\n          aria-label='menu'\r\n        >\r\n          <ChevronLeftIcon />\r\n        </IconButton>\r\n      </Grid>\r\n      {list()}\r\n    </Drawer>\r\n  )\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  close: {\r\n    paddingTop: 5,\r\n    paddingRight: 5,\r\n  },\r\n}))\r\n\r\nexport default MyDrawer\r\n","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\common\\MyCard\\index.tsx",[],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\pages\\Dashboard\\index.tsx",["388","389"],"import { GlobalContext } from 'providers/GlobalProvider'\r\nimport React, { useContext, useEffect } from 'react'\r\n\r\nexport interface DashboardProps {}\r\n\r\nconst Dashboard: React.SFC<DashboardProps> = () => {\r\n  const [state, dispatch] = useContext(GlobalContext)!\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: 'SET_TITLE', payload: 'Dashboard' })\r\n  }, [])\r\n  return <h3>Under Construction</h3>\r\n}\r\n\r\nexport default Dashboard\r\n","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\providers\\EmployeeProvider.tsx",[],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\common\\MySkeletonCards\\index.tsx",[],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\utils\\http.ts",["390","391","392"],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\common\\MySkeletonCard\\index.tsx",[],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\pages\\Auth\\SignIn\\index.tsx",["393","394"],"import Grid from '@material-ui/core/Grid'\r\nimport MyForm, { MyFormProps } from 'components/common/MyForm'\r\nimport User from 'models/user'\r\nimport { onSignIn } from 'api/authService'\r\nimport validator from 'validators/signInValidator'\r\nimport { Theme, createStyles, makeStyles } from '@material-ui/core/styles'\r\n\r\nimport { useContext, useEffect, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { GlobalContext } from 'providers/GlobalProvider'\r\n\r\nexport interface SignInProps {}\r\n\r\nconst SignIn: React.SFC<SignInProps> = () => {\r\n  const styles = useStyles()\r\n\r\n  const [state, dispatch] = useContext(GlobalContext)!\r\n\r\n  const history = useHistory()\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: 'SET_TITLE', payload: 'BRAND NAME' })\r\n  }, [])\r\n\r\n  const [user, setUser] = useState<User>({ username: '', password: '' })\r\n\r\n  const onSubmit = async () => {\r\n    return onSignIn().then((res) => {\r\n      dispatch({ type: 'SET_IS_AUTHENTIC_USER', payload: true })\r\n      history.replace('/dashboard')\r\n    })\r\n  }\r\n  const formProps: MyFormProps<User> = {\r\n    state: [user, setUser],\r\n    onSubmit,\r\n    validator,\r\n  }\r\n\r\n  return (\r\n    <Grid\r\n      style={{ minHeight: 450 }}\r\n      justify='space-between'\r\n      container\r\n      direction='column'\r\n      xs={12}\r\n    >\r\n      <Grid\r\n        style={{ paddingTop: 80 }}\r\n        direction='row'\r\n        container\r\n        justify='center'\r\n        alignItems='flex-start'\r\n      >\r\n        <h1>Logo</h1>\r\n      </Grid>\r\n\r\n      <div className={styles.formContainer}>\r\n        <MyForm {...formProps}>\r\n          {({ myInput, myButton }) => (\r\n            <>\r\n              {myInput({\r\n                label: 'Username',\r\n                value: user.username,\r\n                name: 'username',\r\n              })}\r\n              {myInput({\r\n                label: 'Password',\r\n                value: user.password,\r\n                name: 'password',\r\n                type: 'password',\r\n              })}\r\n              {myButton('LOGIN')}\r\n            </>\r\n          )}\r\n        </MyForm>\r\n      </div>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    formContainer: {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      justifyContent: 'flex-end',\r\n\r\n      paddingLeft: 20,\r\n      paddingRight: 20,\r\n    },\r\n  }),\r\n)\r\n\r\nexport default SignIn\r\n","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\validators\\signInValidator.tsx",["395"],"import Joi from 'joi'\r\nimport { notNull } from 'utils/helper'\r\n\r\nconst signInValidator = {\r\n  username: notNull('Username'),\r\n  password: notNull('Password'),\r\n}\r\n\r\nexport default signInValidator\r\n","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\common\\MyAuthRoute\\index.tsx",[],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\pages\\Clients\\Transaction\\index.tsx",["396","397","398"],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\common\\MyMiniCards\\index.tsx",["399","400"],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\pages\\Clients\\Transaction\\TransactionForm.tsx",["401","402","403"],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\validators\\clientTransactionValidator.tsx",["404"],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\pages\\Settings\\index.tsx",[],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\common\\MySkeletonMiniCards\\index.tsx",[],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\common\\MyChips\\index.tsx",["405"],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\pages\\Clients\\EditClient\\index.tsx",["406","407","408"],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\pages\\Payments\\index.tsx",["409"],"import { useContext, useEffect } from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport MyChips from 'components/common/MyChips'\nimport MySearchField from 'components/common/MySearchField'\nimport { PaymentContext } from 'providers/PaymentProvider'\nimport { getPayments } from 'services/paymentService'\nimport PaymentCard from './PaymentCard'\n\nexport interface PaymentHistoryProps {}\n\nconst PaymentHistory: React.SFC<PaymentHistoryProps> = () => {\n  const [paymentState, paymentDispatch] = useContext(PaymentContext)!\n\n  useEffect(() => {\n    getPayments().then((payments) => {\n      paymentDispatch({ type: 'ON_LOAD_PAYMENTS', payload: payments })\n    })\n  }, [])\n\n  const chips = [\n    { value: '', name: 'All' },\n    { value: 'no', name: 'No commission' },\n    { value: 'with', name: 'With Commission' },\n  ]\n\n  return (\n    <>\n      <MySearchField style={{ marginBottom: 15 }} />\n      <MyChips active={chips[0]} chips={chips}></MyChips>\n      <Grid\n        container\n        spacing={2}\n        direction='column'\n        justify='flex-start'\n        alignItems='center'\n      >\n        {paymentState.payments.map((payment) => (\n          <Grid key={payment.id} item xs={12}>\n            <PaymentCard payment={payment} />\n          </Grid>\n        ))}\n      </Grid>\n    </>\n  )\n}\n\nexport default PaymentHistory\n","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\providers\\PaymentProvider.tsx",[],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\pages\\Payments\\PaymentCard\\index.tsx",[],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\providers\\GlobalProvider.tsx",[],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\providers\\ClientProvider.tsx",["410"],"import { createContext, Dispatch, useEffect, useReducer } from 'react'\r\nimport { produce } from 'immer'\r\nimport Client from 'models/client'\r\nimport Plan from 'models/plan'\r\nimport { plans } from 'services/clientService'\r\n\r\nexport const ClientContext = createContext<\r\n  [state: ClientState, dispatch: Dispatch<ClientAction>] | null\r\n>(null)\r\n\r\ninterface ClientState {\r\n  clients: Client[]\r\n  plans: Plan[]\r\n  isLoading: boolean\r\n  onReloadPlans: boolean\r\n  pages: number\r\n  total: number\r\n}\r\n\r\nexport type ClientAction =\r\n  | { type: 'TOGGLE_LOADING' | 'ON_RELOAD_PLANS' }\r\n  | {\r\n      type: 'ON_LOAD_CLIENTS'\r\n      payload: { clients: Client[]; total?: number; pages?: number }\r\n    }\r\n  | { type: 'ON_LOAD_CLIENTS_INSTALLMENT'; payload: Client[] }\r\n  | { type: 'ON_LOAD_PLANS'; payload: Plan[] }\r\n  | { type: 'SET_IS_LOADING'; payload: boolean }\r\n  | { type: 'SET_TOTAL'; payload: number }\r\n  | { type: 'SET_PAGES'; payload: number }\r\n\r\nconst reducer = (state: ClientState, action: ClientAction) => {\r\n  switch (action.type) {\r\n    case 'ON_LOAD_PLANS':\r\n      state.plans = action.payload\r\n      break\r\n    case 'ON_RELOAD_PLANS':\r\n      state.onReloadPlans = !state.onReloadPlans\r\n      break\r\n    case 'ON_LOAD_CLIENTS':\r\n      state.clients = action.payload.clients\r\n      state.total = action.payload.total!\r\n      state.pages = action.payload.pages!\r\n      state.isLoading = false\r\n      break\r\n    case 'ON_LOAD_CLIENTS_INSTALLMENT':\r\n      state.clients = action.payload.filter(\r\n        (client) => client.payment_mode === 'Installment',\r\n      )\r\n      state.isLoading = false\r\n      break\r\n    case 'SET_IS_LOADING':\r\n      state.isLoading = action.payload\r\n      break\r\n    case 'TOGGLE_LOADING':\r\n      state.isLoading = !state.isLoading\r\n      break\r\n    case 'SET_PAGES':\r\n      state.pages = action.payload\r\n      break\r\n    case 'SET_TOTAL':\r\n      state.total = action.payload\r\n      break\r\n    default:\r\n      return state\r\n  }\r\n  return state\r\n}\r\n\r\nexport const ClientProvider: React.FC = (props) => {\r\n  const [state, dispatch] = useReducer(produce(reducer), {\r\n    clients: [],\r\n    plans,\r\n    isLoading: false,\r\n    onReloadPlans: false,\r\n    pages: 0,\r\n    total: 0,\r\n  })\r\n\r\n  // useEffect(() => {\r\n  //   getPlans().then((plans) => {\r\n  //     dispatch({ type: 'ON_LOAD_PLANS', payload: plans })\r\n  //   })\r\n  // }, [state.onReloadPlans])\r\n\r\n  return (\r\n    <ClientContext.Provider value={[state, dispatch]}>\r\n      {props.children}\r\n    </ClientContext.Provider>\r\n  )\r\n}\r\n","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\services\\clientService.tsx",["411","412","413","414"],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\services\\employeeService.tsx",[],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\services\\paymentService.tsx",[],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\services\\authService.tsx",[],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\pages\\Payments\\PaymentView\\index.tsx",["415","416","417"],"import MyCard from 'components/common/MyCard'\r\nimport { useContext, useEffect, useState } from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport CardContent from '@material-ui/core/CardContent'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Divider from '@material-ui/core/Divider'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Chip from '@material-ui/core/Chip'\r\nimport Payment from 'models/payment'\r\nimport { getPayments } from 'services/paymentService'\r\nimport { PaymentContext } from 'providers/PaymentProvider'\r\n\r\nexport interface PaymentViewProps {}\r\n\r\nconst PaymentView: React.SFC<PaymentViewProps> = () => {\r\n  const history = useHistory()\r\n  const params = useParams<{ id: string }>()\r\n  const [payment, setPayment] = useState<Payment>({})\r\n\r\n  const [paymentState, paymentDispatch] = useContext(PaymentContext)!\r\n\r\n  useEffect(() => {\r\n    getPayments().then((payments) => {\r\n      paymentDispatch({ type: 'ON_LOAD_PAYMENTS', payload: payments })\r\n      const payment = payments.filter((payment) => payment.id === +params.id)[0]\r\n      setPayment(payment)\r\n    })\r\n  }, [])\r\n\r\n  const client = payment.client\r\n  const fullname = `${client?.lastname}, ${client?.firstname} ${client?.middlename}`\r\n\r\n  return (\r\n    <MyCard title={payment.or_number} style={{ paddingBottom: 5 }}>\r\n      <CardContent>\r\n        <Grid xs={12} direction='column' container>\r\n          <Typography component='h3' variant='h6'>\r\n            {fullname}\r\n          </Typography>\r\n          <Typography variant='subtitle1' color='textSecondary'>\r\n            {'Php ' + payment.amount}\r\n          </Typography>\r\n          <Typography variant='subtitle1' color='textSecondary'>\r\n            {payment.created_at?.toDateString()}\r\n          </Typography>\r\n          <Grid item xs={6}>\r\n            <Chip\r\n              style={{ marginTop: 5 }}\r\n              size='small'\r\n              label={\r\n                payment.hasCommission ? 'with commission' : 'no commission'\r\n              }\r\n              variant='default'\r\n              color={payment.hasCommission ? 'secondary' : 'default'}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n        <Divider\r\n          style={{\r\n            marginTop: 20,\r\n            marginLeft: 10,\r\n            marginRight: 10,\r\n          }}\r\n        ></Divider>\r\n        <Typography variant='subtitle1' color='textSecondary'>\r\n          {payment.created_at?.toDateString()}\r\n        </Typography>\r\n      </CardContent>\r\n    </MyCard>\r\n  )\r\n}\r\n\r\nexport default PaymentView\r\n","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\services\\imageService.tsx",[],{"ruleId":"418","replacedBy":"419"},{"ruleId":"420","replacedBy":"421"},{"ruleId":"422","severity":1,"message":"423","line":18,"column":10,"nodeType":"424","messageId":"425","endLine":18,"endColumn":15},{"ruleId":"426","severity":1,"message":"427","line":22,"column":6,"nodeType":"428","endLine":22,"endColumn":8,"suggestions":"429"},{"ruleId":"418","replacedBy":"430"},{"ruleId":"420","replacedBy":"431"},{"ruleId":"422","severity":1,"message":"432","line":7,"column":31,"nodeType":"424","messageId":"425","endLine":7,"endColumn":41},{"ruleId":"422","severity":1,"message":"433","line":13,"column":10,"nodeType":"424","messageId":"425","endLine":13,"endColumn":11},{"ruleId":"422","severity":1,"message":"433","line":13,"column":10,"nodeType":"424","messageId":"425","endLine":13,"endColumn":11},{"ruleId":"422","severity":1,"message":"434","line":2,"column":8,"nodeType":"424","messageId":"425","endLine":2,"endColumn":14},{"ruleId":"422","severity":1,"message":"433","line":20,"column":10,"nodeType":"424","messageId":"425","endLine":20,"endColumn":11},{"ruleId":"426","severity":1,"message":"435","line":31,"column":6,"nodeType":"428","endLine":31,"endColumn":8,"suggestions":"436"},{"ruleId":"422","severity":1,"message":"437","line":12,"column":8,"nodeType":"424","messageId":"425","endLine":12,"endColumn":14},{"ruleId":"422","severity":1,"message":"438","line":13,"column":8,"nodeType":"424","messageId":"425","endLine":13,"endColumn":16},{"ruleId":"422","severity":1,"message":"433","line":27,"column":10,"nodeType":"424","messageId":"425","endLine":27,"endColumn":11},{"ruleId":"426","severity":1,"message":"439","line":36,"column":6,"nodeType":"428","endLine":36,"endColumn":8,"suggestions":"440"},{"ruleId":"422","severity":1,"message":"423","line":19,"column":10,"nodeType":"424","messageId":"425","endLine":19,"endColumn":15},{"ruleId":"426","severity":1,"message":"441","line":26,"column":6,"nodeType":"428","endLine":26,"endColumn":8,"suggestions":"442"},{"ruleId":"422","severity":1,"message":"443","line":1,"column":17,"nodeType":"424","messageId":"425","endLine":1,"endColumn":27},{"ruleId":"422","severity":1,"message":"444","line":4,"column":8,"nodeType":"424","messageId":"425","endLine":4,"endColumn":18},{"ruleId":"422","severity":1,"message":"434","line":6,"column":8,"nodeType":"424","messageId":"425","endLine":6,"endColumn":14},{"ruleId":"422","severity":1,"message":"445","line":8,"column":8,"nodeType":"424","messageId":"425","endLine":8,"endColumn":15},{"ruleId":"422","severity":1,"message":"446","line":1,"column":8,"nodeType":"424","messageId":"425","endLine":1,"endColumn":11},{"ruleId":"422","severity":1,"message":"447","line":2,"column":8,"nodeType":"424","messageId":"425","endLine":2,"endColumn":16},{"ruleId":"422","severity":1,"message":"446","line":1,"column":8,"nodeType":"424","messageId":"425","endLine":1,"endColumn":11},{"ruleId":"422","severity":1,"message":"448","line":7,"column":8,"nodeType":"424","messageId":"425","endLine":7,"endColumn":20},{"ruleId":"422","severity":1,"message":"449","line":2,"column":10,"nodeType":"424","messageId":"425","endLine":2,"endColumn":21},{"ruleId":"422","severity":1,"message":"449","line":2,"column":10,"nodeType":"424","messageId":"425","endLine":2,"endColumn":21},{"ruleId":"422","severity":1,"message":"450","line":8,"column":8,"nodeType":"424","messageId":"425","endLine":8,"endColumn":16},{"ruleId":"422","severity":1,"message":"433","line":23,"column":10,"nodeType":"424","messageId":"425","endLine":23,"endColumn":11},{"ruleId":"426","severity":1,"message":"427","line":27,"column":6,"nodeType":"428","endLine":27,"endColumn":8,"suggestions":"451"},{"ruleId":"422","severity":1,"message":"433","line":24,"column":10,"nodeType":"424","messageId":"425","endLine":24,"endColumn":11},{"ruleId":"426","severity":1,"message":"452","line":48,"column":6,"nodeType":"428","endLine":48,"endColumn":8,"suggestions":"453"},{"ruleId":"422","severity":1,"message":"454","line":10,"column":24,"nodeType":"424","messageId":"425","endLine":10,"endColumn":34},{"ruleId":"422","severity":1,"message":"455","line":29,"column":9,"nodeType":"424","messageId":"425","endLine":29,"endColumn":15},{"ruleId":"422","severity":1,"message":"433","line":31,"column":10,"nodeType":"424","messageId":"425","endLine":31,"endColumn":11},{"ruleId":"426","severity":1,"message":"456","line":45,"column":6,"nodeType":"428","endLine":45,"endColumn":8,"suggestions":"457"},{"ruleId":"422","severity":1,"message":"458","line":24,"column":10,"nodeType":"424","messageId":"425","endLine":24,"endColumn":21},{"ruleId":"426","severity":1,"message":"452","line":47,"column":6,"nodeType":"428","endLine":47,"endColumn":8,"suggestions":"459"},{"ruleId":"422","severity":1,"message":"460","line":8,"column":8,"nodeType":"424","messageId":"425","endLine":8,"endColumn":18},{"ruleId":"422","severity":1,"message":"438","line":11,"column":8,"nodeType":"424","messageId":"425","endLine":11,"endColumn":16},{"ruleId":"422","severity":1,"message":"461","line":15,"column":10,"nodeType":"424","messageId":"425","endLine":15,"endColumn":23},{"ruleId":"422","severity":1,"message":"462","line":17,"column":10,"nodeType":"424","messageId":"425","endLine":17,"endColumn":25},{"ruleId":"422","severity":1,"message":"463","line":22,"column":3,"nodeType":"424","messageId":"425","endLine":22,"endColumn":25},{"ruleId":"422","severity":1,"message":"454","line":26,"column":10,"nodeType":"424","messageId":"425","endLine":26,"endColumn":20},{"ruleId":"422","severity":1,"message":"433","line":35,"column":10,"nodeType":"424","messageId":"425","endLine":35,"endColumn":11},{"ruleId":"426","severity":1,"message":"464","line":48,"column":6,"nodeType":"428","endLine":48,"endColumn":8,"suggestions":"465"},{"ruleId":"422","severity":1,"message":"432","line":10,"column":31,"nodeType":"424","messageId":"425","endLine":10,"endColumn":41},{"ruleId":"422","severity":1,"message":"433","line":19,"column":10,"nodeType":"424","messageId":"425","endLine":19,"endColumn":11},{"ruleId":"422","severity":1,"message":"466","line":21,"column":25,"nodeType":"424","messageId":"425","endLine":21,"endColumn":41},{"ruleId":"426","severity":1,"message":"467","line":29,"column":6,"nodeType":"428","endLine":29,"endColumn":8,"suggestions":"468"},{"ruleId":"422","severity":1,"message":"433","line":19,"column":10,"nodeType":"424","messageId":"425","endLine":19,"endColumn":11},{"ruleId":"422","severity":1,"message":"466","line":21,"column":25,"nodeType":"424","messageId":"425","endLine":21,"endColumn":41},{"ruleId":"422","severity":1,"message":"469","line":27,"column":10,"nodeType":"424","messageId":"425","endLine":27,"endColumn":19},{"ruleId":"426","severity":1,"message":"470","line":46,"column":6,"nodeType":"428","endLine":46,"endColumn":8,"suggestions":"471"},{"ruleId":"422","severity":1,"message":"458","line":24,"column":10,"nodeType":"424","messageId":"425","endLine":24,"endColumn":21},{"ruleId":"426","severity":1,"message":"472","line":34,"column":6,"nodeType":"428","endLine":34,"endColumn":8,"suggestions":"473"},{"ruleId":"422","severity":1,"message":"443","line":1,"column":17,"nodeType":"424","messageId":"425","endLine":1,"endColumn":27},{"ruleId":"422","severity":1,"message":"474","line":1,"column":17,"nodeType":"424","messageId":"425","endLine":1,"endColumn":26},{"ruleId":"422","severity":1,"message":"475","line":1,"column":28,"nodeType":"424","messageId":"425","endLine":1,"endColumn":36},{"ruleId":"422","severity":1,"message":"444","line":4,"column":8,"nodeType":"424","messageId":"425","endLine":4,"endColumn":18},{"ruleId":"422","severity":1,"message":"434","line":6,"column":8,"nodeType":"424","messageId":"425","endLine":6,"endColumn":14},{"ruleId":"422","severity":1,"message":"445","line":8,"column":8,"nodeType":"424","messageId":"425","endLine":8,"endColumn":15},{"ruleId":"422","severity":1,"message":"476","line":10,"column":10,"nodeType":"424","messageId":"425","endLine":10,"endColumn":22},{"ruleId":"422","severity":1,"message":"444","line":4,"column":8,"nodeType":"424","messageId":"425","endLine":4,"endColumn":18},{"ruleId":"422","severity":1,"message":"448","line":7,"column":8,"nodeType":"424","messageId":"425","endLine":7,"endColumn":20},{"ruleId":"422","severity":1,"message":"477","line":27,"column":23,"nodeType":"424","messageId":"425","endLine":27,"endColumn":37},{"ruleId":"426","severity":1,"message":"478","line":40,"column":6,"nodeType":"428","endLine":40,"endColumn":63,"suggestions":"479"},{"ruleId":"422","severity":1,"message":"454","line":17,"column":10,"nodeType":"424","messageId":"425","endLine":17,"endColumn":20},{"ruleId":"422","severity":1,"message":"423","line":25,"column":10,"nodeType":"424","messageId":"425","endLine":25,"endColumn":15},{"ruleId":"422","severity":1,"message":"443","line":2,"column":10,"nodeType":"424","messageId":"425","endLine":2,"endColumn":20},{"ruleId":"422","severity":1,"message":"437","line":12,"column":8,"nodeType":"424","messageId":"425","endLine":12,"endColumn":14},{"ruleId":"422","severity":1,"message":"438","line":13,"column":8,"nodeType":"424","messageId":"425","endLine":13,"endColumn":16},{"ruleId":"422","severity":1,"message":"461","line":17,"column":10,"nodeType":"424","messageId":"425","endLine":17,"endColumn":23},{"ruleId":"422","severity":1,"message":"463","line":21,"column":3,"nodeType":"424","messageId":"425","endLine":21,"endColumn":25},{"ruleId":"422","severity":1,"message":"454","line":23,"column":10,"nodeType":"424","messageId":"425","endLine":23,"endColumn":20},{"ruleId":"422","severity":1,"message":"480","line":10,"column":10,"nodeType":"424","messageId":"425","endLine":10,"endColumn":24},{"ruleId":"422","severity":1,"message":"444","line":3,"column":8,"nodeType":"424","messageId":"425","endLine":3,"endColumn":18},{"ruleId":"422","severity":1,"message":"481","line":19,"column":9,"nodeType":"424","messageId":"425","endLine":19,"endColumn":16},{"ruleId":"422","severity":1,"message":"482","line":25,"column":10,"nodeType":"424","messageId":"425","endLine":25,"endColumn":19},{"ruleId":"422","severity":1,"message":"423","line":104,"column":10,"nodeType":"424","messageId":"425","endLine":104,"endColumn":15},{"ruleId":"422","severity":1,"message":"455","line":28,"column":9,"nodeType":"424","messageId":"425","endLine":28,"endColumn":15},{"ruleId":"422","severity":1,"message":"423","line":32,"column":10,"nodeType":"424","messageId":"425","endLine":32,"endColumn":15},{"ruleId":"422","severity":1,"message":"423","line":7,"column":10,"nodeType":"424","messageId":"425","endLine":7,"endColumn":15},{"ruleId":"426","severity":1,"message":"427","line":11,"column":6,"nodeType":"428","endLine":11,"endColumn":8,"suggestions":"483"},{"ruleId":"422","severity":1,"message":"484","line":2,"column":33,"nodeType":"424","messageId":"425","endLine":2,"endColumn":45},{"ruleId":"422","severity":1,"message":"485","line":3,"column":8,"nodeType":"424","messageId":"425","endLine":3,"endColumn":36},{"ruleId":"486","severity":1,"message":"487","line":38,"column":1,"nodeType":"488","endLine":44,"endColumn":2},{"ruleId":"422","severity":1,"message":"423","line":17,"column":10,"nodeType":"424","messageId":"425","endLine":17,"endColumn":15},{"ruleId":"426","severity":1,"message":"427","line":23,"column":6,"nodeType":"428","endLine":23,"endColumn":8,"suggestions":"489"},{"ruleId":"422","severity":1,"message":"446","line":1,"column":8,"nodeType":"424","messageId":"425","endLine":1,"endColumn":11},{"ruleId":"422","severity":1,"message":"458","line":31,"column":10,"nodeType":"424","messageId":"425","endLine":31,"endColumn":21},{"ruleId":"426","severity":1,"message":"435","line":51,"column":6,"nodeType":"428","endLine":51,"endColumn":8,"suggestions":"490"},{"ruleId":"426","severity":1,"message":"491","line":91,"column":6,"nodeType":"428","endLine":91,"endColumn":48,"suggestions":"492"},{"ruleId":"422","severity":1,"message":"444","line":5,"column":8,"nodeType":"424","messageId":"425","endLine":5,"endColumn":18},{"ruleId":"422","severity":1,"message":"433","line":35,"column":17,"nodeType":"424","messageId":"425","endLine":35,"endColumn":18},{"ruleId":"422","severity":1,"message":"474","line":1,"column":17,"nodeType":"424","messageId":"425","endLine":1,"endColumn":26},{"ruleId":"422","severity":1,"message":"493","line":3,"column":31,"nodeType":"424","messageId":"425","endLine":3,"endColumn":42},{"ruleId":"422","severity":1,"message":"448","line":5,"column":8,"nodeType":"424","messageId":"425","endLine":5,"endColumn":20},{"ruleId":"422","severity":1,"message":"449","line":2,"column":10,"nodeType":"424","messageId":"425","endLine":2,"endColumn":21},{"ruleId":"422","severity":1,"message":"475","line":1,"column":10,"nodeType":"424","messageId":"425","endLine":1,"endColumn":18},{"ruleId":"422","severity":1,"message":"433","line":22,"column":10,"nodeType":"424","messageId":"425","endLine":22,"endColumn":11},{"ruleId":"422","severity":1,"message":"477","line":24,"column":23,"nodeType":"424","messageId":"425","endLine":24,"endColumn":37},{"ruleId":"426","severity":1,"message":"494","line":42,"column":6,"nodeType":"428","endLine":42,"endColumn":8,"suggestions":"495"},{"ruleId":"426","severity":1,"message":"496","line":18,"column":6,"nodeType":"428","endLine":18,"endColumn":8,"suggestions":"497"},{"ruleId":"422","severity":1,"message":"474","line":1,"column":35,"nodeType":"424","messageId":"425","endLine":1,"endColumn":44},{"ruleId":"422","severity":1,"message":"498","line":1,"column":8,"nodeType":"424","messageId":"425","endLine":1,"endColumn":14},{"ruleId":"422","severity":1,"message":"448","line":3,"column":8,"nodeType":"424","messageId":"425","endLine":3,"endColumn":20},{"ruleId":"422","severity":1,"message":"499","line":4,"column":8,"nodeType":"424","messageId":"425","endLine":4,"endColumn":15},{"ruleId":"500","severity":1,"message":"501","line":123,"column":7,"nodeType":"502","messageId":"503","endLine":123,"endColumn":12},{"ruleId":"422","severity":1,"message":"481","line":16,"column":9,"nodeType":"424","messageId":"425","endLine":16,"endColumn":16},{"ruleId":"422","severity":1,"message":"504","line":20,"column":10,"nodeType":"424","messageId":"425","endLine":20,"endColumn":22},{"ruleId":"426","severity":1,"message":"505","line":28,"column":6,"nodeType":"428","endLine":28,"endColumn":8,"suggestions":"506"},"no-native-reassign",["507"],"no-negated-in-lhs",["508"],"@typescript-eslint/no-unused-vars","'state' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["509"],["507"],["508"],"'InputProps' is defined but never used.","'_' is assigned a value but never used.","'Client' is defined but never used.","React Hook useEffect has missing dependencies: 'clientDispatch' and 'globalDispatch'. Either include them or remove the dependency array.",["510"],"'Avatar' is defined but never used.","'userIcon' is defined but never used.","React Hook useEffect has missing dependencies: 'clientState.clients', 'globalDispatch', and 'id'. Either include them or remove the dependency array.",["511"],"React Hook useEffect has missing dependencies: 'dispatch' and 'scroll'. Either include them or remove the dependency array.",["512"],"'useContext' is defined but never used.","'Typography' is defined but never used.","'Divider' is defined but never used.","'Joi' is defined but never used.","'Employee' is defined but never used.","'Commissioner' is defined but never used.","'lettersOnly' is defined but never used.","'EditIcon' is defined but never used.",["513"],"React Hook useEffect has missing dependencies: 'globalDispatch', 'location.search', and 'onLoad'. Either include them or remove the dependency array.",["514"],"'capitalize' is defined but never used.","'styles' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'params.id'. Either include them or remove the dependency array.",["515"],"'globalState' is assigned a value but never used.",["516"],"'IconButton' is defined but never used.","'ClientContext' is defined but never used.","'EmployeeContext' is defined but never used.","'computeTotalCountToPay' is defined but never used.","React Hook useEffect has missing dependencies: 'globalDispatch' and 'id'. Either include them or remove the dependency array.",["517"],"'employeeDispatch' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'globalDispatch'. Either include it or remove the dependency array.",["518"],"'isLoading' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'globalDispatch' and 'params.id'. Either include them or remove the dependency array.",["519"],"React Hook useEffect has missing dependencies: 'globalDispatch' and 'scroll'. Either include them or remove the dependency array.",["520"],"'useEffect' is defined but never used.","'useState' is defined but never used.","'getEmployees' is defined but never used.","'clientDispatch' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'clientState.plans' and 'setClient'. Either include them or remove the dependency array. If 'setClient' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["521"],"'AnyCnameRecord' is defined but never used.","'history' is assigned a value but never used.","'DateRange' is defined but never used.",["522"],"'apiUrlMobile' is defined but never used.","'createAuthRefreshInterceptor' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",["523"],["524"],"React Hook useEffect has a missing dependency: 'transaction'. Either include it or remove the dependency array.",["525"],"'RenderProps' is defined but never used.","React Hook useEffect has missing dependencies: 'clientState.clients', 'globalDispatch', and 'params.id'. Either include them or remove the dependency array.",["526"],"React Hook useEffect has a missing dependency: 'paymentDispatch'. Either include it or remove the dependency array.",["527"],"'Branch' is defined but never used.","'Payment' is defined but never used.","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","'paymentState' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'params.id' and 'paymentDispatch'. Either include them or remove the dependency array.",["528"],"no-global-assign","no-unsafe-negation",{"desc":"529","fix":"530"},{"desc":"531","fix":"532"},{"desc":"533","fix":"534"},{"desc":"535","fix":"536"},{"desc":"529","fix":"537"},{"desc":"538","fix":"539"},{"desc":"540","fix":"541"},{"desc":"538","fix":"542"},{"desc":"543","fix":"544"},{"desc":"545","fix":"546"},{"desc":"547","fix":"548"},{"desc":"549","fix":"550"},{"desc":"551","fix":"552"},{"desc":"529","fix":"553"},{"desc":"529","fix":"554"},{"desc":"531","fix":"555"},{"desc":"556","fix":"557"},{"desc":"558","fix":"559"},{"desc":"560","fix":"561"},{"desc":"562","fix":"563"},"Update the dependencies array to be: [dispatch]",{"range":"564","text":"565"},"Update the dependencies array to be: [clientDispatch, globalDispatch]",{"range":"566","text":"567"},"Update the dependencies array to be: [clientState.clients, globalDispatch, id]",{"range":"568","text":"569"},"Update the dependencies array to be: [dispatch, scroll]",{"range":"570","text":"571"},{"range":"572","text":"565"},"Update the dependencies array to be: [globalDispatch, location.search, onLoad]",{"range":"573","text":"574"},"Update the dependencies array to be: [dispatch, params.id]",{"range":"575","text":"576"},{"range":"577","text":"574"},"Update the dependencies array to be: [globalDispatch, id]",{"range":"578","text":"579"},"Update the dependencies array to be: [globalDispatch]",{"range":"580","text":"581"},"Update the dependencies array to be: [globalDispatch, params.id]",{"range":"582","text":"583"},"Update the dependencies array to be: [globalDispatch, scroll]",{"range":"584","text":"585"},"Update the dependencies array to be: [client.payment_mode, client.payment_period, client.plan, clientState.plans, setClient]",{"range":"586","text":"587"},{"range":"588","text":"565"},{"range":"589","text":"565"},{"range":"590","text":"567"},"Update the dependencies array to be: [transaction.payment_mode, transaction.id, transaction]",{"range":"591","text":"592"},"Update the dependencies array to be: [clientState.clients, globalDispatch, params.id]",{"range":"593","text":"594"},"Update the dependencies array to be: [paymentDispatch]",{"range":"595","text":"596"},"Update the dependencies array to be: [params.id, paymentDispatch]",{"range":"597","text":"598"},[757,759],"[dispatch]",[1141,1143],"[clientDispatch, globalDispatch]",[1358,1360],"[clientState.clients, globalDispatch, id]",[1007,1009],"[dispatch, scroll]",[1005,1007],[1684,1686],"[globalDispatch, location.search, onLoad]",[1811,1813],"[dispatch, params.id]",[1607,1609],[1658,1660],"[globalDispatch, id]",[1200,1202],"[globalDispatch]",[1636,1638],"[globalDispatch, params.id]",[1408,1410],"[globalDispatch, scroll]",[1386,1443],"[client.payment_mode, client.payment_period, client.plan, clientState.plans, setClient]",[334,336],[755,757],[1799,1801],[2959,3001],"[transaction.payment_mode, transaction.id, transaction]",[1527,1529],"[clientState.clients, globalDispatch, params.id]",[667,669],"[paymentDispatch]",[1125,1127],"[params.id, paymentDispatch]"]