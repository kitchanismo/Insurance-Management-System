[{"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\index.tsx":"1","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\App.tsx":"2","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\providers\\index.tsx":"3","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Layout\\index.tsx":"4","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Common\\MyNav\\index.tsx":"5","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Common\\MyAlert\\index.tsx":"6","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Layout\\Layout.tsx":"7","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Common\\MyNav\\MyNav.tsx":"8","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Common\\MyAlert\\MyAlert.tsx":"9","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Common\\MyDrawer\\index.tsx":"10","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Pages\\Dashboard\\index.tsx":"11","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Common\\MyDrawer\\MyDrawer.tsx":"12","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Pages\\Dashboard\\Dashboard.tsx":"13","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Common\\MyCard\\index.tsx":"14","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\utils\\helper.ts":"15","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Common\\MyForm\\index.tsx":"16","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Common\\MyCard\\MyCard.tsx":"17","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Common\\MyForm\\MyForm.tsx":"18","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Pages\\Employees\\ViewEmployee\\index.ts":"19","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Pages\\Employees\\index.tsx":"20","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Pages\\Employees\\NewEmployee\\index.tsx":"21","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Pages\\Employees\\EditEmployee\\index.tsx":"22","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Pages\\Employees\\ViewEmployee\\ViewEmployee.tsx":"23","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Pages\\Employees\\Employees.tsx":"24","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Pages\\Employees\\NewEmployee\\NewEmployee.tsx":"25","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Pages\\Employees\\validator.tsx":"26","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Pages\\Employees\\EmployeeCard\\index.tsx":"27","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Pages\\Employees\\EmployeeCard\\EmployeeCard.tsx":"28","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Pages\\Employees\\EditEmployee\\EditEmployee.tsx":"29","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\providers\\GlobalProvider.tsx":"30","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\contexts\\globalContext.tsx":"31","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\hooks\\useGlobalState.tsx":"32"},{"size":346,"mtime":1611444149721,"results":"33","hashOfConfig":"34"},{"size":382,"mtime":1611244726267,"results":"35","hashOfConfig":"34"},{"size":34,"mtime":1611444179233,"results":"36","hashOfConfig":"34"},{"size":26,"mtime":1611243048475,"results":"37","hashOfConfig":"34"},{"size":25,"mtime":1611243034734,"results":"38","hashOfConfig":"34"},{"size":27,"mtime":1611243005833,"results":"39","hashOfConfig":"34"},{"size":1366,"mtime":1611445007570,"results":"40","hashOfConfig":"34"},{"size":2414,"mtime":1611444261203,"results":"41","hashOfConfig":"34"},{"size":793,"mtime":1611444297309,"results":"42","hashOfConfig":"34"},{"size":28,"mtime":1611243022211,"results":"43","hashOfConfig":"34"},{"size":29,"mtime":1611242987395,"results":"44","hashOfConfig":"34"},{"size":2585,"mtime":1611444261289,"results":"45","hashOfConfig":"34"},{"size":160,"mtime":1611243717257,"results":"46","hashOfConfig":"34"},{"size":26,"mtime":1611243015451,"results":"47","hashOfConfig":"34"},{"size":1473,"mtime":1611481858736,"results":"48","hashOfConfig":"34"},{"size":26,"mtime":1611243030289,"results":"49","hashOfConfig":"34"},{"size":1070,"mtime":1611438584439,"results":"50","hashOfConfig":"34"},{"size":6884,"mtime":1611570710617,"results":"51","hashOfConfig":"34"},{"size":32,"mtime":1611441646075,"results":"52","hashOfConfig":"34"},{"size":29,"mtime":1611441516334,"results":"53","hashOfConfig":"34"},{"size":31,"mtime":1611441646075,"results":"54","hashOfConfig":"34"},{"size":32,"mtime":1611443972842,"results":"55","hashOfConfig":"34"},{"size":4431,"mtime":1611473787083,"results":"56","hashOfConfig":"34"},{"size":3069,"mtime":1611473506160,"results":"57","hashOfConfig":"34"},{"size":3980,"mtime":1611483189735,"results":"58","hashOfConfig":"34"},{"size":570,"mtime":1611441757338,"results":"59","hashOfConfig":"34"},{"size":32,"mtime":1611441603701,"results":"60","hashOfConfig":"34"},{"size":3034,"mtime":1611473917430,"results":"61","hashOfConfig":"34"},{"size":3937,"mtime":1611481963530,"results":"62","hashOfConfig":"34"},{"size":1069,"mtime":1611444260248,"results":"63","hashOfConfig":"34"},{"size":535,"mtime":1611443387518,"results":"64","hashOfConfig":"34"},{"size":452,"mtime":1611444260249,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"csx4bj",{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"68"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"68"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"68"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"68"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\index.tsx",[],["135","136"],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\App.tsx",[],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\providers\\index.tsx",[],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Layout\\index.tsx",[],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Common\\MyNav\\index.tsx",[],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Common\\MyAlert\\index.tsx",[],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Layout\\Layout.tsx",[],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Common\\MyNav\\MyNav.tsx",["137"],"import * as React from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nimport Typography from '@material-ui/core/Typography'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Menu from '@material-ui/icons/Menu'\r\nimport Grid from '@material-ui/core/Grid'\r\n\r\nimport { MyDrawer } from 'components/Common/MyDrawer'\r\nimport GlobalContext from 'providers/contexts/globalContext'\r\n\r\nexport const Nav: React.FC = () => {\r\n  const ctx = React.useContext(GlobalContext)\r\n  const history = useHistory()\r\n  const [isActive, setIsActive] = React.useState(false)\r\n\r\n  React.useEffect(() => {\r\n    console.log(history)\r\n    const path = history.location.pathname.substring(1)\r\n\r\n    if (path.includes('employees')) {\r\n      if (path.includes('new')) {\r\n        ctx?.setTitle('Add New Employee')\r\n        return\r\n      }\r\n      if (path.includes('edit')) {\r\n        ctx?.setTitle('Edit Employee')\r\n        return\r\n      }\r\n      ctx?.setTitle('Employee Management')\r\n      return\r\n    }\r\n\r\n    if (path.includes('dashboard')) {\r\n      ctx?.setTitle('Dashboard')\r\n      return\r\n    }\r\n  }, [])\r\n\r\n  const onToggle = (title?: string) => {\r\n    setIsActive((isActive) => !isActive)\r\n\r\n    if (!title) {\r\n      return\r\n    }\r\n\r\n    if (title === 'Employee Management') {\r\n      history.replace('/employees')\r\n    } else if (title === 'Dashboard') {\r\n      history.replace('/')\r\n    }\r\n\r\n    ctx?.setTitle(title)\r\n  }\r\n\r\n  return (\r\n    <AppBar\r\n      style={{\r\n        background:\r\n          'linear-gradient(to left, #e91e63, #df0077, #d0008b, #ba119e, #9c27b0)',\r\n      }}\r\n      position='sticky'\r\n    >\r\n      <MyDrawer onToggle={onToggle} isActive={isActive}></MyDrawer>\r\n      <Toolbar>\r\n        <Grid container xs={12} justify='center'>\r\n          <Grid container xs={1} sm={5} md={4} justify='flex-start'>\r\n            <IconButton\r\n              onClick={() => onToggle()}\r\n              edge='start'\r\n              color='inherit'\r\n              aria-label='menu'\r\n            >\r\n              <Menu />\r\n            </IconButton>\r\n          </Grid>\r\n          <Grid container xs={11} sm={5} md={4} justify='flex-end'>\r\n            <Typography style={{ paddingTop: 8 }} variant='h6'>\r\n              {ctx?.title}\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </Toolbar>\r\n    </AppBar>\r\n  )\r\n}\r\n","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Common\\MyAlert\\MyAlert.tsx",[],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Common\\MyDrawer\\index.tsx",[],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Pages\\Dashboard\\index.tsx",[],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Common\\MyDrawer\\MyDrawer.tsx",["138"],"import React from 'react'\r\nimport Drawer from '@material-ui/core/Drawer'\r\nimport List from '@material-ui/core/List'\r\nimport ArrowBack from '@material-ui/icons/ArrowBack'\r\nimport EmployeesIcon from '@material-ui/icons/People'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport makeStyles from '@material-ui/core/styles/makeStyles'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Divider from '@material-ui/core/Divider'\r\nimport Grid from '@material-ui/core/Grid/Grid'\r\nimport Switch from '@material-ui/core/Switch'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\r\nimport DashboardIcon from '@material-ui/icons/Dashboard'\r\nimport GlobalContext from 'providers/contexts/globalContext'\r\n\r\nexport interface MyDrawerProps {\r\n  isActive: boolean\r\n  onToggle: Function\r\n}\r\n\r\nexport const MyDrawer: React.FC<MyDrawerProps> = (props) => {\r\n  const styles = useStyles()\r\n\r\n  const ctx = React.useContext(GlobalContext)\r\n\r\n  const menus = [\r\n    { name: 'Dashboard', icon: <DashboardIcon /> },\r\n    { name: 'Employee Management', icon: <EmployeesIcon /> },\r\n  ]\r\n\r\n  const list = () => (\r\n    <>\r\n      <List>\r\n        {menus.map((menu, index) => (\r\n          <ListItem style={{ paddingLeft: 0 }} button key={index}>\r\n            <ListItemIcon style={{ paddingLeft: 20 }}>{menu.icon}</ListItemIcon>\r\n\r\n            <ListItemText\r\n              primary={menu.name}\r\n              onClick={() => props.onToggle(menu.name)}\r\n            />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </>\r\n  )\r\n\r\n  return (\r\n    <Drawer anchor='left' open={props.isActive}>\r\n      <Grid container justify='flex-end'>\r\n        <IconButton\r\n          onClick={() => props.onToggle()}\r\n          edge='start'\r\n          color='inherit'\r\n          aria-label='menu'\r\n        >\r\n          <ArrowBack />\r\n        </IconButton>\r\n      </Grid>\r\n      {list()}\r\n      <Divider style={{ marginLeft: 10, marginRight: 10 }}></Divider>\r\n      <FormControlLabel\r\n        style={{ marginLeft: 10, marginTop: 10 }}\r\n        control={\r\n          <Switch\r\n            checked={ctx?.isDark}\r\n            onChange={() => ctx?.setIsDark((isDark) => !isDark)}\r\n            name='checkedA'\r\n            inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n          />\r\n        }\r\n        label='Dark Mode'\r\n      />\r\n    </Drawer>\r\n  )\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  close: {\r\n    paddingTop: 5,\r\n    paddingRight: 5,\r\n  },\r\n}))\r\n\r\nexport default MyDrawer\r\n","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Pages\\Dashboard\\Dashboard.tsx",[],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Common\\MyCard\\index.tsx",[],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\utils\\helper.ts",[],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Common\\MyForm\\index.tsx",[],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Common\\MyCard\\MyCard.tsx",[],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Common\\MyForm\\MyForm.tsx",["139","140","141","142"],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Pages\\Employees\\ViewEmployee\\index.ts",[],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Pages\\Employees\\index.tsx",[],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Pages\\Employees\\NewEmployee\\index.tsx",[],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Pages\\Employees\\EditEmployee\\index.tsx",[],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Pages\\Employees\\ViewEmployee\\ViewEmployee.tsx",["143"],"import React, { useState, useEffect, useContext } from 'react'\r\nimport GlobalContext from 'contexts/globalContext'\r\nimport { useHistory } from 'react-router-dom'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport CardContent from '@material-ui/core/CardContent'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport EditIcon from '@material-ui/icons/Edit'\r\nimport Chip from '@material-ui/core/Chip'\r\nimport Divider from '@material-ui/core/Divider'\r\nimport userIcon from 'assets/profile-user.svg'\r\n\r\nimport { MyCard } from 'components/Common/MyCard'\r\nimport Employee from 'models/employee'\r\n\r\nexport interface ViewUserProps {\r\n  title: string\r\n}\r\n\r\nexport const ViewEmployee: React.SFC<ViewUserProps> = (props) => {\r\n  const ctx = useContext(GlobalContext)\r\n\r\n  useEffect(() => {\r\n    ctx?.setTitle('View Employee')\r\n  }, [])\r\n\r\n  const history = useHistory()\r\n  const [employee, setEmployee] = useState<Partial<Employee> | null>(null)\r\n\r\n  useEffect(() => {\r\n    setEmployee({\r\n      id: 1,\r\n      firstname: 'Firstname',\r\n      middlename: 'Middlename',\r\n      lastname: 'Lastname',\r\n      position: 'Branch Manager',\r\n      civil: 'Single',\r\n      gender: 'Male',\r\n      address: 'Somewhere ssdsdsd sdfdfdfdf sfdfdff',\r\n      contact: '09234545866',\r\n      status: 'active',\r\n    })\r\n  }, [])\r\n\r\n  const info = (title: string, subtitle: any) => (\r\n    <Grid container alignItems='center' direction='column' item xs={6}>\r\n      <Typography component='h6' variant='h6'>\r\n        {title}\r\n      </Typography>\r\n      <Typography variant='subtitle1' color='textSecondary'>\r\n        {subtitle}\r\n      </Typography>\r\n    </Grid>\r\n  )\r\n\r\n  return (\r\n    <Grid container xs={12}>\r\n      {employee && (\r\n        <MyCard\r\n          title='Personal Details'\r\n          endIcon={\r\n            <EditIcon\r\n              style={{ color: 'white', marginTop: 5 }}\r\n              onClick={() => history.push('/employees/edit/' + employee.id)}\r\n            />\r\n          }\r\n        >\r\n          <CardContent>\r\n            <Grid container xs={12} justify='space-between'>\r\n              <Grid\r\n                style={{ paddingLeft: 10 }}\r\n                container\r\n                direction='column'\r\n                item\r\n                xs={7}\r\n                justify='flex-start'\r\n              >\r\n                <Typography component='h6' variant='h6'>\r\n                  {`${employee.lastname}, ${employee.firstname} ${employee.middlename}`}\r\n                </Typography>\r\n                <Typography variant='subtitle1' color='textSecondary'>\r\n                  {employee.position}\r\n                </Typography>\r\n                <Grid item xs={1}>\r\n                  <Chip\r\n                    style={{ marginTop: 5 }}\r\n                    size='small'\r\n                    label={employee.status}\r\n                    variant='default'\r\n                    color={\r\n                      employee.status !== 'active' ? 'secondary' : 'primary'\r\n                    }\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container item xs={5} justify='center' alignItems='center'>\r\n                <IconButton aria-label='play/pause'>\r\n                  <img style={{ width: 100 }} src={userIcon} alt='User Logo' />\r\n                </IconButton>\r\n              </Grid>\r\n            </Grid>\r\n          </CardContent>\r\n          <Divider style={{ marginLeft: 20, marginRight: 20 }}></Divider>\r\n          <CardContent>\r\n            <Grid spacing={1} container xs={12} style={{ paddingLeft: 10 }}>\r\n              {info('Gender', employee.gender)}\r\n              {info('Civil Status', employee.civil)}\r\n              {info('Contact', employee.contact)}\r\n              {info('Birthdate', employee.birthdate || 'N/A')}\r\n              {\r\n                <Grid\r\n                  container\r\n                  alignItems='center'\r\n                  direction='column'\r\n                  item\r\n                  xs={12}\r\n                >\r\n                  <Typography component='h6' variant='h6'>\r\n                    Address\r\n                  </Typography>\r\n                  <Typography variant='subtitle1' color='textSecondary'>\r\n                    {employee.address}\r\n                  </Typography>\r\n                </Grid>\r\n              }\r\n            </Grid>\r\n          </CardContent>\r\n        </MyCard>\r\n      )}\r\n    </Grid>\r\n  )\r\n}\r\n","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Pages\\Employees\\Employees.tsx",[],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Pages\\Employees\\NewEmployee\\NewEmployee.tsx",["144","145"],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Pages\\Employees\\validator.tsx",["146"],"import Joi from 'joi'\r\nimport Employee from 'models/employee'\r\nimport { lettersOnly, notNull, alphaNumeric } from 'utils/helper'\r\n\r\nexport default {\r\n  firstname: lettersOnly('Firstname').min(1).max(50),\r\n  middlename: lettersOnly('Middlename').min(1).max(50),\r\n  lastname: lettersOnly('Lastname').min(1).max(50),\r\n  position: notNull('Position'),\r\n  civil: notNull('Civil Status'),\r\n  gender: notNull('Gender'),\r\n  branch: notNull('Branch'),\r\n  team: Joi.optional(),\r\n  contact: Joi.optional(),\r\n  address: Joi.optional(),\r\n  birthdate: Joi.optional(),\r\n} as Employee\r\n","C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Pages\\Employees\\EmployeeCard\\index.tsx",[],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Pages\\Employees\\EmployeeCard\\EmployeeCard.tsx",[],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\components\\Pages\\Employees\\EditEmployee\\EditEmployee.tsx",[],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\providers\\GlobalProvider.tsx",[],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\contexts\\globalContext.tsx",[],"C:\\Users\\kitchan\\Desktop\\insurance\\client\\src\\hooks\\useGlobalState.tsx",[],{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","replacedBy":"150"},{"ruleId":"151","severity":1,"message":"152","line":40,"column":6,"nodeType":"153","endLine":40,"endColumn":8,"suggestions":"154"},{"ruleId":"155","severity":1,"message":"156","line":24,"column":9,"nodeType":"157","messageId":"158","endLine":24,"endColumn":15},{"ruleId":"155","severity":1,"message":"159","line":1,"column":17,"nodeType":"157","messageId":"158","endLine":1,"endColumn":23},{"ruleId":"155","severity":1,"message":"160","line":1,"column":25,"nodeType":"157","messageId":"158","endLine":1,"endColumn":34},{"ruleId":"155","severity":1,"message":"161","line":1,"column":36,"nodeType":"157","messageId":"158","endLine":1,"endColumn":52},{"ruleId":"155","severity":1,"message":"162","line":21,"column":10,"nodeType":"157","messageId":"158","endLine":21,"endColumn":24},{"ruleId":"151","severity":1,"message":"163","line":25,"column":6,"nodeType":"153","endLine":25,"endColumn":8,"suggestions":"164"},{"ruleId":"155","severity":1,"message":"165","line":7,"column":31,"nodeType":"157","messageId":"158","endLine":7,"endColumn":41},{"ruleId":"155","severity":1,"message":"166","line":9,"column":10,"nodeType":"157","messageId":"158","endLine":9,"endColumn":24},{"ruleId":"155","severity":1,"message":"167","line":3,"column":32,"nodeType":"157","messageId":"158","endLine":3,"endColumn":44},"no-native-reassign",["168"],"no-negated-in-lhs",["169"],"react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'ctx' and 'history'. Either include them or remove the dependency array.","ArrayExpression",["170"],"@typescript-eslint/no-unused-vars","'styles' is assigned a value but never used.","Identifier","unusedVar","'useRef' is defined but never used.","'RefObject' is defined but never used.","'MutableRefObject' is defined but never used.","'endOfYesterday' is defined but never used.","React Hook useEffect has a missing dependency: 'ctx'. Either include it or remove the dependency array.",["171"],"'InputProps' is defined but never used.","'EmployeesProps' is defined but never used.","'alphaNumeric' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"172","fix":"173"},{"desc":"174","fix":"175"},"Update the dependencies array to be: [ctx, history]",{"range":"176","text":"177"},"Update the dependencies array to be: [ctx]",{"range":"178","text":"179"},[1192,1194],"[ctx, history]",[885,887],"[ctx]"]